

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 26 21:03:03 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 24/03/2025 GMT
    57                           ; 
    58                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F45K22 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F38                     ANSELA          equ	3896	;# 
   132   000F39                     ANSELB          equ	3897	;# 
   133   000F3A                     ANSELC          equ	3898	;# 
   134   000F3B                     ANSELD          equ	3899	;# 
   135   000F3C                     ANSELE          equ	3900	;# 
   136   000F3D                     PMD2            equ	3901	;# 
   137   000F3E                     PMD1            equ	3902	;# 
   138   000F3F                     PMD0            equ	3903	;# 
   139   000F40                     VREFCON2        equ	3904	;# 
   140   000F40                     DACCON1         equ	3904	;# 
   141   000F41                     VREFCON1        equ	3905	;# 
   142   000F41                     DACCON0         equ	3905	;# 
   143   000F42                     VREFCON0        equ	3906	;# 
   144   000F42                     FVRCON          equ	3906	;# 
   145   000F43                     CTMUICON        equ	3907	;# 
   146   000F43                     CTMUICONH       equ	3907	;# 
   147   000F44                     CTMUCONL        equ	3908	;# 
   148   000F44                     CTMUCON1        equ	3908	;# 
   149   000F45                     CTMUCONH        equ	3909	;# 
   150   000F45                     CTMUCON0        equ	3909	;# 
   151   000F46                     SRCON1          equ	3910	;# 
   152   000F47                     SRCON0          equ	3911	;# 
   153   000F48                     CCPTMRS1        equ	3912	;# 
   154   000F49                     CCPTMRS0        equ	3913	;# 
   155   000F4A                     T6CON           equ	3914	;# 
   156   000F4B                     PR6             equ	3915	;# 
   157   000F4C                     TMR6            equ	3916	;# 
   158   000F4D                     T5GCON          equ	3917	;# 
   159   000F4E                     T5CON           equ	3918	;# 
   160   000F4F                     TMR5            equ	3919	;# 
   161   000F4F                     TMR5L           equ	3919	;# 
   162   000F50                     TMR5H           equ	3920	;# 
   163   000F51                     T4CON           equ	3921	;# 
   164   000F52                     PR4             equ	3922	;# 
   165   000F53                     TMR4            equ	3923	;# 
   166   000F54                     CCP5CON         equ	3924	;# 
   167   000F55                     CCPR5           equ	3925	;# 
   168   000F55                     CCPR5L          equ	3925	;# 
   169   000F56                     CCPR5H          equ	3926	;# 
   170   000F57                     CCP4CON         equ	3927	;# 
   171   000F58                     CCPR4           equ	3928	;# 
   172   000F58                     CCPR4L          equ	3928	;# 
   173   000F59                     CCPR4H          equ	3929	;# 
   174   000F5A                     PSTR3CON        equ	3930	;# 
   175   000F5B                     ECCP3AS         equ	3931	;# 
   176   000F5B                     CCP3AS          equ	3931	;# 
   177   000F5C                     PWM3CON         equ	3932	;# 
   178   000F5D                     CCP3CON         equ	3933	;# 
   179   000F5E                     CCPR3           equ	3934	;# 
   180   000F5E                     CCPR3L          equ	3934	;# 
   181   000F5F                     CCPR3H          equ	3935	;# 
   182   000F60                     SLRCON          equ	3936	;# 
   183   000F61                     WPUB            equ	3937	;# 
   184   000F62                     IOCB            equ	3938	;# 
   185   000F63                     PSTR2CON        equ	3939	;# 
   186   000F64                     ECCP2AS         equ	3940	;# 
   187   000F64                     CCP2AS          equ	3940	;# 
   188   000F65                     PWM2CON         equ	3941	;# 
   189   000F66                     CCP2CON         equ	3942	;# 
   190   000F67                     CCPR2           equ	3943	;# 
   191   000F67                     CCPR2L          equ	3943	;# 
   192   000F68                     CCPR2H          equ	3944	;# 
   193   000F69                     SSP2CON3        equ	3945	;# 
   194   000F6A                     SSP2MSK         equ	3946	;# 
   195   000F6B                     SSP2CON2        equ	3947	;# 
   196   000F6C                     SSP2CON1        equ	3948	;# 
   197   000F6D                     SSP2STAT        equ	3949	;# 
   198   000F6E                     SSP2ADD         equ	3950	;# 
   199   000F6F                     SSP2BUF         equ	3951	;# 
   200   000F70                     BAUDCON2        equ	3952	;# 
   201   000F70                     BAUD2CON        equ	3952	;# 
   202   000F71                     RCSTA2          equ	3953	;# 
   203   000F71                     RC2STA          equ	3953	;# 
   204   000F72                     TXSTA2          equ	3954	;# 
   205   000F72                     TX2STA          equ	3954	;# 
   206   000F73                     TXREG2          equ	3955	;# 
   207   000F73                     TX2REG          equ	3955	;# 
   208   000F74                     RCREG2          equ	3956	;# 
   209   000F74                     RC2REG          equ	3956	;# 
   210   000F75                     SPBRG2          equ	3957	;# 
   211   000F75                     SP2BRG          equ	3957	;# 
   212   000F76                     SPBRGH2         equ	3958	;# 
   213   000F76                     SP2BRGH         equ	3958	;# 
   214   000F77                     CM2CON1         equ	3959	;# 
   215   000F77                     CM12CON         equ	3959	;# 
   216   000F78                     CM2CON0         equ	3960	;# 
   217   000F78                     CM2CON          equ	3960	;# 
   218   000F79                     CM1CON0         equ	3961	;# 
   219   000F79                     CM1CON          equ	3961	;# 
   220   000F7A                     PIE4            equ	3962	;# 
   221   000F7B                     PIR4            equ	3963	;# 
   222   000F7C                     IPR4            equ	3964	;# 
   223   000F7D                     PIE5            equ	3965	;# 
   224   000F7E                     PIR5            equ	3966	;# 
   225   000F7F                     IPR5            equ	3967	;# 
   226   000F80                     PORTA           equ	3968	;# 
   227   000F81                     PORTB           equ	3969	;# 
   228   000F82                     PORTC           equ	3970	;# 
   229   000F83                     PORTD           equ	3971	;# 
   230   000F84                     PORTE           equ	3972	;# 
   231   000F89                     LATA            equ	3977	;# 
   232   000F8A                     LATB            equ	3978	;# 
   233   000F8B                     LATC            equ	3979	;# 
   234   000F8C                     LATD            equ	3980	;# 
   235   000F8D                     LATE            equ	3981	;# 
   236   000F92                     TRISA           equ	3986	;# 
   237   000F92                     DDRA            equ	3986	;# 
   238   000F93                     TRISB           equ	3987	;# 
   239   000F93                     DDRB            equ	3987	;# 
   240   000F94                     TRISC           equ	3988	;# 
   241   000F94                     DDRC            equ	3988	;# 
   242   000F95                     TRISD           equ	3989	;# 
   243   000F95                     DDRD            equ	3989	;# 
   244   000F96                     TRISE           equ	3990	;# 
   245   000F96                     DDRE            equ	3990	;# 
   246   000F9B                     OSCTUNE         equ	3995	;# 
   247   000F9C                     HLVDCON         equ	3996	;# 
   248   000F9C                     LVDCON          equ	3996	;# 
   249   000F9D                     PIE1            equ	3997	;# 
   250   000F9E                     PIR1            equ	3998	;# 
   251   000F9F                     IPR1            equ	3999	;# 
   252   000FA0                     PIE2            equ	4000	;# 
   253   000FA1                     PIR2            equ	4001	;# 
   254   000FA2                     IPR2            equ	4002	;# 
   255   000FA3                     PIE3            equ	4003	;# 
   256   000FA4                     PIR3            equ	4004	;# 
   257   000FA5                     IPR3            equ	4005	;# 
   258   000FA6                     EECON1          equ	4006	;# 
   259   000FA7                     EECON2          equ	4007	;# 
   260   000FA8                     EEDATA          equ	4008	;# 
   261   000FA9                     EEADR           equ	4009	;# 
   262   000FAB                     RCSTA1          equ	4011	;# 
   263   000FAB                     RCSTA           equ	4011	;# 
   264   000FAB                     RC1STA          equ	4011	;# 
   265   000FAC                     TXSTA1          equ	4012	;# 
   266   000FAC                     TXSTA           equ	4012	;# 
   267   000FAC                     TX1STA          equ	4012	;# 
   268   000FAD                     TXREG1          equ	4013	;# 
   269   000FAD                     TXREG           equ	4013	;# 
   270   000FAD                     TX1REG          equ	4013	;# 
   271   000FAE                     RCREG1          equ	4014	;# 
   272   000FAE                     RCREG           equ	4014	;# 
   273   000FAE                     RC1REG          equ	4014	;# 
   274   000FAF                     SPBRG1          equ	4015	;# 
   275   000FAF                     SPBRG           equ	4015	;# 
   276   000FAF                     SP1BRG          equ	4015	;# 
   277   000FB0                     SPBRGH1         equ	4016	;# 
   278   000FB0                     SPBRGH          equ	4016	;# 
   279   000FB0                     SP1BRGH         equ	4016	;# 
   280   000FB1                     T3CON           equ	4017	;# 
   281   000FB2                     TMR3            equ	4018	;# 
   282   000FB2                     TMR3L           equ	4018	;# 
   283   000FB3                     TMR3H           equ	4019	;# 
   284   000FB4                     T3GCON          equ	4020	;# 
   285   000FB6                     ECCP1AS         equ	4022	;# 
   286   000FB6                     ECCPAS          equ	4022	;# 
   287   000FB7                     PWM1CON         equ	4023	;# 
   288   000FB7                     PWMCON          equ	4023	;# 
   289   000FB8                     BAUDCON1        equ	4024	;# 
   290   000FB8                     BAUDCON         equ	4024	;# 
   291   000FB8                     BAUDCTL         equ	4024	;# 
   292   000FB8                     BAUD1CON        equ	4024	;# 
   293   000FB9                     PSTR1CON        equ	4025	;# 
   294   000FB9                     PSTRCON         equ	4025	;# 
   295   000FBA                     T2CON           equ	4026	;# 
   296   000FBB                     PR2             equ	4027	;# 
   297   000FBC                     TMR2            equ	4028	;# 
   298   000FBD                     CCP1CON         equ	4029	;# 
   299   000FBE                     CCPR1           equ	4030	;# 
   300   000FBE                     CCPR1L          equ	4030	;# 
   301   000FBF                     CCPR1H          equ	4031	;# 
   302   000FC0                     ADCON2          equ	4032	;# 
   303   000FC1                     ADCON1          equ	4033	;# 
   304   000FC2                     ADCON0          equ	4034	;# 
   305   000FC3                     ADRES           equ	4035	;# 
   306   000FC3                     ADRESL          equ	4035	;# 
   307   000FC4                     ADRESH          equ	4036	;# 
   308   000FC5                     SSP1CON2        equ	4037	;# 
   309   000FC5                     SSPCON2         equ	4037	;# 
   310   000FC6                     SSP1CON1        equ	4038	;# 
   311   000FC6                     SSPCON1         equ	4038	;# 
   312   000FC7                     SSP1STAT        equ	4039	;# 
   313   000FC7                     SSPSTAT         equ	4039	;# 
   314   000FC8                     SSP1ADD         equ	4040	;# 
   315   000FC8                     SSPADD          equ	4040	;# 
   316   000FC9                     SSP1BUF         equ	4041	;# 
   317   000FC9                     SSPBUF          equ	4041	;# 
   318   000FCA                     SSP1MSK         equ	4042	;# 
   319   000FCA                     SSPMSK          equ	4042	;# 
   320   000FCB                     SSP1CON3        equ	4043	;# 
   321   000FCB                     SSPCON3         equ	4043	;# 
   322   000FCC                     T1GCON          equ	4044	;# 
   323   000FCD                     T1CON           equ	4045	;# 
   324   000FCE                     TMR1            equ	4046	;# 
   325   000FCE                     TMR1L           equ	4046	;# 
   326   000FCF                     TMR1H           equ	4047	;# 
   327   000FD0                     RCON            equ	4048	;# 
   328   000FD1                     WDTCON          equ	4049	;# 
   329   000FD2                     OSCCON2         equ	4050	;# 
   330   000FD3                     OSCCON          equ	4051	;# 
   331   000FD5                     T0CON           equ	4053	;# 
   332   000FD6                     TMR0            equ	4054	;# 
   333   000FD6                     TMR0L           equ	4054	;# 
   334   000FD7                     TMR0H           equ	4055	;# 
   335   000FD8                     STATUS          equ	4056	;# 
   336   000FD9                     FSR2            equ	4057	;# 
   337   000FD9                     FSR2L           equ	4057	;# 
   338   000FDA                     FSR2H           equ	4058	;# 
   339   000FDB                     PLUSW2          equ	4059	;# 
   340   000FDC                     PREINC2         equ	4060	;# 
   341   000FDD                     POSTDEC2        equ	4061	;# 
   342   000FDE                     POSTINC2        equ	4062	;# 
   343   000FDF                     INDF2           equ	4063	;# 
   344   000FE0                     BSR             equ	4064	;# 
   345   000FE1                     FSR1            equ	4065	;# 
   346   000FE1                     FSR1L           equ	4065	;# 
   347   000FE2                     FSR1H           equ	4066	;# 
   348   000FE3                     PLUSW1          equ	4067	;# 
   349   000FE4                     PREINC1         equ	4068	;# 
   350   000FE5                     POSTDEC1        equ	4069	;# 
   351   000FE6                     POSTINC1        equ	4070	;# 
   352   000FE7                     INDF1           equ	4071	;# 
   353   000FE8                     WREG            equ	4072	;# 
   354   000FE9                     FSR0            equ	4073	;# 
   355   000FE9                     FSR0L           equ	4073	;# 
   356   000FEA                     FSR0H           equ	4074	;# 
   357   000FEB                     PLUSW0          equ	4075	;# 
   358   000FEC                     PREINC0         equ	4076	;# 
   359   000FED                     POSTDEC0        equ	4077	;# 
   360   000FEE                     POSTINC0        equ	4078	;# 
   361   000FEF                     INDF0           equ	4079	;# 
   362   000FF0                     INTCON3         equ	4080	;# 
   363   000FF1                     INTCON2         equ	4081	;# 
   364   000FF2                     INTCON          equ	4082	;# 
   365   000FF3                     PROD            equ	4083	;# 
   366   000FF3                     PRODL           equ	4083	;# 
   367   000FF4                     PRODH           equ	4084	;# 
   368   000FF5                     TABLAT          equ	4085	;# 
   369   000FF6                     TBLPTR          equ	4086	;# 
   370   000FF6                     TBLPTRL         equ	4086	;# 
   371   000FF7                     TBLPTRH         equ	4087	;# 
   372   000FF8                     TBLPTRU         equ	4088	;# 
   373   000FF9                     PCLAT           equ	4089	;# 
   374   000FF9                     PC              equ	4089	;# 
   375   000FF9                     PCL             equ	4089	;# 
   376   000FFA                     PCLATH          equ	4090	;# 
   377   000FFB                     PCLATU          equ	4091	;# 
   378   000FFC                     STKPTR          equ	4092	;# 
   379   000FFD                     TOS             equ	4093	;# 
   380   000FFD                     TOSL            equ	4093	;# 
   381   000FFE                     TOSH            equ	4094	;# 
   382   000FFF                     TOSU            equ	4095	;# 
   383   000F38                     ANSELA          equ	3896	;# 
   384   000F39                     ANSELB          equ	3897	;# 
   385   000F3A                     ANSELC          equ	3898	;# 
   386   000F3B                     ANSELD          equ	3899	;# 
   387   000F3C                     ANSELE          equ	3900	;# 
   388   000F3D                     PMD2            equ	3901	;# 
   389   000F3E                     PMD1            equ	3902	;# 
   390   000F3F                     PMD0            equ	3903	;# 
   391   000F40                     VREFCON2        equ	3904	;# 
   392   000F40                     DACCON1         equ	3904	;# 
   393   000F41                     VREFCON1        equ	3905	;# 
   394   000F41                     DACCON0         equ	3905	;# 
   395   000F42                     VREFCON0        equ	3906	;# 
   396   000F42                     FVRCON          equ	3906	;# 
   397   000F43                     CTMUICON        equ	3907	;# 
   398   000F43                     CTMUICONH       equ	3907	;# 
   399   000F44                     CTMUCONL        equ	3908	;# 
   400   000F44                     CTMUCON1        equ	3908	;# 
   401   000F45                     CTMUCONH        equ	3909	;# 
   402   000F45                     CTMUCON0        equ	3909	;# 
   403   000F46                     SRCON1          equ	3910	;# 
   404   000F47                     SRCON0          equ	3911	;# 
   405   000F48                     CCPTMRS1        equ	3912	;# 
   406   000F49                     CCPTMRS0        equ	3913	;# 
   407   000F4A                     T6CON           equ	3914	;# 
   408   000F4B                     PR6             equ	3915	;# 
   409   000F4C                     TMR6            equ	3916	;# 
   410   000F4D                     T5GCON          equ	3917	;# 
   411   000F4E                     T5CON           equ	3918	;# 
   412   000F4F                     TMR5            equ	3919	;# 
   413   000F4F                     TMR5L           equ	3919	;# 
   414   000F50                     TMR5H           equ	3920	;# 
   415   000F51                     T4CON           equ	3921	;# 
   416   000F52                     PR4             equ	3922	;# 
   417   000F53                     TMR4            equ	3923	;# 
   418   000F54                     CCP5CON         equ	3924	;# 
   419   000F55                     CCPR5           equ	3925	;# 
   420   000F55                     CCPR5L          equ	3925	;# 
   421   000F56                     CCPR5H          equ	3926	;# 
   422   000F57                     CCP4CON         equ	3927	;# 
   423   000F58                     CCPR4           equ	3928	;# 
   424   000F58                     CCPR4L          equ	3928	;# 
   425   000F59                     CCPR4H          equ	3929	;# 
   426   000F5A                     PSTR3CON        equ	3930	;# 
   427   000F5B                     ECCP3AS         equ	3931	;# 
   428   000F5B                     CCP3AS          equ	3931	;# 
   429   000F5C                     PWM3CON         equ	3932	;# 
   430   000F5D                     CCP3CON         equ	3933	;# 
   431   000F5E                     CCPR3           equ	3934	;# 
   432   000F5E                     CCPR3L          equ	3934	;# 
   433   000F5F                     CCPR3H          equ	3935	;# 
   434   000F60                     SLRCON          equ	3936	;# 
   435   000F61                     WPUB            equ	3937	;# 
   436   000F62                     IOCB            equ	3938	;# 
   437   000F63                     PSTR2CON        equ	3939	;# 
   438   000F64                     ECCP2AS         equ	3940	;# 
   439   000F64                     CCP2AS          equ	3940	;# 
   440   000F65                     PWM2CON         equ	3941	;# 
   441   000F66                     CCP2CON         equ	3942	;# 
   442   000F67                     CCPR2           equ	3943	;# 
   443   000F67                     CCPR2L          equ	3943	;# 
   444   000F68                     CCPR2H          equ	3944	;# 
   445   000F69                     SSP2CON3        equ	3945	;# 
   446   000F6A                     SSP2MSK         equ	3946	;# 
   447   000F6B                     SSP2CON2        equ	3947	;# 
   448   000F6C                     SSP2CON1        equ	3948	;# 
   449   000F6D                     SSP2STAT        equ	3949	;# 
   450   000F6E                     SSP2ADD         equ	3950	;# 
   451   000F6F                     SSP2BUF         equ	3951	;# 
   452   000F70                     BAUDCON2        equ	3952	;# 
   453   000F70                     BAUD2CON        equ	3952	;# 
   454   000F71                     RCSTA2          equ	3953	;# 
   455   000F71                     RC2STA          equ	3953	;# 
   456   000F72                     TXSTA2          equ	3954	;# 
   457   000F72                     TX2STA          equ	3954	;# 
   458   000F73                     TXREG2          equ	3955	;# 
   459   000F73                     TX2REG          equ	3955	;# 
   460   000F74                     RCREG2          equ	3956	;# 
   461   000F74                     RC2REG          equ	3956	;# 
   462   000F75                     SPBRG2          equ	3957	;# 
   463   000F75                     SP2BRG          equ	3957	;# 
   464   000F76                     SPBRGH2         equ	3958	;# 
   465   000F76                     SP2BRGH         equ	3958	;# 
   466   000F77                     CM2CON1         equ	3959	;# 
   467   000F77                     CM12CON         equ	3959	;# 
   468   000F78                     CM2CON0         equ	3960	;# 
   469   000F78                     CM2CON          equ	3960	;# 
   470   000F79                     CM1CON0         equ	3961	;# 
   471   000F79                     CM1CON          equ	3961	;# 
   472   000F7A                     PIE4            equ	3962	;# 
   473   000F7B                     PIR4            equ	3963	;# 
   474   000F7C                     IPR4            equ	3964	;# 
   475   000F7D                     PIE5            equ	3965	;# 
   476   000F7E                     PIR5            equ	3966	;# 
   477   000F7F                     IPR5            equ	3967	;# 
   478   000F80                     PORTA           equ	3968	;# 
   479   000F81                     PORTB           equ	3969	;# 
   480   000F82                     PORTC           equ	3970	;# 
   481   000F83                     PORTD           equ	3971	;# 
   482   000F84                     PORTE           equ	3972	;# 
   483   000F89                     LATA            equ	3977	;# 
   484   000F8A                     LATB            equ	3978	;# 
   485   000F8B                     LATC            equ	3979	;# 
   486   000F8C                     LATD            equ	3980	;# 
   487   000F8D                     LATE            equ	3981	;# 
   488   000F92                     TRISA           equ	3986	;# 
   489   000F92                     DDRA            equ	3986	;# 
   490   000F93                     TRISB           equ	3987	;# 
   491   000F93                     DDRB            equ	3987	;# 
   492   000F94                     TRISC           equ	3988	;# 
   493   000F94                     DDRC            equ	3988	;# 
   494   000F95                     TRISD           equ	3989	;# 
   495   000F95                     DDRD            equ	3989	;# 
   496   000F96                     TRISE           equ	3990	;# 
   497   000F96                     DDRE            equ	3990	;# 
   498   000F9B                     OSCTUNE         equ	3995	;# 
   499   000F9C                     HLVDCON         equ	3996	;# 
   500   000F9C                     LVDCON          equ	3996	;# 
   501   000F9D                     PIE1            equ	3997	;# 
   502   000F9E                     PIR1            equ	3998	;# 
   503   000F9F                     IPR1            equ	3999	;# 
   504   000FA0                     PIE2            equ	4000	;# 
   505   000FA1                     PIR2            equ	4001	;# 
   506   000FA2                     IPR2            equ	4002	;# 
   507   000FA3                     PIE3            equ	4003	;# 
   508   000FA4                     PIR3            equ	4004	;# 
   509   000FA5                     IPR3            equ	4005	;# 
   510   000FA6                     EECON1          equ	4006	;# 
   511   000FA7                     EECON2          equ	4007	;# 
   512   000FA8                     EEDATA          equ	4008	;# 
   513   000FA9                     EEADR           equ	4009	;# 
   514   000FAB                     RCSTA1          equ	4011	;# 
   515   000FAB                     RCSTA           equ	4011	;# 
   516   000FAB                     RC1STA          equ	4011	;# 
   517   000FAC                     TXSTA1          equ	4012	;# 
   518   000FAC                     TXSTA           equ	4012	;# 
   519   000FAC                     TX1STA          equ	4012	;# 
   520   000FAD                     TXREG1          equ	4013	;# 
   521   000FAD                     TXREG           equ	4013	;# 
   522   000FAD                     TX1REG          equ	4013	;# 
   523   000FAE                     RCREG1          equ	4014	;# 
   524   000FAE                     RCREG           equ	4014	;# 
   525   000FAE                     RC1REG          equ	4014	;# 
   526   000FAF                     SPBRG1          equ	4015	;# 
   527   000FAF                     SPBRG           equ	4015	;# 
   528   000FAF                     SP1BRG          equ	4015	;# 
   529   000FB0                     SPBRGH1         equ	4016	;# 
   530   000FB0                     SPBRGH          equ	4016	;# 
   531   000FB0                     SP1BRGH         equ	4016	;# 
   532   000FB1                     T3CON           equ	4017	;# 
   533   000FB2                     TMR3            equ	4018	;# 
   534   000FB2                     TMR3L           equ	4018	;# 
   535   000FB3                     TMR3H           equ	4019	;# 
   536   000FB4                     T3GCON          equ	4020	;# 
   537   000FB6                     ECCP1AS         equ	4022	;# 
   538   000FB6                     ECCPAS          equ	4022	;# 
   539   000FB7                     PWM1CON         equ	4023	;# 
   540   000FB7                     PWMCON          equ	4023	;# 
   541   000FB8                     BAUDCON1        equ	4024	;# 
   542   000FB8                     BAUDCON         equ	4024	;# 
   543   000FB8                     BAUDCTL         equ	4024	;# 
   544   000FB8                     BAUD1CON        equ	4024	;# 
   545   000FB9                     PSTR1CON        equ	4025	;# 
   546   000FB9                     PSTRCON         equ	4025	;# 
   547   000FBA                     T2CON           equ	4026	;# 
   548   000FBB                     PR2             equ	4027	;# 
   549   000FBC                     TMR2            equ	4028	;# 
   550   000FBD                     CCP1CON         equ	4029	;# 
   551   000FBE                     CCPR1           equ	4030	;# 
   552   000FBE                     CCPR1L          equ	4030	;# 
   553   000FBF                     CCPR1H          equ	4031	;# 
   554   000FC0                     ADCON2          equ	4032	;# 
   555   000FC1                     ADCON1          equ	4033	;# 
   556   000FC2                     ADCON0          equ	4034	;# 
   557   000FC3                     ADRES           equ	4035	;# 
   558   000FC3                     ADRESL          equ	4035	;# 
   559   000FC4                     ADRESH          equ	4036	;# 
   560   000FC5                     SSP1CON2        equ	4037	;# 
   561   000FC5                     SSPCON2         equ	4037	;# 
   562   000FC6                     SSP1CON1        equ	4038	;# 
   563   000FC6                     SSPCON1         equ	4038	;# 
   564   000FC7                     SSP1STAT        equ	4039	;# 
   565   000FC7                     SSPSTAT         equ	4039	;# 
   566   000FC8                     SSP1ADD         equ	4040	;# 
   567   000FC8                     SSPADD          equ	4040	;# 
   568   000FC9                     SSP1BUF         equ	4041	;# 
   569   000FC9                     SSPBUF          equ	4041	;# 
   570   000FCA                     SSP1MSK         equ	4042	;# 
   571   000FCA                     SSPMSK          equ	4042	;# 
   572   000FCB                     SSP1CON3        equ	4043	;# 
   573   000FCB                     SSPCON3         equ	4043	;# 
   574   000FCC                     T1GCON          equ	4044	;# 
   575   000FCD                     T1CON           equ	4045	;# 
   576   000FCE                     TMR1            equ	4046	;# 
   577   000FCE                     TMR1L           equ	4046	;# 
   578   000FCF                     TMR1H           equ	4047	;# 
   579   000FD0                     RCON            equ	4048	;# 
   580   000FD1                     WDTCON          equ	4049	;# 
   581   000FD2                     OSCCON2         equ	4050	;# 
   582   000FD3                     OSCCON          equ	4051	;# 
   583   000FD5                     T0CON           equ	4053	;# 
   584   000FD6                     TMR0            equ	4054	;# 
   585   000FD6                     TMR0L           equ	4054	;# 
   586   000FD7                     TMR0H           equ	4055	;# 
   587   000FD8                     STATUS          equ	4056	;# 
   588   000FD9                     FSR2            equ	4057	;# 
   589   000FD9                     FSR2L           equ	4057	;# 
   590   000FDA                     FSR2H           equ	4058	;# 
   591   000FDB                     PLUSW2          equ	4059	;# 
   592   000FDC                     PREINC2         equ	4060	;# 
   593   000FDD                     POSTDEC2        equ	4061	;# 
   594   000FDE                     POSTINC2        equ	4062	;# 
   595   000FDF                     INDF2           equ	4063	;# 
   596   000FE0                     BSR             equ	4064	;# 
   597   000FE1                     FSR1            equ	4065	;# 
   598   000FE1                     FSR1L           equ	4065	;# 
   599   000FE2                     FSR1H           equ	4066	;# 
   600   000FE3                     PLUSW1          equ	4067	;# 
   601   000FE4                     PREINC1         equ	4068	;# 
   602   000FE5                     POSTDEC1        equ	4069	;# 
   603   000FE6                     POSTINC1        equ	4070	;# 
   604   000FE7                     INDF1           equ	4071	;# 
   605   000FE8                     WREG            equ	4072	;# 
   606   000FE9                     FSR0            equ	4073	;# 
   607   000FE9                     FSR0L           equ	4073	;# 
   608   000FEA                     FSR0H           equ	4074	;# 
   609   000FEB                     PLUSW0          equ	4075	;# 
   610   000FEC                     PREINC0         equ	4076	;# 
   611   000FED                     POSTDEC0        equ	4077	;# 
   612   000FEE                     POSTINC0        equ	4078	;# 
   613   000FEF                     INDF0           equ	4079	;# 
   614   000FF0                     INTCON3         equ	4080	;# 
   615   000FF1                     INTCON2         equ	4081	;# 
   616   000FF2                     INTCON          equ	4082	;# 
   617   000FF3                     PROD            equ	4083	;# 
   618   000FF3                     PRODL           equ	4083	;# 
   619   000FF4                     PRODH           equ	4084	;# 
   620   000FF5                     TABLAT          equ	4085	;# 
   621   000FF6                     TBLPTR          equ	4086	;# 
   622   000FF6                     TBLPTRL         equ	4086	;# 
   623   000FF7                     TBLPTRH         equ	4087	;# 
   624   000FF8                     TBLPTRU         equ	4088	;# 
   625   000FF9                     PCLAT           equ	4089	;# 
   626   000FF9                     PC              equ	4089	;# 
   627   000FF9                     PCL             equ	4089	;# 
   628   000FFA                     PCLATH          equ	4090	;# 
   629   000FFB                     PCLATU          equ	4091	;# 
   630   000FFC                     STKPTR          equ	4092	;# 
   631   000FFD                     TOS             equ	4093	;# 
   632   000FFD                     TOSL            equ	4093	;# 
   633   000FFE                     TOSH            equ	4094	;# 
   634   000FFF                     TOSU            equ	4095	;# 
   635   000F38                     ANSELA          equ	3896	;# 
   636   000F39                     ANSELB          equ	3897	;# 
   637   000F3A                     ANSELC          equ	3898	;# 
   638   000F3B                     ANSELD          equ	3899	;# 
   639   000F3C                     ANSELE          equ	3900	;# 
   640   000F3D                     PMD2            equ	3901	;# 
   641   000F3E                     PMD1            equ	3902	;# 
   642   000F3F                     PMD0            equ	3903	;# 
   643   000F40                     VREFCON2        equ	3904	;# 
   644   000F40                     DACCON1         equ	3904	;# 
   645   000F41                     VREFCON1        equ	3905	;# 
   646   000F41                     DACCON0         equ	3905	;# 
   647   000F42                     VREFCON0        equ	3906	;# 
   648   000F42                     FVRCON          equ	3906	;# 
   649   000F43                     CTMUICON        equ	3907	;# 
   650   000F43                     CTMUICONH       equ	3907	;# 
   651   000F44                     CTMUCONL        equ	3908	;# 
   652   000F44                     CTMUCON1        equ	3908	;# 
   653   000F45                     CTMUCONH        equ	3909	;# 
   654   000F45                     CTMUCON0        equ	3909	;# 
   655   000F46                     SRCON1          equ	3910	;# 
   656   000F47                     SRCON0          equ	3911	;# 
   657   000F48                     CCPTMRS1        equ	3912	;# 
   658   000F49                     CCPTMRS0        equ	3913	;# 
   659   000F4A                     T6CON           equ	3914	;# 
   660   000F4B                     PR6             equ	3915	;# 
   661   000F4C                     TMR6            equ	3916	;# 
   662   000F4D                     T5GCON          equ	3917	;# 
   663   000F4E                     T5CON           equ	3918	;# 
   664   000F4F                     TMR5            equ	3919	;# 
   665   000F4F                     TMR5L           equ	3919	;# 
   666   000F50                     TMR5H           equ	3920	;# 
   667   000F51                     T4CON           equ	3921	;# 
   668   000F52                     PR4             equ	3922	;# 
   669   000F53                     TMR4            equ	3923	;# 
   670   000F54                     CCP5CON         equ	3924	;# 
   671   000F55                     CCPR5           equ	3925	;# 
   672   000F55                     CCPR5L          equ	3925	;# 
   673   000F56                     CCPR5H          equ	3926	;# 
   674   000F57                     CCP4CON         equ	3927	;# 
   675   000F58                     CCPR4           equ	3928	;# 
   676   000F58                     CCPR4L          equ	3928	;# 
   677   000F59                     CCPR4H          equ	3929	;# 
   678   000F5A                     PSTR3CON        equ	3930	;# 
   679   000F5B                     ECCP3AS         equ	3931	;# 
   680   000F5B                     CCP3AS          equ	3931	;# 
   681   000F5C                     PWM3CON         equ	3932	;# 
   682   000F5D                     CCP3CON         equ	3933	;# 
   683   000F5E                     CCPR3           equ	3934	;# 
   684   000F5E                     CCPR3L          equ	3934	;# 
   685   000F5F                     CCPR3H          equ	3935	;# 
   686   000F60                     SLRCON          equ	3936	;# 
   687   000F61                     WPUB            equ	3937	;# 
   688   000F62                     IOCB            equ	3938	;# 
   689   000F63                     PSTR2CON        equ	3939	;# 
   690   000F64                     ECCP2AS         equ	3940	;# 
   691   000F64                     CCP2AS          equ	3940	;# 
   692   000F65                     PWM2CON         equ	3941	;# 
   693   000F66                     CCP2CON         equ	3942	;# 
   694   000F67                     CCPR2           equ	3943	;# 
   695   000F67                     CCPR2L          equ	3943	;# 
   696   000F68                     CCPR2H          equ	3944	;# 
   697   000F69                     SSP2CON3        equ	3945	;# 
   698   000F6A                     SSP2MSK         equ	3946	;# 
   699   000F6B                     SSP2CON2        equ	3947	;# 
   700   000F6C                     SSP2CON1        equ	3948	;# 
   701   000F6D                     SSP2STAT        equ	3949	;# 
   702   000F6E                     SSP2ADD         equ	3950	;# 
   703   000F6F                     SSP2BUF         equ	3951	;# 
   704   000F70                     BAUDCON2        equ	3952	;# 
   705   000F70                     BAUD2CON        equ	3952	;# 
   706   000F71                     RCSTA2          equ	3953	;# 
   707   000F71                     RC2STA          equ	3953	;# 
   708   000F72                     TXSTA2          equ	3954	;# 
   709   000F72                     TX2STA          equ	3954	;# 
   710   000F73                     TXREG2          equ	3955	;# 
   711   000F73                     TX2REG          equ	3955	;# 
   712   000F74                     RCREG2          equ	3956	;# 
   713   000F74                     RC2REG          equ	3956	;# 
   714   000F75                     SPBRG2          equ	3957	;# 
   715   000F75                     SP2BRG          equ	3957	;# 
   716   000F76                     SPBRGH2         equ	3958	;# 
   717   000F76                     SP2BRGH         equ	3958	;# 
   718   000F77                     CM2CON1         equ	3959	;# 
   719   000F77                     CM12CON         equ	3959	;# 
   720   000F78                     CM2CON0         equ	3960	;# 
   721   000F78                     CM2CON          equ	3960	;# 
   722   000F79                     CM1CON0         equ	3961	;# 
   723   000F79                     CM1CON          equ	3961	;# 
   724   000F7A                     PIE4            equ	3962	;# 
   725   000F7B                     PIR4            equ	3963	;# 
   726   000F7C                     IPR4            equ	3964	;# 
   727   000F7D                     PIE5            equ	3965	;# 
   728   000F7E                     PIR5            equ	3966	;# 
   729   000F7F                     IPR5            equ	3967	;# 
   730   000F80                     PORTA           equ	3968	;# 
   731   000F81                     PORTB           equ	3969	;# 
   732   000F82                     PORTC           equ	3970	;# 
   733   000F83                     PORTD           equ	3971	;# 
   734   000F84                     PORTE           equ	3972	;# 
   735   000F89                     LATA            equ	3977	;# 
   736   000F8A                     LATB            equ	3978	;# 
   737   000F8B                     LATC            equ	3979	;# 
   738   000F8C                     LATD            equ	3980	;# 
   739   000F8D                     LATE            equ	3981	;# 
   740   000F92                     TRISA           equ	3986	;# 
   741   000F92                     DDRA            equ	3986	;# 
   742   000F93                     TRISB           equ	3987	;# 
   743   000F93                     DDRB            equ	3987	;# 
   744   000F94                     TRISC           equ	3988	;# 
   745   000F94                     DDRC            equ	3988	;# 
   746   000F95                     TRISD           equ	3989	;# 
   747   000F95                     DDRD            equ	3989	;# 
   748   000F96                     TRISE           equ	3990	;# 
   749   000F96                     DDRE            equ	3990	;# 
   750   000F9B                     OSCTUNE         equ	3995	;# 
   751   000F9C                     HLVDCON         equ	3996	;# 
   752   000F9C                     LVDCON          equ	3996	;# 
   753   000F9D                     PIE1            equ	3997	;# 
   754   000F9E                     PIR1            equ	3998	;# 
   755   000F9F                     IPR1            equ	3999	;# 
   756   000FA0                     PIE2            equ	4000	;# 
   757   000FA1                     PIR2            equ	4001	;# 
   758   000FA2                     IPR2            equ	4002	;# 
   759   000FA3                     PIE3            equ	4003	;# 
   760   000FA4                     PIR3            equ	4004	;# 
   761   000FA5                     IPR3            equ	4005	;# 
   762   000FA6                     EECON1          equ	4006	;# 
   763   000FA7                     EECON2          equ	4007	;# 
   764   000FA8                     EEDATA          equ	4008	;# 
   765   000FA9                     EEADR           equ	4009	;# 
   766   000FAB                     RCSTA1          equ	4011	;# 
   767   000FAB                     RCSTA           equ	4011	;# 
   768   000FAB                     RC1STA          equ	4011	;# 
   769   000FAC                     TXSTA1          equ	4012	;# 
   770   000FAC                     TXSTA           equ	4012	;# 
   771   000FAC                     TX1STA          equ	4012	;# 
   772   000FAD                     TXREG1          equ	4013	;# 
   773   000FAD                     TXREG           equ	4013	;# 
   774   000FAD                     TX1REG          equ	4013	;# 
   775   000FAE                     RCREG1          equ	4014	;# 
   776   000FAE                     RCREG           equ	4014	;# 
   777   000FAE                     RC1REG          equ	4014	;# 
   778   000FAF                     SPBRG1          equ	4015	;# 
   779   000FAF                     SPBRG           equ	4015	;# 
   780   000FAF                     SP1BRG          equ	4015	;# 
   781   000FB0                     SPBRGH1         equ	4016	;# 
   782   000FB0                     SPBRGH          equ	4016	;# 
   783   000FB0                     SP1BRGH         equ	4016	;# 
   784   000FB1                     T3CON           equ	4017	;# 
   785   000FB2                     TMR3            equ	4018	;# 
   786   000FB2                     TMR3L           equ	4018	;# 
   787   000FB3                     TMR3H           equ	4019	;# 
   788   000FB4                     T3GCON          equ	4020	;# 
   789   000FB6                     ECCP1AS         equ	4022	;# 
   790   000FB6                     ECCPAS          equ	4022	;# 
   791   000FB7                     PWM1CON         equ	4023	;# 
   792   000FB7                     PWMCON          equ	4023	;# 
   793   000FB8                     BAUDCON1        equ	4024	;# 
   794   000FB8                     BAUDCON         equ	4024	;# 
   795   000FB8                     BAUDCTL         equ	4024	;# 
   796   000FB8                     BAUD1CON        equ	4024	;# 
   797   000FB9                     PSTR1CON        equ	4025	;# 
   798   000FB9                     PSTRCON         equ	4025	;# 
   799   000FBA                     T2CON           equ	4026	;# 
   800   000FBB                     PR2             equ	4027	;# 
   801   000FBC                     TMR2            equ	4028	;# 
   802   000FBD                     CCP1CON         equ	4029	;# 
   803   000FBE                     CCPR1           equ	4030	;# 
   804   000FBE                     CCPR1L          equ	4030	;# 
   805   000FBF                     CCPR1H          equ	4031	;# 
   806   000FC0                     ADCON2          equ	4032	;# 
   807   000FC1                     ADCON1          equ	4033	;# 
   808   000FC2                     ADCON0          equ	4034	;# 
   809   000FC3                     ADRES           equ	4035	;# 
   810   000FC3                     ADRESL          equ	4035	;# 
   811   000FC4                     ADRESH          equ	4036	;# 
   812   000FC5                     SSP1CON2        equ	4037	;# 
   813   000FC5                     SSPCON2         equ	4037	;# 
   814   000FC6                     SSP1CON1        equ	4038	;# 
   815   000FC6                     SSPCON1         equ	4038	;# 
   816   000FC7                     SSP1STAT        equ	4039	;# 
   817   000FC7                     SSPSTAT         equ	4039	;# 
   818   000FC8                     SSP1ADD         equ	4040	;# 
   819   000FC8                     SSPADD          equ	4040	;# 
   820   000FC9                     SSP1BUF         equ	4041	;# 
   821   000FC9                     SSPBUF          equ	4041	;# 
   822   000FCA                     SSP1MSK         equ	4042	;# 
   823   000FCA                     SSPMSK          equ	4042	;# 
   824   000FCB                     SSP1CON3        equ	4043	;# 
   825   000FCB                     SSPCON3         equ	4043	;# 
   826   000FCC                     T1GCON          equ	4044	;# 
   827   000FCD                     T1CON           equ	4045	;# 
   828   000FCE                     TMR1            equ	4046	;# 
   829   000FCE                     TMR1L           equ	4046	;# 
   830   000FCF                     TMR1H           equ	4047	;# 
   831   000FD0                     RCON            equ	4048	;# 
   832   000FD1                     WDTCON          equ	4049	;# 
   833   000FD2                     OSCCON2         equ	4050	;# 
   834   000FD3                     OSCCON          equ	4051	;# 
   835   000FD5                     T0CON           equ	4053	;# 
   836   000FD6                     TMR0            equ	4054	;# 
   837   000FD6                     TMR0L           equ	4054	;# 
   838   000FD7                     TMR0H           equ	4055	;# 
   839   000FD8                     STATUS          equ	4056	;# 
   840   000FD9                     FSR2            equ	4057	;# 
   841   000FD9                     FSR2L           equ	4057	;# 
   842   000FDA                     FSR2H           equ	4058	;# 
   843   000FDB                     PLUSW2          equ	4059	;# 
   844   000FDC                     PREINC2         equ	4060	;# 
   845   000FDD                     POSTDEC2        equ	4061	;# 
   846   000FDE                     POSTINC2        equ	4062	;# 
   847   000FDF                     INDF2           equ	4063	;# 
   848   000FE0                     BSR             equ	4064	;# 
   849   000FE1                     FSR1            equ	4065	;# 
   850   000FE1                     FSR1L           equ	4065	;# 
   851   000FE2                     FSR1H           equ	4066	;# 
   852   000FE3                     PLUSW1          equ	4067	;# 
   853   000FE4                     PREINC1         equ	4068	;# 
   854   000FE5                     POSTDEC1        equ	4069	;# 
   855   000FE6                     POSTINC1        equ	4070	;# 
   856   000FE7                     INDF1           equ	4071	;# 
   857   000FE8                     WREG            equ	4072	;# 
   858   000FE9                     FSR0            equ	4073	;# 
   859   000FE9                     FSR0L           equ	4073	;# 
   860   000FEA                     FSR0H           equ	4074	;# 
   861   000FEB                     PLUSW0          equ	4075	;# 
   862   000FEC                     PREINC0         equ	4076	;# 
   863   000FED                     POSTDEC0        equ	4077	;# 
   864   000FEE                     POSTINC0        equ	4078	;# 
   865   000FEF                     INDF0           equ	4079	;# 
   866   000FF0                     INTCON3         equ	4080	;# 
   867   000FF1                     INTCON2         equ	4081	;# 
   868   000FF2                     INTCON          equ	4082	;# 
   869   000FF3                     PROD            equ	4083	;# 
   870   000FF3                     PRODL           equ	4083	;# 
   871   000FF4                     PRODH           equ	4084	;# 
   872   000FF5                     TABLAT          equ	4085	;# 
   873   000FF6                     TBLPTR          equ	4086	;# 
   874   000FF6                     TBLPTRL         equ	4086	;# 
   875   000FF7                     TBLPTRH         equ	4087	;# 
   876   000FF8                     TBLPTRU         equ	4088	;# 
   877   000FF9                     PCLAT           equ	4089	;# 
   878   000FF9                     PC              equ	4089	;# 
   879   000FF9                     PCL             equ	4089	;# 
   880   000FFA                     PCLATH          equ	4090	;# 
   881   000FFB                     PCLATU          equ	4091	;# 
   882   000FFC                     STKPTR          equ	4092	;# 
   883   000FFD                     TOS             equ	4093	;# 
   884   000FFD                     TOSL            equ	4093	;# 
   885   000FFE                     TOSH            equ	4094	;# 
   886   000FFF                     TOSU            equ	4095	;# 
   887   000F38                     ANSELA          equ	3896	;# 
   888   000F39                     ANSELB          equ	3897	;# 
   889   000F3A                     ANSELC          equ	3898	;# 
   890   000F3B                     ANSELD          equ	3899	;# 
   891   000F3C                     ANSELE          equ	3900	;# 
   892   000F3D                     PMD2            equ	3901	;# 
   893   000F3E                     PMD1            equ	3902	;# 
   894   000F3F                     PMD0            equ	3903	;# 
   895   000F40                     VREFCON2        equ	3904	;# 
   896   000F40                     DACCON1         equ	3904	;# 
   897   000F41                     VREFCON1        equ	3905	;# 
   898   000F41                     DACCON0         equ	3905	;# 
   899   000F42                     VREFCON0        equ	3906	;# 
   900   000F42                     FVRCON          equ	3906	;# 
   901   000F43                     CTMUICON        equ	3907	;# 
   902   000F43                     CTMUICONH       equ	3907	;# 
   903   000F44                     CTMUCONL        equ	3908	;# 
   904   000F44                     CTMUCON1        equ	3908	;# 
   905   000F45                     CTMUCONH        equ	3909	;# 
   906   000F45                     CTMUCON0        equ	3909	;# 
   907   000F46                     SRCON1          equ	3910	;# 
   908   000F47                     SRCON0          equ	3911	;# 
   909   000F48                     CCPTMRS1        equ	3912	;# 
   910   000F49                     CCPTMRS0        equ	3913	;# 
   911   000F4A                     T6CON           equ	3914	;# 
   912   000F4B                     PR6             equ	3915	;# 
   913   000F4C                     TMR6            equ	3916	;# 
   914   000F4D                     T5GCON          equ	3917	;# 
   915   000F4E                     T5CON           equ	3918	;# 
   916   000F4F                     TMR5            equ	3919	;# 
   917   000F4F                     TMR5L           equ	3919	;# 
   918   000F50                     TMR5H           equ	3920	;# 
   919   000F51                     T4CON           equ	3921	;# 
   920   000F52                     PR4             equ	3922	;# 
   921   000F53                     TMR4            equ	3923	;# 
   922   000F54                     CCP5CON         equ	3924	;# 
   923   000F55                     CCPR5           equ	3925	;# 
   924   000F55                     CCPR5L          equ	3925	;# 
   925   000F56                     CCPR5H          equ	3926	;# 
   926   000F57                     CCP4CON         equ	3927	;# 
   927   000F58                     CCPR4           equ	3928	;# 
   928   000F58                     CCPR4L          equ	3928	;# 
   929   000F59                     CCPR4H          equ	3929	;# 
   930   000F5A                     PSTR3CON        equ	3930	;# 
   931   000F5B                     ECCP3AS         equ	3931	;# 
   932   000F5B                     CCP3AS          equ	3931	;# 
   933   000F5C                     PWM3CON         equ	3932	;# 
   934   000F5D                     CCP3CON         equ	3933	;# 
   935   000F5E                     CCPR3           equ	3934	;# 
   936   000F5E                     CCPR3L          equ	3934	;# 
   937   000F5F                     CCPR3H          equ	3935	;# 
   938   000F60                     SLRCON          equ	3936	;# 
   939   000F61                     WPUB            equ	3937	;# 
   940   000F62                     IOCB            equ	3938	;# 
   941   000F63                     PSTR2CON        equ	3939	;# 
   942   000F64                     ECCP2AS         equ	3940	;# 
   943   000F64                     CCP2AS          equ	3940	;# 
   944   000F65                     PWM2CON         equ	3941	;# 
   945   000F66                     CCP2CON         equ	3942	;# 
   946   000F67                     CCPR2           equ	3943	;# 
   947   000F67                     CCPR2L          equ	3943	;# 
   948   000F68                     CCPR2H          equ	3944	;# 
   949   000F69                     SSP2CON3        equ	3945	;# 
   950   000F6A                     SSP2MSK         equ	3946	;# 
   951   000F6B                     SSP2CON2        equ	3947	;# 
   952   000F6C                     SSP2CON1        equ	3948	;# 
   953   000F6D                     SSP2STAT        equ	3949	;# 
   954   000F6E                     SSP2ADD         equ	3950	;# 
   955   000F6F                     SSP2BUF         equ	3951	;# 
   956   000F70                     BAUDCON2        equ	3952	;# 
   957   000F70                     BAUD2CON        equ	3952	;# 
   958   000F71                     RCSTA2          equ	3953	;# 
   959   000F71                     RC2STA          equ	3953	;# 
   960   000F72                     TXSTA2          equ	3954	;# 
   961   000F72                     TX2STA          equ	3954	;# 
   962   000F73                     TXREG2          equ	3955	;# 
   963   000F73                     TX2REG          equ	3955	;# 
   964   000F74                     RCREG2          equ	3956	;# 
   965   000F74                     RC2REG          equ	3956	;# 
   966   000F75                     SPBRG2          equ	3957	;# 
   967   000F75                     SP2BRG          equ	3957	;# 
   968   000F76                     SPBRGH2         equ	3958	;# 
   969   000F76                     SP2BRGH         equ	3958	;# 
   970   000F77                     CM2CON1         equ	3959	;# 
   971   000F77                     CM12CON         equ	3959	;# 
   972   000F78                     CM2CON0         equ	3960	;# 
   973   000F78                     CM2CON          equ	3960	;# 
   974   000F79                     CM1CON0         equ	3961	;# 
   975   000F79                     CM1CON          equ	3961	;# 
   976   000F7A                     PIE4            equ	3962	;# 
   977   000F7B                     PIR4            equ	3963	;# 
   978   000F7C                     IPR4            equ	3964	;# 
   979   000F7D                     PIE5            equ	3965	;# 
   980   000F7E                     PIR5            equ	3966	;# 
   981   000F7F                     IPR5            equ	3967	;# 
   982   000F80                     PORTA           equ	3968	;# 
   983   000F81                     PORTB           equ	3969	;# 
   984   000F82                     PORTC           equ	3970	;# 
   985   000F83                     PORTD           equ	3971	;# 
   986   000F84                     PORTE           equ	3972	;# 
   987   000F89                     LATA            equ	3977	;# 
   988   000F8A                     LATB            equ	3978	;# 
   989   000F8B                     LATC            equ	3979	;# 
   990   000F8C                     LATD            equ	3980	;# 
   991   000F8D                     LATE            equ	3981	;# 
   992   000F92                     TRISA           equ	3986	;# 
   993   000F92                     DDRA            equ	3986	;# 
   994   000F93                     TRISB           equ	3987	;# 
   995   000F93                     DDRB            equ	3987	;# 
   996   000F94                     TRISC           equ	3988	;# 
   997   000F94                     DDRC            equ	3988	;# 
   998   000F95                     TRISD           equ	3989	;# 
   999   000F95                     DDRD            equ	3989	;# 
  1000   000F96                     TRISE           equ	3990	;# 
  1001   000F96                     DDRE            equ	3990	;# 
  1002   000F9B                     OSCTUNE         equ	3995	;# 
  1003   000F9C                     HLVDCON         equ	3996	;# 
  1004   000F9C                     LVDCON          equ	3996	;# 
  1005   000F9D                     PIE1            equ	3997	;# 
  1006   000F9E                     PIR1            equ	3998	;# 
  1007   000F9F                     IPR1            equ	3999	;# 
  1008   000FA0                     PIE2            equ	4000	;# 
  1009   000FA1                     PIR2            equ	4001	;# 
  1010   000FA2                     IPR2            equ	4002	;# 
  1011   000FA3                     PIE3            equ	4003	;# 
  1012   000FA4                     PIR3            equ	4004	;# 
  1013   000FA5                     IPR3            equ	4005	;# 
  1014   000FA6                     EECON1          equ	4006	;# 
  1015   000FA7                     EECON2          equ	4007	;# 
  1016   000FA8                     EEDATA          equ	4008	;# 
  1017   000FA9                     EEADR           equ	4009	;# 
  1018   000FAB                     RCSTA1          equ	4011	;# 
  1019   000FAB                     RCSTA           equ	4011	;# 
  1020   000FAB                     RC1STA          equ	4011	;# 
  1021   000FAC                     TXSTA1          equ	4012	;# 
  1022   000FAC                     TXSTA           equ	4012	;# 
  1023   000FAC                     TX1STA          equ	4012	;# 
  1024   000FAD                     TXREG1          equ	4013	;# 
  1025   000FAD                     TXREG           equ	4013	;# 
  1026   000FAD                     TX1REG          equ	4013	;# 
  1027   000FAE                     RCREG1          equ	4014	;# 
  1028   000FAE                     RCREG           equ	4014	;# 
  1029   000FAE                     RC1REG          equ	4014	;# 
  1030   000FAF                     SPBRG1          equ	4015	;# 
  1031   000FAF                     SPBRG           equ	4015	;# 
  1032   000FAF                     SP1BRG          equ	4015	;# 
  1033   000FB0                     SPBRGH1         equ	4016	;# 
  1034   000FB0                     SPBRGH          equ	4016	;# 
  1035   000FB0                     SP1BRGH         equ	4016	;# 
  1036   000FB1                     T3CON           equ	4017	;# 
  1037   000FB2                     TMR3            equ	4018	;# 
  1038   000FB2                     TMR3L           equ	4018	;# 
  1039   000FB3                     TMR3H           equ	4019	;# 
  1040   000FB4                     T3GCON          equ	4020	;# 
  1041   000FB6                     ECCP1AS         equ	4022	;# 
  1042   000FB6                     ECCPAS          equ	4022	;# 
  1043   000FB7                     PWM1CON         equ	4023	;# 
  1044   000FB7                     PWMCON          equ	4023	;# 
  1045   000FB8                     BAUDCON1        equ	4024	;# 
  1046   000FB8                     BAUDCON         equ	4024	;# 
  1047   000FB8                     BAUDCTL         equ	4024	;# 
  1048   000FB8                     BAUD1CON        equ	4024	;# 
  1049   000FB9                     PSTR1CON        equ	4025	;# 
  1050   000FB9                     PSTRCON         equ	4025	;# 
  1051   000FBA                     T2CON           equ	4026	;# 
  1052   000FBB                     PR2             equ	4027	;# 
  1053   000FBC                     TMR2            equ	4028	;# 
  1054   000FBD                     CCP1CON         equ	4029	;# 
  1055   000FBE                     CCPR1           equ	4030	;# 
  1056   000FBE                     CCPR1L          equ	4030	;# 
  1057   000FBF                     CCPR1H          equ	4031	;# 
  1058   000FC0                     ADCON2          equ	4032	;# 
  1059   000FC1                     ADCON1          equ	4033	;# 
  1060   000FC2                     ADCON0          equ	4034	;# 
  1061   000FC3                     ADRES           equ	4035	;# 
  1062   000FC3                     ADRESL          equ	4035	;# 
  1063   000FC4                     ADRESH          equ	4036	;# 
  1064   000FC5                     SSP1CON2        equ	4037	;# 
  1065   000FC5                     SSPCON2         equ	4037	;# 
  1066   000FC6                     SSP1CON1        equ	4038	;# 
  1067   000FC6                     SSPCON1         equ	4038	;# 
  1068   000FC7                     SSP1STAT        equ	4039	;# 
  1069   000FC7                     SSPSTAT         equ	4039	;# 
  1070   000FC8                     SSP1ADD         equ	4040	;# 
  1071   000FC8                     SSPADD          equ	4040	;# 
  1072   000FC9                     SSP1BUF         equ	4041	;# 
  1073   000FC9                     SSPBUF          equ	4041	;# 
  1074   000FCA                     SSP1MSK         equ	4042	;# 
  1075   000FCA                     SSPMSK          equ	4042	;# 
  1076   000FCB                     SSP1CON3        equ	4043	;# 
  1077   000FCB                     SSPCON3         equ	4043	;# 
  1078   000FCC                     T1GCON          equ	4044	;# 
  1079   000FCD                     T1CON           equ	4045	;# 
  1080   000FCE                     TMR1            equ	4046	;# 
  1081   000FCE                     TMR1L           equ	4046	;# 
  1082   000FCF                     TMR1H           equ	4047	;# 
  1083   000FD0                     RCON            equ	4048	;# 
  1084   000FD1                     WDTCON          equ	4049	;# 
  1085   000FD2                     OSCCON2         equ	4050	;# 
  1086   000FD3                     OSCCON          equ	4051	;# 
  1087   000FD5                     T0CON           equ	4053	;# 
  1088   000FD6                     TMR0            equ	4054	;# 
  1089   000FD6                     TMR0L           equ	4054	;# 
  1090   000FD7                     TMR0H           equ	4055	;# 
  1091   000FD8                     STATUS          equ	4056	;# 
  1092   000FD9                     FSR2            equ	4057	;# 
  1093   000FD9                     FSR2L           equ	4057	;# 
  1094   000FDA                     FSR2H           equ	4058	;# 
  1095   000FDB                     PLUSW2          equ	4059	;# 
  1096   000FDC                     PREINC2         equ	4060	;# 
  1097   000FDD                     POSTDEC2        equ	4061	;# 
  1098   000FDE                     POSTINC2        equ	4062	;# 
  1099   000FDF                     INDF2           equ	4063	;# 
  1100   000FE0                     BSR             equ	4064	;# 
  1101   000FE1                     FSR1            equ	4065	;# 
  1102   000FE1                     FSR1L           equ	4065	;# 
  1103   000FE2                     FSR1H           equ	4066	;# 
  1104   000FE3                     PLUSW1          equ	4067	;# 
  1105   000FE4                     PREINC1         equ	4068	;# 
  1106   000FE5                     POSTDEC1        equ	4069	;# 
  1107   000FE6                     POSTINC1        equ	4070	;# 
  1108   000FE7                     INDF1           equ	4071	;# 
  1109   000FE8                     WREG            equ	4072	;# 
  1110   000FE9                     FSR0            equ	4073	;# 
  1111   000FE9                     FSR0L           equ	4073	;# 
  1112   000FEA                     FSR0H           equ	4074	;# 
  1113   000FEB                     PLUSW0          equ	4075	;# 
  1114   000FEC                     PREINC0         equ	4076	;# 
  1115   000FED                     POSTDEC0        equ	4077	;# 
  1116   000FEE                     POSTINC0        equ	4078	;# 
  1117   000FEF                     INDF0           equ	4079	;# 
  1118   000FF0                     INTCON3         equ	4080	;# 
  1119   000FF1                     INTCON2         equ	4081	;# 
  1120   000FF2                     INTCON          equ	4082	;# 
  1121   000FF3                     PROD            equ	4083	;# 
  1122   000FF3                     PRODL           equ	4083	;# 
  1123   000FF4                     PRODH           equ	4084	;# 
  1124   000FF5                     TABLAT          equ	4085	;# 
  1125   000FF6                     TBLPTR          equ	4086	;# 
  1126   000FF6                     TBLPTRL         equ	4086	;# 
  1127   000FF7                     TBLPTRH         equ	4087	;# 
  1128   000FF8                     TBLPTRU         equ	4088	;# 
  1129   000FF9                     PCLAT           equ	4089	;# 
  1130   000FF9                     PC              equ	4089	;# 
  1131   000FF9                     PCL             equ	4089	;# 
  1132   000FFA                     PCLATH          equ	4090	;# 
  1133   000FFB                     PCLATU          equ	4091	;# 
  1134   000FFC                     STKPTR          equ	4092	;# 
  1135   000FFD                     TOS             equ	4093	;# 
  1136   000FFD                     TOSL            equ	4093	;# 
  1137   000FFE                     TOSH            equ	4094	;# 
  1138   000FFF                     TOSU            equ	4095	;# 
  1139   000F3B                     _ANSELD         set	3899
  1140   000F3A                     _ANSELC         set	3898
  1141   000F39                     _ANSELB         set	3897
  1142   000F38                     _ANSELA         set	3896
  1143   000FC9                     _SSP1BUF        set	4041
  1144   000F9E                     _PIR1bits       set	3998
  1145   000FC5                     _SSP1CON2bits   set	4037
  1146   000FC8                     _SSP1ADD        set	4040
  1147   000FC5                     _SSP1CON2       set	4037
  1148   000FC6                     _SSP1CON1       set	4038
  1149   000FC7                     _SSP1STAT       set	4039
  1150   000F94                     _TRISCbits      set	3988
  1151   000F80                     _PORTAbits      set	3968
  1152   000F89                     _LATAbits       set	3977
  1153   000F92                     _TRISAbits      set	3986
  1154   000FD3                     _OSCCONbits     set	4051
  1155   000F9B                     _OSCTUNEbits    set	3995
  1156   007C63                     _LATD3          set	31843
  1157   007C62                     _LATD2          set	31842
  1158   007CAB                     _TRISD3         set	31915
  1159   007CAA                     _TRISD2         set	31914
  1160                           
  1161                           	psect	smallconst
  1162   000600                     __psmallconst:
  1163                           	callstack 0
  1164   000600  00                 	db	0
  1165   000601                     STR_2:
  1166   000601  48                 	db	72	;'H'
  1167   000602  75                 	db	117	;'u'
  1168   000603  6D                 	db	109	;'m'
  1169   000604  65                 	db	101	;'e'
  1170   000605  64                 	db	100	;'d'
  1171   000606  61                 	db	97	;'a'
  1172   000607  64                 	db	100	;'d'
  1173   000608  3A                 	db	58	;':'
  1174   000609  20                 	db	32
  1175   00060A  25                 	db	37
  1176   00060B  2E                 	db	46
  1177   00060C  31                 	db	49	;'1'
  1178   00060D  66                 	db	102	;'f'
  1179   00060E  25                 	db	37
  1180   00060F  25                 	db	37
  1181   000610  00                 	db	0
  1182   000611                     STR_1:
  1183   000611  49                 	db	73	;'I'
  1184   000612  6E                 	db	110	;'n'
  1185   000613  69                 	db	105	;'i'
  1186   000614  63                 	db	99	;'c'
  1187   000615  69                 	db	105	;'i'
  1188   000616  61                 	db	97	;'a'
  1189   000617  6E                 	db	110	;'n'
  1190   000618  64                 	db	100	;'d'
  1191   000619  6F                 	db	111	;'o'
  1192   00061A  2E                 	db	46
  1193   00061B  2E                 	db	46
  1194   00061C  2E                 	db	46
  1195   00061D  00                 	db	0
  1196   00061E                     STR_3:
  1197   00061E  54                 	db	84	;'T'
  1198   00061F  65                 	db	101	;'e'
  1199   000620  6D                 	db	109	;'m'
  1200   000621  70                 	db	112	;'p'
  1201   000622  3A                 	db	58	;':'
  1202   000623  20                 	db	32
  1203   000624  25                 	db	37
  1204   000625  2E                 	db	46
  1205   000626  31                 	db	49	;'1'
  1206   000627  66                 	db	102	;'f'
  1207   000628  20                 	db	32
  1208   000629  43                 	db	67	;'C'
  1209   00062A  00                 	db	0
  1210   00062B                     STR_4:
  1211   00062B  45                 	db	69	;'E'
  1212   00062C  72                 	db	114	;'r'
  1213   00062D  72                 	db	114	;'r'
  1214   00062E  6F                 	db	111	;'o'
  1215   00062F  72                 	db	114	;'r'
  1216   000630  20                 	db	32
  1217   000631  73                 	db	115	;'s'
  1218   000632  65                 	db	101	;'e'
  1219   000633  6E                 	db	110	;'n'
  1220   000634  73                 	db	115	;'s'
  1221   000635  6F                 	db	111	;'o'
  1222   000636  72                 	db	114	;'r'
  1223   000637  00                 	db	0
  1224   000638                     STR_5:
  1225   000638  69                 	db	105	;'i'
  1226   000639  6E                 	db	110	;'n'
  1227   00063A  66                 	db	102	;'f'
  1228   00063B  00                 	db	0
  1229   00063C                     STR_8:
  1230   00063C  6E                 	db	110	;'n'
  1231   00063D  61                 	db	97	;'a'
  1232   00063E  6E                 	db	110	;'n'
  1233   00063F  00                 	db	0
  1234   00063C                     STR_9           equ	STR_8
  1235   00063C                     STR_10          equ	STR_8
  1236   000638                     STR_6           equ	STR_5
  1237   000638                     STR_7           equ	STR_5
  1238   000640  00                 	db	0	; dummy byte at the end
  1239   000600                     __smallconst    set	__psmallconst
  1240   000600                     __mediumconst   set	__psmallconst
  1241   000002                     __activetblptr  equ	2
  1242                           
  1243                           ; #config settings
  1244                           
  1245                           	psect	cinit
  1246   002F96                     __pcinit:
  1247                           	callstack 0
  1248   002F96                     start_initialization:
  1249                           	callstack 0
  1250   002F96                     __initialization:
  1251                           	callstack 0
  1252                           
  1253                           ; Clear objects allocated to BANK1 (80 bytes)
  1254   002F96  EE01  F000         	lfsr	0,__pbssBANK1
  1255   002F9A  0E50               	movlw	80
  1256   002F9C                     clear_0:
  1257   002F9C  6AEE               	clrf	postinc0,c
  1258   002F9E  06E8               	decf	wreg,f,c
  1259   002FA0  E1FD               	bnz	clear_0
  1260                           
  1261                           ; Clear objects allocated to BANK0 (12 bytes)
  1262   002FA2  EE00  F0C8         	lfsr	0,__pbssBANK0
  1263   002FA6  0E0C               	movlw	12
  1264   002FA8                     clear_1:
  1265   002FA8  6AEE               	clrf	postinc0,c
  1266   002FAA  06E8               	decf	wreg,f,c
  1267   002FAC  E1FD               	bnz	clear_1
  1268                           
  1269                           ; Clear objects allocated to COMRAM (1 bytes)
  1270   002FAE  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1271   002FB0                     end_of_initialization:
  1272                           	callstack 0
  1273   002FB0                     __end_of__initialization:
  1274                           	callstack 0
  1275   002FB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1276   002FB2  6EF8               	movwf	tblptru,c
  1277   002FB4  0100               	movlb	0
  1278   002FB6  EF15  F012         	goto	_main	;jump to C main() function
  1279                           
  1280                           	psect	bssCOMRAM
  1281   00005E                     __pbssCOMRAM:
  1282                           	callstack 0
  1283   00005E                     _flags:
  1284                           	callstack 0
  1285   00005E                     	ds	1
  1286                           
  1287                           	psect	bssBANK0
  1288   0000C8                     __pbssBANK0:
  1289                           	callstack 0
  1290   0000C8                     floorf@F521:
  1291                           	callstack 0
  1292   0000C8                     	ds	4
  1293   0000CC                     ___fpclassifyf@F465:
  1294                           	callstack 0
  1295   0000CC                     	ds	4
  1296   0000D0                     _width:
  1297                           	callstack 0
  1298   0000D0                     	ds	2
  1299   0000D2                     _prec:
  1300                           	callstack 0
  1301   0000D2                     	ds	2
  1302                           
  1303                           	psect	bssBANK1
  1304   000100                     __pbssBANK1:
  1305                           	callstack 0
  1306   000100                     _dbuf:
  1307                           	callstack 0
  1308   000100                     	ds	80
  1309                           
  1310                           	psect	cstackBANK0
  1311   000060                     __pcstackBANK0:
  1312                           	callstack 0
  1313   000060                     efgtoa@ne:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x0
  1317   000060                     	ds	2
  1318   000062                     efgtoa@p:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x2
  1322   000062                     	ds	2
  1323   000064                     efgtoa@t:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x4
  1327   000064                     	ds	2
  1328   000066                     _efgtoa$1190:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x6
  1332   000066                     	ds	2
  1333   000068                     efgtoa@pp:
  1334                           	callstack 0
  1335                           
  1336                           ; 1 bytes @ 0x8
  1337   000068                     	ds	1
  1338   000069                     efgtoa@mode:
  1339                           	callstack 0
  1340                           
  1341                           ; 1 bytes @ 0x9
  1342   000069                     	ds	1
  1343   00006A                     efgtoa@nmode:
  1344                           	callstack 0
  1345                           
  1346                           ; 1 bytes @ 0xA
  1347   00006A                     	ds	1
  1348   00006B                     efgtoa@d:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0xB
  1352   00006B                     	ds	2
  1353   00006D                     efgtoa@m:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0xD
  1357   00006D                     	ds	2
  1358   00006F                     efgtoa@e:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0xF
  1362   00006F                     	ds	2
  1363   000071                     efgtoa@w:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x11
  1367   000071                     	ds	2
  1368   000073                     efgtoa@ou:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x13
  1372   000073                     	ds	4
  1373   000077                     efgtoa@i:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x17
  1377   000077                     	ds	2
  1378   000079                     efgtoa@h:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0x19
  1382   000079                     	ds	4
  1383   00007D                     efgtoa@l:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x1D
  1387   00007D                     	ds	4
  1388   000081                     efgtoa@sign:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x21
  1392   000081                     	ds	1
  1393   000082                     efgtoa@n:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x22
  1397   000082                     	ds	2
  1398   000084                     efgtoa@g:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x24
  1402   000084                     	ds	4
  1403   000088                     efgtoa@u:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x28
  1407   000088                     	ds	4
  1408   00008C                     sprintf@ap:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x2C
  1412   00008C                     	ds	1
  1413   00008D                     sprintf@f:
  1414                           	callstack 0
  1415                           
  1416                           ; 11 bytes @ 0x2D
  1417   00008D                     	ds	11
  1418   000098                     main@buf2:
  1419                           	callstack 0
  1420                           
  1421                           ; 20 bytes @ 0x38
  1422   000098                     	ds	20
  1423   0000AC                     main@buf1:
  1424                           	callstack 0
  1425                           
  1426                           ; 20 bytes @ 0x4C
  1427   0000AC                     	ds	20
  1428   0000C0                     main@temp:
  1429                           	callstack 0
  1430                           
  1431                           ; 4 bytes @ 0x60
  1432   0000C0                     	ds	4
  1433   0000C4                     main@hum:
  1434                           	callstack 0
  1435                           
  1436                           ; 4 bytes @ 0x64
  1437   0000C4                     	ds	4
  1438                           
  1439                           	psect	cstackCOMRAM
  1440   000001                     __pcstackCOMRAM:
  1441                           	callstack 0
  1442   000001                     ?___fpclassifyf:
  1443                           	callstack 0
  1444   000001                     ?_DHT11_Read_Byte:
  1445                           	callstack 0
  1446   000001                     ?_read_prec_or_width:
  1447                           	callstack 0
  1448   000001                     ?___flmul:
  1449                           	callstack 0
  1450   000001                     ?_labs:
  1451                           	callstack 0
  1452   000001                     ?___flneg:
  1453                           	callstack 0
  1454   000001                     ?___fltol:
  1455                           	callstack 0
  1456   000001                     ?___xxtofl:
  1457                           	callstack 0
  1458   000001                     I2C_Init_Master@brg:
  1459                           	callstack 0
  1460   000001                     I2C_Write@data:
  1461                           	callstack 0
  1462   000001                     read_prec_or_width@fmt:
  1463                           	callstack 0
  1464   000001                     memcpy@d1:
  1465                           	callstack 0
  1466   000001                     fputc@c:
  1467                           	callstack 0
  1468   000001                     strcpy@dest:
  1469                           	callstack 0
  1470   000001                     ___fleq@ff1:
  1471                           	callstack 0
  1472   000001                     ___flneg@f1:
  1473                           	callstack 0
  1474   000001                     ___fltol@f1:
  1475                           	callstack 0
  1476   000001                     ___flmul@b:
  1477                           	callstack 0
  1478   000001                     ___xxtofl@val:
  1479                           	callstack 0
  1480   000001                     ___fpclassifyf@x:
  1481                           	callstack 0
  1482   000001                     labs@a:
  1483                           	callstack 0
  1484   000001                     ??_OSC_Init:
  1485   000001                     ??_DHT11_Start:
  1486   000001                     
  1487                           ; 1 bytes @ 0x0
  1488   000001                     	ds	1
  1489   000002                     Lcd_Cmd@cmd:
  1490                           	callstack 0
  1491   000002                     Lcd_Write_Char@c:
  1492                           	callstack 0
  1493   000002                     read_prec_or_width@ap:
  1494                           	callstack 0
  1495   000002                     
  1496                           ; 1 bytes @ 0x1
  1497   000002                     	ds	1
  1498   000003                     Lcd_Cmd@hi:
  1499                           	callstack 0
  1500   000003                     Lcd_Write_Char@hi:
  1501                           	callstack 0
  1502   000003                     fputc@fp:
  1503                           	callstack 0
  1504   000003                     strcpy@src:
  1505                           	callstack 0
  1506   000003                     DHT11_Read_Byte@data:
  1507                           	callstack 0
  1508   000003                     memcpy@s1:
  1509                           	callstack 0
  1510   000003                     ??_read_prec_or_width:
  1511                           
  1512                           ; 1 bytes @ 0x2
  1513   000003                     	ds	1
  1514   000004                     Lcd_Cmd@lo:
  1515                           	callstack 0
  1516   000004                     Lcd_Write_Char@lo:
  1517                           	callstack 0
  1518   000004                     ??_fputc:
  1519   000004                     ??_strcpy:
  1520                           
  1521                           ; 1 bytes @ 0x3
  1522   000004                     	ds	1
  1523   000005                     Lcd_Set_Cursor@row:
  1524                           	callstack 0
  1525   000005                     read_prec_or_width@c:
  1526                           	callstack 0
  1527   000005                     DHT11_Read_Byte@i:
  1528                           	callstack 0
  1529   000005                     Lcd_Write_String@str:
  1530                           	callstack 0
  1531   000005                     memcpy@n:
  1532                           	callstack 0
  1533   000005                     strcpy@d:
  1534                           	callstack 0
  1535   000005                     ___fleq@ff2:
  1536                           	callstack 0
  1537   000005                     ___flmul@a:
  1538                           	callstack 0
  1539   000005                     ??_Lcd_Init:
  1540   000005                     ??_Lcd_Clear:
  1541   000005                     ??___fpclassifyf:
  1542   000005                     ??_labs:
  1543   000005                     ??___fltol:
  1544   000005                     ??___xxtofl:
  1545                           
  1546                           ; 1 bytes @ 0x4
  1547   000005                     	ds	1
  1548   000006                     Lcd_Set_Cursor@col:
  1549                           	callstack 0
  1550   000006                     read_prec_or_width@n:
  1551                           	callstack 0
  1552   000006                     
  1553                           ; 1 bytes @ 0x5
  1554   000006                     	ds	1
  1555   000007                     Lcd_Set_Cursor@addr:
  1556                           	callstack 0
  1557   000007                     memcpy@d:
  1558                           	callstack 0
  1559   000007                     
  1560                           ; 1 bytes @ 0x6
  1561   000007                     	ds	2
  1562   000009                     ___fltol@sign1:
  1563                           	callstack 0
  1564   000009                     ___xxtofl@sign:
  1565                           	callstack 0
  1566   000009                     ___fpclassifyf@e:
  1567                           	callstack 0
  1568   000009                     memcpy@s:
  1569                           	callstack 0
  1570   000009                     fputs@s:
  1571                           	callstack 0
  1572   000009                     ??___flmul:
  1573   000009                     ??___fleq:
  1574                           
  1575                           ; 1 bytes @ 0x8
  1576   000009                     	ds	1
  1577   00000A                     ___fltol@exp1:
  1578                           	callstack 0
  1579   00000A                     ___xxtofl@exp:
  1580                           	callstack 0
  1581                           
  1582                           ; 1 bytes @ 0x9
  1583   00000A                     	ds	1
  1584   00000B                     memcpy@tmp:
  1585                           	callstack 0
  1586   00000B                     fputs@fp:
  1587                           	callstack 0
  1588   00000B                     ___xxtofl@arg:
  1589                           	callstack 0
  1590   00000B                     ___fpclassifyf@u:
  1591                           	callstack 0
  1592                           
  1593                           ; 4 bytes @ 0xA
  1594   00000B                     	ds	1
  1595   00000C                     fputs@c:
  1596                           	callstack 0
  1597   00000C                     
  1598                           ; 1 bytes @ 0xB
  1599   00000C                     	ds	1
  1600   00000D                     ___flmul@sign:
  1601                           	callstack 0
  1602   00000D                     fputs@i:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0xC
  1606   00000D                     	ds	1
  1607   00000E                     ___flmul@grs:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0xD
  1611   00000E                     	ds	1
  1612   00000F                     ?___fldiv:
  1613                           	callstack 0
  1614   00000F                     pad@fp:
  1615                           	callstack 0
  1616   00000F                     ___fldiv@b:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0xE
  1620   00000F                     	ds	1
  1621   000010                     pad@buf:
  1622                           	callstack 0
  1623                           
  1624                           ; 2 bytes @ 0xF
  1625   000010                     	ds	2
  1626   000012                     ___flmul@aexp:
  1627                           	callstack 0
  1628   000012                     pad@p:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x11
  1632   000012                     	ds	1
  1633   000013                     ___flmul@bexp:
  1634                           	callstack 0
  1635   000013                     ___fldiv@a:
  1636                           	callstack 0
  1637                           
  1638                           ; 4 bytes @ 0x12
  1639   000013                     	ds	1
  1640   000014                     ___flmul@prod:
  1641                           	callstack 0
  1642   000014                     ??_pad:
  1643                           
  1644                           ; 1 bytes @ 0x13
  1645   000014                     	ds	1
  1646   000015                     pad@i:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x14
  1650   000015                     	ds	2
  1651   000017                     ??___fldiv:
  1652                           
  1653                           ; 1 bytes @ 0x16
  1654   000017                     	ds	1
  1655   000018                     ___flmul@temp:
  1656                           	callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x17
  1659   000018                     	ds	2
  1660   00001A                     ___flge@ff1:
  1661                           	callstack 0
  1662                           
  1663                           ; 4 bytes @ 0x19
  1664   00001A                     	ds	1
  1665   00001B                     ___fldiv@rem:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x1A
  1669   00001B                     	ds	3
  1670   00001E                     ___flge@ff2:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x1D
  1674   00001E                     	ds	1
  1675   00001F                     ___fldiv@sign:
  1676                           	callstack 0
  1677                           
  1678                           ; 1 bytes @ 0x1E
  1679   00001F                     	ds	1
  1680   000020                     ___fldiv@new_exp:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x1F
  1684   000020                     	ds	2
  1685   000022                     ___fldiv@grs:
  1686                           	callstack 0
  1687   000022                     ??___flge:
  1688                           
  1689                           ; 1 bytes @ 0x21
  1690   000022                     	ds	4
  1691   000026                     ___fldiv@bexp:
  1692                           	callstack 0
  1693                           
  1694                           ; 1 bytes @ 0x25
  1695   000026                     	ds	1
  1696   000027                     ___fldiv@aexp:
  1697                           	callstack 0
  1698                           
  1699                           ; 1 bytes @ 0x26
  1700   000027                     	ds	1
  1701   000028                     ?___fladd:
  1702                           	callstack 0
  1703   000028                     ?_floorf:
  1704                           	callstack 0
  1705   000028                     ___fladd@b:
  1706                           	callstack 0
  1707   000028                     floorf@x:
  1708                           	callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x27
  1711   000028                     	ds	4
  1712   00002C                     ___fladd@a:
  1713                           	callstack 0
  1714   00002C                     ??_floorf:
  1715                           
  1716                           ; 1 bytes @ 0x2B
  1717   00002C                     	ds	4
  1718   000030                     ??___fladd:
  1719                           
  1720                           ; 1 bytes @ 0x2F
  1721   000030                     	ds	2
  1722   000032                     floorf@m:
  1723                           	callstack 0
  1724                           
  1725                           ; 4 bytes @ 0x31
  1726   000032                     	ds	2
  1727   000034                     ___fladd@signs:
  1728                           	callstack 0
  1729                           
  1730                           ; 1 bytes @ 0x33
  1731   000034                     	ds	1
  1732   000035                     ___fladd@aexp:
  1733                           	callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x34
  1736   000035                     	ds	1
  1737   000036                     ___fladd@bexp:
  1738                           	callstack 0
  1739   000036                     floorf@e:
  1740                           	callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x35
  1743   000036                     	ds	1
  1744   000037                     ___fladd@grs:
  1745                           	callstack 0
  1746                           
  1747                           ; 1 bytes @ 0x36
  1748   000037                     	ds	1
  1749   000038                     ?_DHT11_Read_Data:
  1750                           	callstack 0
  1751   000038                     ?___flsub:
  1752                           	callstack 0
  1753   000038                     DHT11_Read_Data@tem:
  1754                           	callstack 0
  1755   000038                     ___flsub@b:
  1756                           	callstack 0
  1757   000038                     floorf@u:
  1758                           	callstack 0
  1759                           
  1760                           ; 4 bytes @ 0x37
  1761   000038                     	ds	1
  1762   000039                     DHT11_Read_Data@hum:
  1763                           	callstack 0
  1764                           
  1765                           ; 1 bytes @ 0x38
  1766   000039                     	ds	1
  1767   00003A                     ??_DHT11_Read_Data:
  1768                           
  1769                           ; 1 bytes @ 0x39
  1770   00003A                     	ds	2
  1771   00003C                     DHT11_Read_Data@sum:
  1772                           	callstack 0
  1773   00003C                     ___flsub@a:
  1774                           	callstack 0
  1775                           
  1776                           ; 4 bytes @ 0x3B
  1777   00003C                     	ds	2
  1778   00003E                     DHT11_Read_Data@info:
  1779                           	callstack 0
  1780                           
  1781                           ; 10 bytes @ 0x3D
  1782   00003E                     	ds	2
  1783   000040                     efgtoa@fp:
  1784                           	callstack 0
  1785   000040                     
  1786                           ; 1 bytes @ 0x3F
  1787   000040                     	ds	1
  1788   000041                     efgtoa@f:
  1789                           	callstack 0
  1790                           
  1791                           ; 4 bytes @ 0x40
  1792   000041                     	ds	4
  1793   000045                     efgtoa@c:
  1794                           	callstack 0
  1795                           
  1796                           ; 1 bytes @ 0x44
  1797   000045                     	ds	1
  1798   000046                     ??_efgtoa:
  1799                           
  1800                           ; 1 bytes @ 0x45
  1801   000046                     	ds	2
  1802   000048                     vfpfcnvrt@fp:
  1803                           	callstack 0
  1804   000048                     DHT11_Read_Data@i:
  1805                           	callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x47
  1808   000048                     	ds	1
  1809   000049                     vfpfcnvrt@fmt:
  1810                           	callstack 0
  1811                           
  1812                           ; 1 bytes @ 0x48
  1813   000049                     	ds	1
  1814   00004A                     vfpfcnvrt@ap:
  1815                           	callstack 0
  1816                           
  1817                           ; 1 bytes @ 0x49
  1818   00004A                     	ds	1
  1819   00004B                     ??_vfpfcnvrt:
  1820                           
  1821                           ; 1 bytes @ 0x4A
  1822   00004B                     	ds	1
  1823   00004C                     vfpfcnvrt@convarg:
  1824                           	callstack 0
  1825                           
  1826                           ; 4 bytes @ 0x4B
  1827   00004C                     	ds	4
  1828   000050                     vfpfcnvrt@c:
  1829                           	callstack 0
  1830                           
  1831                           ; 1 bytes @ 0x4F
  1832   000050                     	ds	1
  1833   000051                     vfpfcnvrt@cp:
  1834                           	callstack 0
  1835                           
  1836                           ; 1 bytes @ 0x50
  1837   000051                     	ds	1
  1838   000052                     ?_vfprintf:
  1839                           	callstack 0
  1840   000052                     vfprintf@fp:
  1841                           	callstack 0
  1842                           
  1843                           ; 1 bytes @ 0x51
  1844   000052                     	ds	1
  1845   000053                     vfprintf@fmt:
  1846                           	callstack 0
  1847                           
  1848                           ; 1 bytes @ 0x52
  1849   000053                     	ds	1
  1850   000054                     vfprintf@ap:
  1851                           	callstack 0
  1852                           
  1853                           ; 1 bytes @ 0x53
  1854   000054                     	ds	1
  1855   000055                     vfprintf@cfmt:
  1856                           	callstack 0
  1857   000055                     
  1858                           ; 1 bytes @ 0x54
  1859   000055                     	ds	1
  1860   000056                     ?_sprintf:
  1861                           	callstack 0
  1862   000056                     sprintf@s:
  1863                           	callstack 0
  1864                           
  1865                           ; 1 bytes @ 0x55
  1866   000056                     	ds	1
  1867   000057                     sprintf@fmt:
  1868                           	callstack 0
  1869                           
  1870                           ; 1 bytes @ 0x56
  1871   000057                     	ds	5
  1872   00005C                     ??_main:
  1873                           
  1874                           ; 1 bytes @ 0x5B
  1875   00005C                     	ds	2
  1876                           
  1877 ;;
  1878 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1879 ;;
  1880 ;; *************** function _main *****************
  1881 ;; Defined at:
  1882 ;;		line 14 in file "11.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  buf1           20   76[BANK0 ] unsigned char [20]
  1887 ;;  buf2           20   56[BANK0 ] unsigned char [20]
  1888 ;;  hum             4  100[BANK0 ] float 
  1889 ;;  temp            4   96[BANK0 ] float 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         0       0       0       0       0       0       0
  1900 ;;      Locals:         0      48       0       0       0       0       0
  1901 ;;      Temps:          2       0       0       0       0       0       0
  1902 ;;      Totals:         2      48       0       0       0       0       0
  1903 ;;Total ram usage:       50 bytes
  1904 ;; Hardware stack levels required when called: 8
  1905 ;; This function calls:
  1906 ;;		_DHT11_Read_Data
  1907 ;;		_I2C_Init_Master
  1908 ;;		_Lcd_Clear
  1909 ;;		_Lcd_Init
  1910 ;;		_Lcd_Set_Cursor
  1911 ;;		_Lcd_Write_String
  1912 ;;		_OSC_Init
  1913 ;;		___flge
  1914 ;;		_sprintf
  1915 ;; This function is called by:
  1916 ;;		Startup code after reset
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text0
  1921   00242A                     __ptext0:
  1922                           	callstack 0
  1923   00242A                     _main:
  1924                           	callstack 23
  1925   00242A  0E00               	movlw	0
  1926   00242C  0100               	movlb	0	; () banked
  1927   00242E  6FC0               	movwf	main@temp& (0+255),b
  1928   002430  0E00               	movlw	0
  1929   002432  6FC1               	movwf	(main@temp+1)& (0+255),b
  1930   002434  0E00               	movlw	0
  1931   002436  6FC2               	movwf	(main@temp+2)& (0+255),b
  1932   002438  0E00               	movlw	0
  1933   00243A  6FC3               	movwf	(main@temp+3)& (0+255),b
  1934   00243C  0E00               	movlw	0
  1935   00243E  6FC4               	movwf	main@hum& (0+255),b
  1936   002440  0E00               	movlw	0
  1937   002442  6FC5               	movwf	(main@hum+1)& (0+255),b
  1938   002444  0E00               	movlw	0
  1939   002446  6FC6               	movwf	(main@hum+2)& (0+255),b
  1940   002448  0E00               	movlw	0
  1941   00244A  6FC7               	movwf	(main@hum+3)& (0+255),b
  1942   00244C                     
  1943                           ; BSR set to: 0
  1944   00244C  ECDD  F017         	call	_OSC_Init	;wreg free
  1945   002450  010F               	movlb	15	; () banked
  1946   002452  6B38               	clrf	56,b	;volatile
  1947   002454                     
  1948                           ; BSR set to: 15
  1949   002454  6B39               	clrf	57,b	;volatile
  1950   002456                     
  1951                           ; BSR set to: 15
  1952   002456  6B3A               	clrf	58,b	;volatile
  1953   002458                     
  1954                           ; BSR set to: 15
  1955   002458  6B3B               	clrf	59,b	;volatile
  1956   00245A                     
  1957                           ; BSR set to: 15
  1958   00245A  9495               	bcf	3989,2,c	;volatile
  1959   00245C                     
  1960                           ; BSR set to: 15
  1961   00245C  9695               	bcf	3989,3,c	;volatile
  1962   00245E                     
  1963                           ; BSR set to: 15
  1964   00245E  948C               	bcf	3980,2,c	;volatile
  1965   002460                     
  1966                           ; BSR set to: 15
  1967   002460  968C               	bcf	3980,3,c	;volatile
  1968   002462                     
  1969                           ; BSR set to: 15
  1970   002462  0E80               	movlw	128
  1971   002464  EC05  F018         	call	_I2C_Init_Master
  1972   002468  EC83  F016         	call	_Lcd_Init	;wreg free
  1973   00246C  0E01               	movlw	1
  1974   00246E  6E05               	movwf	Lcd_Set_Cursor@row^0,c
  1975   002470  0E01               	movlw	1
  1976   002472  EC04  F016         	call	_Lcd_Set_Cursor
  1977   002476  0E11               	movlw	low STR_1
  1978   002478  6E05               	movwf	Lcd_Write_String@str^0,c
  1979   00247A  5005               	movf	Lcd_Write_String@str^0,w,c
  1980   00247C  A4D8               	btfss	status,2,c
  1981   00247E  0E06               	movlw	high __smallconst
  1982   002480  6E06               	movwf	(Lcd_Write_String@str+1)^0,c
  1983   002482  ECD5  F015         	call	_Lcd_Write_String	;wreg free
  1984   002486  0E52               	movlw	82
  1985   002488  6E5D               	movwf	(??_main+1)^0,c
  1986   00248A  0E2B               	movlw	43
  1987   00248C  6E5C               	movwf	??_main^0,c
  1988   00248E  0E00               	movlw	0
  1989   002490                     u3877:
  1990   002490  2EE8               	decfsz	wreg,f,c
  1991   002492  D7FE               	bra	u3877
  1992   002494  2E5C               	decfsz	??_main^0,f,c
  1993   002496  D7FC               	bra	u3877
  1994   002498  2E5D               	decfsz	(??_main+1)^0,f,c
  1995   00249A  D7FA               	bra	u3877
  1996   00249C  D000               	nop2	
  1997   00249E  ECFA  F017         	call	_Lcd_Clear	;wreg free
  1998   0024A2                     l3526:
  1999   0024A2  0EC0               	movlw	low main@temp
  2000   0024A4  6E38               	movwf	DHT11_Read_Data@tem^0,c
  2001   0024A6  0EC4               	movlw	low main@hum
  2002   0024A8  6E39               	movwf	DHT11_Read_Data@hum^0,c
  2003   0024AA  EC58  F010         	call	_DHT11_Read_Data	;wreg free
  2004   0024AE  5038               	movf	?_DHT11_Read_Data^0,w,c
  2005   0024B0  1039               	iorwf	(?_DHT11_Read_Data+1)^0,w,c
  2006   0024B2  A4D8               	btfss	status,2,c
  2007   0024B4  EF5E  F012         	goto	u3841
  2008   0024B8  EF60  F012         	goto	u3840
  2009   0024BC                     u3841:
  2010   0024BC  EFB8  F012         	goto	l3538
  2011   0024C0                     u3840:
  2012   0024C0  0EAC               	movlw	low main@buf1
  2013   0024C2  6E56               	movwf	sprintf@s^0,c
  2014   0024C4  0E01               	movlw	low STR_2
  2015   0024C6  6E57               	movwf	sprintf@fmt^0,c
  2016   0024C8  C0C4  F058         	movff	main@hum,?_sprintf+2
  2017   0024CC  C0C5  F059         	movff	main@hum+1,?_sprintf+3
  2018   0024D0  C0C6  F05A         	movff	main@hum+2,?_sprintf+4
  2019   0024D4  C0C7  F05B         	movff	main@hum+3,?_sprintf+5
  2020   0024D8  EC69  F017         	call	_sprintf	;wreg free
  2021   0024DC  0E98               	movlw	low main@buf2
  2022   0024DE  6E56               	movwf	sprintf@s^0,c
  2023   0024E0  0E1E               	movlw	low STR_3
  2024   0024E2  6E57               	movwf	sprintf@fmt^0,c
  2025   0024E4  C0C0  F058         	movff	main@temp,?_sprintf+2
  2026   0024E8  C0C1  F059         	movff	main@temp+1,?_sprintf+3
  2027   0024EC  C0C2  F05A         	movff	main@temp+2,?_sprintf+4
  2028   0024F0  C0C3  F05B         	movff	main@temp+3,?_sprintf+5
  2029   0024F4  EC69  F017         	call	_sprintf	;wreg free
  2030   0024F8  0E00               	movlw	0
  2031   0024FA  6E1A               	movwf	___flge@ff1^0,c
  2032   0024FC  0E00               	movlw	0
  2033   0024FE  6E1B               	movwf	(___flge@ff1+1)^0,c
  2034   002500  0EC8               	movlw	200
  2035   002502  6E1C               	movwf	(___flge@ff1+2)^0,c
  2036   002504  0E41               	movlw	65
  2037   002506  6E1D               	movwf	(___flge@ff1+3)^0,c
  2038   002508  C0C0  F01E         	movff	main@temp,___flge@ff2
  2039   00250C  C0C1  F01F         	movff	main@temp+1,___flge@ff2+1
  2040   002510  C0C2  F020         	movff	main@temp+2,___flge@ff2+2
  2041   002514  C0C3  F021         	movff	main@temp+3,___flge@ff2+3
  2042   002518  EC6C  F013         	call	___flge	;wreg free
  2043   00251C  B0D8               	btfsc	status,0,c
  2044   00251E  EF93  F012         	goto	u3851
  2045   002522  EF95  F012         	goto	u3850
  2046   002526                     u3851:
  2047   002526  EF98  F012         	goto	l46
  2048   00252A                     u3850:
  2049   00252A  848C               	bsf	3980,2,c	;volatile
  2050   00252C  EF99  F012         	goto	l3534
  2051   002530                     l46:
  2052   002530  948C               	bcf	3980,2,c	;volatile
  2053   002532                     l3534:
  2054   002532  0E00               	movlw	0
  2055   002534  6E1A               	movwf	___flge@ff1^0,c
  2056   002536  0E00               	movlw	0
  2057   002538  6E1B               	movwf	(___flge@ff1+1)^0,c
  2058   00253A  0E20               	movlw	32
  2059   00253C  6E1C               	movwf	(___flge@ff1+2)^0,c
  2060   00253E  0E42               	movlw	66
  2061   002540  6E1D               	movwf	(___flge@ff1+3)^0,c
  2062   002542  C0C4  F01E         	movff	main@hum,___flge@ff2
  2063   002546  C0C5  F01F         	movff	main@hum+1,___flge@ff2+1
  2064   00254A  C0C6  F020         	movff	main@hum+2,___flge@ff2+2
  2065   00254E  C0C7  F021         	movff	main@hum+3,___flge@ff2+3
  2066   002552  EC6C  F013         	call	___flge	;wreg free
  2067   002556  B0D8               	btfsc	status,0,c
  2068   002558  EFB0  F012         	goto	u3861
  2069   00255C  EFB2  F012         	goto	u3860
  2070   002560                     u3861:
  2071   002560  EFB5  F012         	goto	l48
  2072   002564                     u3860:
  2073   002564  868C               	bsf	3980,3,c	;volatile
  2074   002566  EFC3  F012         	goto	l3546
  2075   00256A                     l48:
  2076   00256A  968C               	bcf	3980,3,c	;volatile
  2077   00256C  EFC3  F012         	goto	l3546
  2078   002570                     l3538:
  2079   002570  0EAC               	movlw	low main@buf1
  2080   002572  6E56               	movwf	sprintf@s^0,c
  2081   002574  0E2B               	movlw	low STR_4
  2082   002576  6E57               	movwf	sprintf@fmt^0,c
  2083   002578  EC69  F017         	call	_sprintf	;wreg free
  2084   00257C  0100               	movlb	0	; () banked
  2085   00257E  6B98               	clrf	main@buf2& (0+255),b
  2086   002580                     
  2087                           ; BSR set to: 0
  2088   002580  948C               	bcf	3980,2,c	;volatile
  2089   002582  EFB5  F012         	goto	l48
  2090   002586                     l3546:
  2091   002586  ECFA  F017         	call	_Lcd_Clear	;wreg free
  2092   00258A  0E01               	movlw	1
  2093   00258C  6E05               	movwf	Lcd_Set_Cursor@row^0,c
  2094   00258E  0E01               	movlw	1
  2095   002590  EC04  F016         	call	_Lcd_Set_Cursor
  2096   002594  0EAC               	movlw	low main@buf1
  2097   002596  6E05               	movwf	Lcd_Write_String@str^0,c
  2098   002598  6A06               	clrf	(Lcd_Write_String@str+1)^0,c
  2099   00259A  ECD5  F015         	call	_Lcd_Write_String	;wreg free
  2100   00259E  0E02               	movlw	2
  2101   0025A0  6E05               	movwf	Lcd_Set_Cursor@row^0,c
  2102   0025A2  0E01               	movlw	1
  2103   0025A4  EC04  F016         	call	_Lcd_Set_Cursor
  2104   0025A8  0E98               	movlw	low main@buf2
  2105   0025AA  6E05               	movwf	Lcd_Write_String@str^0,c
  2106   0025AC  6A06               	clrf	(Lcd_Write_String@str+1)^0,c
  2107   0025AE  ECD5  F015         	call	_Lcd_Write_String	;wreg free
  2108   0025B2  0E29               	movlw	41
  2109   0025B4  6E5D               	movwf	(??_main+1)^0,c
  2110   0025B6  0E96               	movlw	150
  2111   0025B8  6E5C               	movwf	??_main^0,c
  2112   0025BA  0E7F               	movlw	127
  2113   0025BC                     u3887:
  2114   0025BC  2EE8               	decfsz	wreg,f,c
  2115   0025BE  D7FE               	bra	u3887
  2116   0025C0  2E5C               	decfsz	??_main^0,f,c
  2117   0025C2  D7FC               	bra	u3887
  2118   0025C4  2E5D               	decfsz	(??_main+1)^0,f,c
  2119   0025C6  D7FA               	bra	u3887
  2120   0025C8  0000               	nop	
  2121   0025CA  EF51  F012         	goto	l3526
  2122   0025CE  EFFE  F03F         	goto	start
  2123   0025D2                     __end_of_main:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _sprintf *****************
  2127 ;; Defined at:
  2128 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  s               1   85[COMRAM] PTR unsigned char 
  2131 ;;		 -> main@buf2(20), main@buf1(20), 
  2132 ;;  fmt             1   86[COMRAM] PTR const unsigned char 
  2133 ;;		 -> STR_4(13), STR_3(13), STR_2(16), 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  f              11   45[BANK0 ] struct _IO_FILE
  2136 ;;  ret             2    0        int 
  2137 ;;  ap              1   44[BANK0 ] PTR void [1]
  2138 ;;		 -> ?_sprintf(2), 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2   85[COMRAM] int 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2148 ;;      Params:         6       0       0       0       0       0       0
  2149 ;;      Locals:         0      12       0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0
  2151 ;;      Totals:         6      12       0       0       0       0       0
  2152 ;;Total ram usage:       18 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 7
  2155 ;; This function calls:
  2156 ;;		_vfprintf
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text1
  2163   002ED2                     __ptext1:
  2164                           	callstack 0
  2165   002ED2                     _sprintf:
  2166                           	callstack 23
  2167   002ED2  0E58               	movlw	low (?_sprintf+2)
  2168   002ED4  0100               	movlb	0	; () banked
  2169   002ED6  6F8C               	movwf	sprintf@ap& (0+255),b
  2170   002ED8  C056  F08D         	movff	sprintf@s,sprintf@f
  2171   002EDC                     
  2172                           ; BSR set to: 0
  2173   002EDC  0E00               	movlw	0
  2174   002EDE  6F90               	movwf	(sprintf@f+3)& (0+255),b
  2175   002EE0  0E00               	movlw	0
  2176   002EE2  6F8F               	movwf	(sprintf@f+2)& (0+255),b
  2177   002EE4                     
  2178                           ; BSR set to: 0
  2179   002EE4  0E00               	movlw	0
  2180   002EE6  6F97               	movwf	(sprintf@f+10)& (0+255),b
  2181   002EE8  0E00               	movlw	0
  2182   002EEA  6F96               	movwf	(sprintf@f+9)& (0+255),b
  2183   002EEC                     
  2184                           ; BSR set to: 0
  2185   002EEC  0E8D               	movlw	low sprintf@f
  2186   002EEE  6E52               	movwf	vfprintf@fp^0,c
  2187   002EF0  C057  F053         	movff	sprintf@fmt,vfprintf@fmt
  2188   002EF4  0E8C               	movlw	low sprintf@ap
  2189   002EF6  6E54               	movwf	vfprintf@ap^0,c
  2190   002EF8  EC2D  F017         	call	_vfprintf	;wreg free
  2191   002EFC  5056               	movf	sprintf@s^0,w,c
  2192   002EFE  0100               	movlb	0	; () banked
  2193   002F00  258F               	addwf	(sprintf@f+2)& (0+255),w,b
  2194   002F02  6ED9               	movwf	fsr2l,c
  2195   002F04  6ADA               	clrf	fsr2h,c
  2196   002F06  6ADF               	clrf	indf2,c
  2197   002F08                     
  2198                           ; BSR set to: 0
  2199   002F08  0012               	return		;funcret
  2200   002F0A                     __end_of_sprintf:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _vfprintf *****************
  2204 ;; Defined at:
  2205 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  fp              1   81[COMRAM] PTR struct _IO_FILE
  2208 ;;		 -> sprintf@f(11), 
  2209 ;;  fmt             1   82[COMRAM] PTR const unsigned char 
  2210 ;;		 -> STR_4(13), STR_3(13), STR_2(16), 
  2211 ;;  ap              1   83[COMRAM] PTR PTR void 
  2212 ;;		 -> sprintf@ap(1), 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  2215 ;;		 -> STR_4(13), STR_3(13), STR_2(16), 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2   81[COMRAM] int 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2225 ;;      Params:         3       0       0       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0
  2228 ;;      Totals:         4       0       0       0       0       0       0
  2229 ;;Total ram usage:        4 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 6
  2232 ;; This function calls:
  2233 ;;		_vfpfcnvrt
  2234 ;; This function is called by:
  2235 ;;		_sprintf
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text2
  2240   002E5A                     __ptext2:
  2241                           	callstack 0
  2242   002E5A                     _vfprintf:
  2243                           	callstack 23
  2244   002E5A                     
  2245                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2246   002E5A  C053  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2249   002E5E  EF39  F017         	goto	l3392
  2250   002E62                     l3390:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2253   002E62  C052  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  2254   002E66  0E55               	movlw	low vfprintf@cfmt
  2255   002E68  6E49               	movwf	vfpfcnvrt@fmt^0,c
  2256   002E6A  C054  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  2257   002E6E  EC52  F00F         	call	_vfpfcnvrt	;wreg free
  2258   002E72                     l3392:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2261   002E72  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  2262   002E76                     	if	1	;There is more than 1 active tblptr byte
  2263   002E76  0E06               	movlw	high __smallconst
  2264   002E78  6EF7               	movwf	tblptrh,c
  2265   002E7A                     	endif
  2266   002E7A                     	if	0	;tblptru may be non-zero
  2267   002E7A                     	endif
  2268   002E7A                     	if	0	;tblptru may be non-zero
  2269   002E7A                     	endif
  2270   002E7A  0008               	tblrd		*
  2271   002E7C  50F5               	movf	tablat,w,c
  2272   002E7E  0900               	iorlw	0
  2273   002E80  A4D8               	btfss	status,2,c
  2274   002E82  EF45  F017         	goto	u3781
  2275   002E86  EF47  F017         	goto	u3780
  2276   002E8A                     u3781:
  2277   002E8A  EF31  F017         	goto	l3390
  2278   002E8E                     u3780:
  2279   002E8E                     
  2280                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2281   002E8E  0E00               	movlw	0
  2282   002E90  6E53               	movwf	(?_vfprintf+1)^0,c
  2283   002E92  0E00               	movlw	0
  2284   002E94  6E52               	movwf	?_vfprintf^0,c
  2285   002E96  0012               	return		;funcret
  2286   002E98                     __end_of_vfprintf:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _vfpfcnvrt *****************
  2290 ;; Defined at:
  2291 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  fp              1   71[COMRAM] PTR struct _IO_FILE
  2294 ;;		 -> sprintf@f(11), 
  2295 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  2296 ;;		 -> vfprintf@cfmt(1), 
  2297 ;;  ap              1   73[COMRAM] PTR PTR void 
  2298 ;;		 -> sprintf@ap(1), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  convarg         4   75[COMRAM] struct .
  2301 ;;  cp              1   80[COMRAM] PTR unsigned char 
  2302 ;;		 -> STR_4(13), STR_3(13), STR_2(16), 
  2303 ;;  c               1   79[COMRAM] unsigned char 
  2304 ;;  done            1    0        _Bool 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2314 ;;      Params:         3       0       0       0       0       0       0
  2315 ;;      Locals:         6       0       0       0       0       0       0
  2316 ;;      Temps:          1       0       0       0       0       0       0
  2317 ;;      Totals:        10       0       0       0       0       0       0
  2318 ;;Total ram usage:       10 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 5
  2321 ;; This function calls:
  2322 ;;		_efgtoa
  2323 ;;		_fputc
  2324 ;;		_read_prec_or_width
  2325 ;; This function is called by:
  2326 ;;		_vfprintf
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text3
  2331   001EA4                     __ptext3:
  2332                           	callstack 0
  2333   001EA4                     _vfpfcnvrt:
  2334                           	callstack 23
  2335   001EA4                     
  2336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2337   001EA4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2338   001EA6  6ED9               	movwf	fsr2l,c
  2339   001EA8  6ADA               	clrf	fsr2h,c
  2340   001EAA  CFDF FFF6          	movff	indf2,tblptrl
  2341   001EAE                     	if	1	;There is more than 1 active tblptr byte
  2342   001EAE  0E06               	movlw	high __smallconst
  2343   001EB0  6EF7               	movwf	tblptrh,c
  2344   001EB2                     	endif
  2345   001EB2                     	if	0	;tblptru may be non-zero
  2346   001EB2                     	endif
  2347   001EB2                     	if	0	;tblptru may be non-zero
  2348   001EB2                     	endif
  2349   001EB2  0008               	tblrd		*
  2350   001EB4  50F5               	movf	tablat,w,c
  2351   001EB6  0A25               	xorlw	37
  2352   001EB8  A4D8               	btfss	status,2,c
  2353   001EBA  EF61  F00F         	goto	u3571
  2354   001EBE  EF63  F00F         	goto	u3570
  2355   001EC2                     u3571:
  2356   001EC2  EF46  F010         	goto	l3276
  2357   001EC6                     u3570:
  2358   001EC6                     
  2359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2360   001EC6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2361   001EC8  6ED9               	movwf	fsr2l,c
  2362   001ECA  6ADA               	clrf	fsr2h,c
  2363   001ECC  2ADF               	incf	indf2,f,c
  2364   001ECE                     
  2365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2366   001ECE  0E00               	movlw	0
  2367   001ED0  0100               	movlb	0	; () banked
  2368   001ED2  6FD1               	movwf	(_width+1)& (0+255),b
  2369   001ED4  0E00               	movlw	0
  2370   001ED6  6FD0               	movwf	_width& (0+255),b
  2371   001ED8  C0D0  F05E         	movff	_width,_flags
  2372   001EDC                     
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2375   001EDC  69D2               	setf	_prec& (0+255),b
  2376   001EDE  69D3               	setf	(_prec+1)& (0+255),b
  2377   001EE0                     
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2380   001EE0  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2381   001EE2  6ED9               	movwf	fsr2l,c
  2382   001EE4  6ADA               	clrf	fsr2h,c
  2383   001EE6  CFDF FFF6          	movff	indf2,tblptrl
  2384   001EEA                     	if	1	;There is more than 1 active tblptr byte
  2385   001EEA  0E06               	movlw	high __smallconst
  2386   001EEC  6EF7               	movwf	tblptrh,c
  2387   001EEE                     	endif
  2388   001EEE                     	if	0	;tblptru may be non-zero
  2389   001EEE                     	endif
  2390   001EEE                     	if	0	;tblptru may be non-zero
  2391   001EEE                     	endif
  2392   001EEE  0008               	tblrd		*
  2393   001EF0  50F5               	movf	tablat,w,c
  2394   001EF2  0A2E               	xorlw	46
  2395   001EF4  A4D8               	btfss	status,2,c
  2396   001EF6  EF7F  F00F         	goto	u3581
  2397   001EFA  EF81  F00F         	goto	u3580
  2398   001EFE                     u3581:
  2399   001EFE  EF8F  F00F         	goto	l3232
  2400   001F02                     u3580:
  2401   001F02                     
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2404   001F02  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2405   001F04  6ED9               	movwf	fsr2l,c
  2406   001F06  6ADA               	clrf	fsr2h,c
  2407   001F08  2ADF               	incf	indf2,f,c
  2408   001F0A                     
  2409                           ; BSR set to: 0
  2410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2411   001F0A  C049  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2412   001F0E  C04A  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2413   001F12  EC17  F015         	call	_read_prec_or_width	;wreg free
  2414   001F16  C001  F0D2         	movff	?_read_prec_or_width,_prec
  2415   001F1A  C002  F0D3         	movff	?_read_prec_or_width+1,_prec+1
  2416   001F1E                     l3232:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2419   001F1E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2420   001F20  6ED9               	movwf	fsr2l,c
  2421   001F22  6ADA               	clrf	fsr2h,c
  2422   001F24  50DF               	movf	indf2,w,c
  2423   001F26  6E51               	movwf	vfpfcnvrt@cp^0,c
  2424   001F28                     
  2425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2426   001F28  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2427   001F2C                     	if	1	;There is more than 1 active tblptr byte
  2428   001F2C  0E06               	movlw	high __smallconst
  2429   001F2E  6EF7               	movwf	tblptrh,c
  2430   001F30                     	endif
  2431   001F30                     	if	0	;tblptru may be non-zero
  2432   001F30                     	endif
  2433   001F30                     	if	0	;tblptru may be non-zero
  2434   001F30                     	endif
  2435   001F30  0008               	tblrd		*
  2436   001F32  CFF5 F050          	movff	tablat,vfpfcnvrt@c
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2439   001F36  EFA7  F00F         	goto	l3242
  2440   001F3A                     l3236:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2443   001F3A  2A51               	incf	vfpfcnvrt@cp^0,f,c
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2446   001F3C  EFB6  F00F         	goto	l3244
  2447   001F40                     l3238:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2450   001F40  0E6C               	movlw	108
  2451   001F42  6E50               	movwf	vfpfcnvrt@c^0,c
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2454   001F44  EFB6  F00F         	goto	l3244
  2455   001F48                     l978:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2458   001F48  6A50               	clrf	vfpfcnvrt@c^0,c
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2461   001F4A  EFB6  F00F         	goto	l3244
  2462   001F4E                     l3242:
  2463   001F4E  5050               	movf	vfpfcnvrt@c^0,w,c
  2464                           
  2465                           ; Switch size 1, requested type "simple"
  2466                           ; Number of cases is 3, Range of values is 76 to 108
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte           10     6 (average)
  2470                           ;	Chosen strategy is simple_byte
  2471   001F50  0A4C               	xorlw	76	; case 76
  2472   001F52  B4D8               	btfsc	status,2,c
  2473   001F54  EF9D  F00F         	goto	l3236
  2474   001F58  0A2A               	xorlw	42	; case 102
  2475   001F5A  B4D8               	btfsc	status,2,c
  2476   001F5C  EFA0  F00F         	goto	l3238
  2477   001F60  0A0A               	xorlw	10	; case 108
  2478   001F62  B4D8               	btfsc	status,2,c
  2479   001F64  EF9D  F00F         	goto	l3236
  2480   001F68  EFA4  F00F         	goto	l978
  2481   001F6C                     l3244:
  2482   001F6C  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2483   001F70                     	if	1	;There is more than 1 active tblptr byte
  2484   001F70  0E06               	movlw	high __smallconst
  2485   001F72  6EF7               	movwf	tblptrh,c
  2486   001F74                     	endif
  2487   001F74                     	if	0	;tblptru may be non-zero
  2488   001F74                     	endif
  2489   001F74                     	if	0	;tblptru may be non-zero
  2490   001F74                     	endif
  2491   001F74  0008               	tblrd		*
  2492   001F76  50F5               	movf	tablat,w,c
  2493   001F78  0A66               	xorlw	102
  2494   001F7A  A4D8               	btfss	status,2,c
  2495   001F7C  EFC2  F00F         	goto	u3591
  2496   001F80  EFC4  F00F         	goto	u3590
  2497   001F84                     u3591:
  2498   001F84  EF21  F010         	goto	l3264
  2499   001F88                     u3590:
  2500   001F88  EFEE  F00F         	goto	l3252
  2501   001F8C                     l3246:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2504   001F8C  504A               	movf	vfpfcnvrt@ap^0,w,c
  2505   001F8E  6ED9               	movwf	fsr2l,c
  2506   001F90  6ADA               	clrf	fsr2h,c
  2507   001F92  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2508   001F96  0E04               	movlw	4
  2509   001F98  26DF               	addwf	indf2,f,c
  2510   001F9A  504B               	movf	??_vfpfcnvrt^0,w,c
  2511   001F9C  6ED9               	movwf	fsr2l,c
  2512   001F9E  6ADA               	clrf	fsr2h,c
  2513   001FA0  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg
  2514   001FA4  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+1
  2515   001FA8  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+2
  2516   001FAC  CFDE F04F          	movff	postinc2,vfpfcnvrt@convarg+3
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2519   001FB0  EFF9  F00F         	goto	l3254
  2520   001FB4                     l3248:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2523   001FB4  504A               	movf	vfpfcnvrt@ap^0,w,c
  2524   001FB6  6ED9               	movwf	fsr2l,c
  2525   001FB8  6ADA               	clrf	fsr2h,c
  2526   001FBA  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2527   001FBE  0E04               	movlw	4
  2528   001FC0  26DF               	addwf	indf2,f,c
  2529   001FC2  504B               	movf	??_vfpfcnvrt^0,w,c
  2530   001FC4  6ED9               	movwf	fsr2l,c
  2531   001FC6  6ADA               	clrf	fsr2h,c
  2532   001FC8  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg
  2533   001FCC  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+1
  2534   001FD0  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+2
  2535   001FD4  CFDE F04F          	movff	postinc2,vfpfcnvrt@convarg+3
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2538   001FD8  EFF9  F00F         	goto	l3254
  2539   001FDC                     l3252:
  2540   001FDC  5050               	movf	vfpfcnvrt@c^0,w,c
  2541                           
  2542                           ; Switch size 1, requested type "simple"
  2543                           ; Number of cases is 2, Range of values is 76 to 108
  2544                           ; switch strategies available:
  2545                           ; Name         Instructions Cycles
  2546                           ; simple_byte            7     4 (average)
  2547                           ;	Chosen strategy is simple_byte
  2548   001FDE  0A4C               	xorlw	76	; case 76
  2549   001FE0  B4D8               	btfsc	status,2,c
  2550   001FE2  EFDA  F00F         	goto	l3248
  2551   001FE6  0A20               	xorlw	32	; case 108
  2552   001FE8  B4D8               	btfsc	status,2,c
  2553   001FEA  EFC6  F00F         	goto	l3246
  2554   001FEE  EFF9  F00F         	goto	l3254
  2555   001FF2                     l3254:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2558   001FF2  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2559   001FF4  6ED9               	movwf	fsr2l,c
  2560   001FF6  6ADA               	clrf	fsr2h,c
  2561   001FF8  2851               	incf	vfpfcnvrt@cp^0,w,c
  2562   001FFA  6EDF               	movwf	indf2,c
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2565   001FFC  EF15  F010         	goto	l3262
  2566   002000                     l3256:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2569   002000  C048  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  2570   002004  C04C  F041         	movff	vfpfcnvrt@convarg,efgtoa@f
  2571   002008  C04D  F042         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2572   00200C  C04E  F043         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2573   002010  C04F  F044         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2574   002014  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2575   002018                     	if	1	;There is more than 1 active tblptr byte
  2576   002018  0E06               	movlw	high __smallconst
  2577   00201A  6EF7               	movwf	tblptrh,c
  2578   00201C                     	endif
  2579   00201C                     	if	0	;tblptru may be non-zero
  2580   00201C                     	endif
  2581   00201C                     	if	0	;tblptru may be non-zero
  2582   00201C                     	endif
  2583   00201C  0008               	tblrd		*
  2584   00201E  CFF5 F045          	movff	tablat,efgtoa@c
  2585   002022  EC21  F003         	call	_efgtoa	;wreg free
  2586   002026  EF57  F010         	goto	l988
  2587   00202A                     l3262:
  2588   00202A  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2589   00202E                     	if	1	;There is more than 1 active tblptr byte
  2590   00202E  0E06               	movlw	high __smallconst
  2591   002030  6EF7               	movwf	tblptrh,c
  2592   002032                     	endif
  2593   002032                     	if	0	;tblptru may be non-zero
  2594   002032                     	endif
  2595   002032                     	if	0	;tblptru may be non-zero
  2596   002032                     	endif
  2597   002032  0008               	tblrd		*
  2598   002034  50F5               	movf	tablat,w,c
  2599                           
  2600                           ; Switch size 1, requested type "simple"
  2601                           ; Number of cases is 1, Range of values is 102 to 102
  2602                           ; switch strategies available:
  2603                           ; Name         Instructions Cycles
  2604                           ; simple_byte            4     3 (average)
  2605                           ;	Chosen strategy is simple_byte
  2606   002036  0A66               	xorlw	102	; case 102
  2607   002038  B4D8               	btfsc	status,2,c
  2608   00203A  EF00  F010         	goto	l3256
  2609   00203E  EF21  F010         	goto	l3264
  2610   002042                     l3264:
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  2613   002042  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2614   002044  6ED9               	movwf	fsr2l,c
  2615   002046  6ADA               	clrf	fsr2h,c
  2616   002048  CFDF FFF6          	movff	indf2,tblptrl
  2617   00204C                     	if	1	;There is more than 1 active tblptr byte
  2618   00204C  0E06               	movlw	high __smallconst
  2619   00204E  6EF7               	movwf	tblptrh,c
  2620   002050                     	endif
  2621   002050                     	if	0	;tblptru may be non-zero
  2622   002050                     	endif
  2623   002050                     	if	0	;tblptru may be non-zero
  2624   002050                     	endif
  2625   002050  0008               	tblrd		*
  2626   002052  50F5               	movf	tablat,w,c
  2627   002054  0A25               	xorlw	37
  2628   002056  A4D8               	btfss	status,2,c
  2629   002058  EF30  F010         	goto	u3601
  2630   00205C  EF32  F010         	goto	u3600
  2631   002060                     u3601:
  2632   002060  EF40  F010         	goto	l3272
  2633   002064                     u3600:
  2634   002064                     
  2635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  2636   002064  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2637   002066  6ED9               	movwf	fsr2l,c
  2638   002068  6ADA               	clrf	fsr2h,c
  2639   00206A  2ADF               	incf	indf2,f,c
  2640   00206C                     
  2641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  2642   00206C  0E00               	movlw	0
  2643   00206E  6E02               	movwf	(fputc@c+1)^0,c
  2644   002070  0E25               	movlw	37
  2645   002072  6E01               	movwf	fputc@c^0,c
  2646   002074  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2647   002078  EC6D  F014         	call	_fputc	;wreg free
  2648   00207C  EF57  F010         	goto	l988
  2649   002080                     l3272:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2652   002080  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2653   002082  6ED9               	movwf	fsr2l,c
  2654   002084  6ADA               	clrf	fsr2h,c
  2655   002086  2ADF               	incf	indf2,f,c
  2656   002088  EF57  F010         	goto	l988
  2657   00208C                     l3276:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2660   00208C  5049               	movf	vfpfcnvrt@fmt^0,w,c
  2661   00208E  6ED9               	movwf	fsr2l,c
  2662   002090  6ADA               	clrf	fsr2h,c
  2663   002092  CFDF FFF6          	movff	indf2,tblptrl
  2664   002096                     	if	1	;There is more than 1 active tblptr byte
  2665   002096  0E06               	movlw	high __smallconst
  2666   002098  6EF7               	movwf	tblptrh,c
  2667   00209A                     	endif
  2668   00209A                     	if	0	;tblptru may be non-zero
  2669   00209A                     	endif
  2670   00209A                     	if	0	;tblptru may be non-zero
  2671   00209A                     	endif
  2672   00209A  0008               	tblrd		*
  2673   00209C  50F5               	movf	tablat,w,c
  2674   00209E  6E01               	movwf	fputc@c^0,c
  2675   0020A0  6A02               	clrf	(fputc@c+1)^0,c
  2676   0020A2  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2677   0020A6  EC6D  F014         	call	_fputc	;wreg free
  2678   0020AA  EF40  F010         	goto	l3272
  2679   0020AE                     l988:
  2680   0020AE  0012               	return		;funcret
  2681   0020B0                     __end_of_vfpfcnvrt:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _read_prec_or_width *****************
  2685 ;; Defined at:
  2686 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  2689 ;;		 -> vfprintf@cfmt(1), 
  2690 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  2691 ;;		 -> sprintf@ap(1), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  c               1    4[COMRAM] unsigned char 
  2694 ;;  n               2    5[COMRAM] int 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[COMRAM] int 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2704 ;;      Params:         2       0       0       0       0       0       0
  2705 ;;      Locals:         3       0       0       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0       0       0
  2707 ;;      Totals:         7       0       0       0       0       0       0
  2708 ;;Total ram usage:        7 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_vfpfcnvrt
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text4
  2718   002A2E                     __ptext4:
  2719                           	callstack 0
  2720   002A2E                     _read_prec_or_width:
  2721                           	callstack 27
  2722   002A2E                     
  2723                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2724   002A2E  0E00               	movlw	0
  2725   002A30  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2726   002A32  0E00               	movlw	0
  2727   002A34  6E06               	movwf	read_prec_or_width@n^0,c
  2728   002A36                     
  2729                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2730   002A36  5001               	movf	read_prec_or_width@fmt^0,w,c
  2731   002A38  6ED9               	movwf	fsr2l,c
  2732   002A3A  6ADA               	clrf	fsr2h,c
  2733   002A3C  CFDF FFF6          	movff	indf2,tblptrl
  2734   002A40                     	if	1	;There is more than 1 active tblptr byte
  2735   002A40  0E06               	movlw	high __smallconst
  2736   002A42  6EF7               	movwf	tblptrh,c
  2737   002A44                     	endif
  2738   002A44                     	if	0	;tblptru may be non-zero
  2739   002A44                     	endif
  2740   002A44                     	if	0	;tblptru may be non-zero
  2741   002A44                     	endif
  2742   002A44  0008               	tblrd		*
  2743   002A46  50F5               	movf	tablat,w,c
  2744   002A48  0A2A               	xorlw	42
  2745   002A4A  A4D8               	btfss	status,2,c
  2746   002A4C  EF2A  F015         	goto	u3521
  2747   002A50  EF2C  F015         	goto	u3520
  2748   002A54                     u3521:
  2749   002A54  EF51  F015         	goto	l3210
  2750   002A58                     u3520:
  2751   002A58                     
  2752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2753   002A58  5001               	movf	read_prec_or_width@fmt^0,w,c
  2754   002A5A  6ED9               	movwf	fsr2l,c
  2755   002A5C  6ADA               	clrf	fsr2h,c
  2756   002A5E  2ADF               	incf	indf2,f,c
  2757   002A60                     
  2758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2759   002A60  5002               	movf	read_prec_or_width@ap^0,w,c
  2760   002A62  6ED9               	movwf	fsr2l,c
  2761   002A64  6ADA               	clrf	fsr2h,c
  2762   002A66  0E02               	movlw	2
  2763   002A68  26DF               	addwf	indf2,f,c
  2764   002A6A  5CDF               	subwf	indf2,w,c
  2765   002A6C  6ED9               	movwf	fsr2l,c
  2766   002A6E  6ADA               	clrf	fsr2h,c
  2767   002A70  CFDE F006          	movff	postinc2,read_prec_or_width@n
  2768   002A74  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2771   002A78  EF64  F015         	goto	l964
  2772   002A7C                     l3206:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2775   002A7C  0E0A               	movlw	10
  2776   002A7E  0206               	mulwf	read_prec_or_width@n^0,c
  2777   002A80  CFF3 F003          	movff	prodl,??_read_prec_or_width
  2778   002A84  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  2779   002A88  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2780   002A8A  50F3               	movf	prodl,w,c
  2781   002A8C  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2782   002A8E  5005               	movf	read_prec_or_width@c^0,w,c
  2783   002A90  2403               	addwf	??_read_prec_or_width^0,w,c
  2784   002A92  6E06               	movwf	read_prec_or_width@n^0,c
  2785   002A94  0E00               	movlw	0
  2786   002A96  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2787   002A98  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2788   002A9A                     
  2789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2790   002A9A  5001               	movf	read_prec_or_width@fmt^0,w,c
  2791   002A9C  6ED9               	movwf	fsr2l,c
  2792   002A9E  6ADA               	clrf	fsr2h,c
  2793   002AA0  2ADF               	incf	indf2,f,c
  2794   002AA2                     l3210:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2797   002AA2  5001               	movf	read_prec_or_width@fmt^0,w,c
  2798   002AA4  6ED9               	movwf	fsr2l,c
  2799   002AA6  6ADA               	clrf	fsr2h,c
  2800   002AA8  CFDF FFF6          	movff	indf2,tblptrl
  2801   002AAC                     	if	1	;There is more than 1 active tblptr byte
  2802   002AAC  0E06               	movlw	high __smallconst
  2803   002AAE  6EF7               	movwf	tblptrh,c
  2804   002AB0                     	endif
  2805   002AB0                     	if	0	;tblptru may be non-zero
  2806   002AB0                     	endif
  2807   002AB0                     	if	0	;tblptru may be non-zero
  2808   002AB0                     	endif
  2809   002AB0  0008               	tblrd		*
  2810   002AB2  50F5               	movf	tablat,w,c
  2811   002AB4  0FD0               	addlw	208
  2812   002AB6  6E05               	movwf	read_prec_or_width@c^0,c
  2813   002AB8  0E09               	movlw	9
  2814   002ABA  6405               	cpfsgt	read_prec_or_width@c^0,c
  2815   002ABC  EF62  F015         	goto	u3531
  2816   002AC0  EF64  F015         	goto	u3530
  2817   002AC4                     u3531:
  2818   002AC4  EF3E  F015         	goto	l3206
  2819   002AC8                     u3530:
  2820   002AC8                     l964:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2823   002AC8  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2824   002ACC  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2825   002AD0  0012               	return		;funcret
  2826   002AD2                     __end_of_read_prec_or_width:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _efgtoa *****************
  2830 ;; Defined at:
  2831 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  fp              1   63[COMRAM] PTR struct _IO_FILE
  2834 ;;		 -> sprintf@f(11), 
  2835 ;;  f               4   64[COMRAM] PTR struct _IO_FILE
  2836 ;;  c               1   68[COMRAM] unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  u               4   40[BANK0 ] struct flui
  2839 ;;  g               4   36[BANK0 ] struct flui
  2840 ;;  l               4   29[BANK0 ] struct flui
  2841 ;;  h               4   25[BANK0 ] struct flui
  2842 ;;  ou              4   19[BANK0 ] struct flui
  2843 ;;  n               2   34[BANK0 ] int 
  2844 ;;  i               2   23[BANK0 ] int 
  2845 ;;  w               2   17[BANK0 ] int 
  2846 ;;  e               2   15[BANK0 ] int 
  2847 ;;  m               2   13[BANK0 ] int 
  2848 ;;  d               2   11[BANK0 ] int 
  2849 ;;  t               2    4[BANK0 ] int 
  2850 ;;  p               2    2[BANK0 ] int 
  2851 ;;  ne              2    0[BANK0 ] int 
  2852 ;;  sign            1   33[BANK0 ] unsigned char 
  2853 ;;  nmode           1   10[BANK0 ] unsigned char 
  2854 ;;  mode            1    9[BANK0 ] unsigned char 
  2855 ;;  pp              1    8[BANK0 ] unsigned char 
  2856 ;;  esign           1    0        unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2866 ;;      Params:         6       0       0       0       0       0       0
  2867 ;;      Locals:         0      44       0       0       0       0       0
  2868 ;;      Temps:          2       0       0       0       0       0       0
  2869 ;;      Totals:         8      44       0       0       0       0       0
  2870 ;;Total ram usage:       52 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 4
  2873 ;; This function calls:
  2874 ;;		___fladd
  2875 ;;		___fldiv
  2876 ;;		___fleq
  2877 ;;		___flge
  2878 ;;		___flmul
  2879 ;;		___flneg
  2880 ;;		___flsub
  2881 ;;		___fltol
  2882 ;;		___fpclassifyf
  2883 ;;		_floorf
  2884 ;;		_labs
  2885 ;;		_memcpy
  2886 ;;		_pad
  2887 ;;		_strcpy
  2888 ;; This function is called by:
  2889 ;;		_vfpfcnvrt
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text5
  2894   000642                     __ptext5:
  2895                           	callstack 0
  2896   000642                     _efgtoa:
  2897                           	callstack 23
  2898   000642                     
  2899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2900   000642  0100               	movlb	0	; () banked
  2901   000644  6B81               	clrf	efgtoa@sign& (0+255),b
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2904   000646  C041  F084         	movff	efgtoa@f,efgtoa@g
  2905   00064A  C042  F085         	movff	efgtoa@f+1,efgtoa@g+1
  2906   00064E  C043  F086         	movff	efgtoa@f+2,efgtoa@g+2
  2907   000652  C044  F087         	movff	efgtoa@f+3,efgtoa@g+3
  2908   000656                     
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2911   000656  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2912   000658  EF32  F003         	goto	u3200
  2913   00065C  EF30  F003         	goto	u3201
  2914   000660                     u3201:
  2915   000660  EF46  F003         	goto	l2986
  2916   000664                     u3200:
  2917   000664                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2920   000664  0E01               	movlw	1
  2921   000666  6F81               	movwf	efgtoa@sign& (0+255),b
  2922   000668                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2925   000668  C084  F001         	movff	efgtoa@g,___flneg@f1
  2926   00066C  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2927   000670  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2928   000674  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2929   000678  EC85  F017         	call	___flneg	;wreg free
  2930   00067C  C001  F084         	movff	?___flneg,efgtoa@g
  2931   000680  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  2932   000684  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  2933   000688  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  2934   00068C                     l2986:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2937   00068C  0E00               	movlw	0
  2938   00068E  0100               	movlb	0	; () banked
  2939   000690  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2940   000692  0E00               	movlw	0
  2941   000694  6F82               	movwf	efgtoa@n& (0+255),b
  2942   000696                     
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2945   000696  C0D0  F071         	movff	_width,efgtoa@w
  2946   00069A  C0D1  F072         	movff	_width+1,efgtoa@w+1
  2947   00069E                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2950   00069E  5181               	movf	efgtoa@sign& (0+255),w,b
  2951   0006A0  B4D8               	btfsc	status,2,c
  2952   0006A2  EF55  F003         	goto	u3211
  2953   0006A6  EF57  F003         	goto	u3210
  2954   0006AA                     u3211:
  2955   0006AA  EF6B  F003         	goto	l3000
  2956   0006AE                     u3210:
  2957   0006AE                     
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2960   0006AE  5181               	movf	efgtoa@sign& (0+255),w,b
  2961   0006B0  A4D8               	btfss	status,2,c
  2962   0006B2  EF5D  F003         	goto	u3221
  2963   0006B6  EF5F  F003         	goto	u3220
  2964   0006BA                     u3221:
  2965   0006BA  EF65  F003         	goto	l2996
  2966   0006BE                     u3220:
  2967   0006BE                     
  2968                           ; BSR set to: 0
  2969   0006BE  0E00               	movlw	0
  2970   0006C0  6F67               	movwf	(_efgtoa$1190+1)& (0+255),b
  2971   0006C2  0E2B               	movlw	43
  2972   0006C4  6F66               	movwf	_efgtoa$1190& (0+255),b
  2973   0006C6  EF69  F003         	goto	l2998
  2974   0006CA                     l2996:
  2975                           
  2976                           ; BSR set to: 0
  2977   0006CA  0E00               	movlw	0
  2978   0006CC  6F67               	movwf	(_efgtoa$1190+1)& (0+255),b
  2979   0006CE  0E2D               	movlw	45
  2980   0006D0  6F66               	movwf	_efgtoa$1190& (0+255),b
  2981   0006D2                     l2998:
  2982                           
  2983                           ; BSR set to: 0
  2984   0006D2  C066  F081         	movff	_efgtoa$1190,efgtoa@sign
  2985   0006D6                     l3000:
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2989   0006D6  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2990   0006DA  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2991   0006DE  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2992   0006E2  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2993   0006E6  ECEE  F013         	call	___fpclassifyf	;wreg free
  2994   0006EA  0401               	decf	?___fpclassifyf^0,w,c
  2995   0006EC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2996   0006EE  A4D8               	btfss	status,2,c
  2997   0006F0  EF7C  F003         	goto	u3231
  2998   0006F4  EF7E  F003         	goto	u3230
  2999   0006F8                     u3231:
  3000   0006F8  EFAD  F003         	goto	l3018
  3001   0006FC                     u3230:
  3002   0006FC                     
  3003                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3004   0006FC  0100               	movlb	0	; () banked
  3005   0006FE  5181               	movf	efgtoa@sign& (0+255),w,b
  3006   000700  B4D8               	btfsc	status,2,c
  3007   000702  EF85  F003         	goto	u3241
  3008   000706  EF87  F003         	goto	u3240
  3009   00070A                     u3241:
  3010   00070A  EF90  F003         	goto	l3010
  3011   00070E                     u3240:
  3012   00070E                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3015   00070E  C081  F100         	movff	efgtoa@sign,_dbuf
  3016   000712                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3019   000712  0771               	decf	efgtoa@w& (0+255),f,b
  3020   000714  A0D8               	btfss	status,0,c
  3021   000716  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3022   000718                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3025   000718  0E00               	movlw	0
  3026   00071A  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3027   00071C  0E01               	movlw	1
  3028   00071E  6F82               	movwf	efgtoa@n& (0+255),b
  3029   000720                     l3010:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3033   000720  0E00               	movlw	low _dbuf
  3034   000722  2582               	addwf	efgtoa@n& (0+255),w,b
  3035   000724  6E01               	movwf	strcpy@dest^0,c
  3036   000726  0E01               	movlw	high _dbuf
  3037   000728  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3038   00072A  6E02               	movwf	(strcpy@dest+1)^0,c
  3039   00072C  0E38               	movlw	low STR_5
  3040   00072E  6E03               	movwf	strcpy@src^0,c
  3041   000730  EC4C  F017         	call	_strcpy	;wreg free
  3042   000734                     l3012:
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3045   000734  0100               	movlb	0	; () banked
  3046   000736  0EFD               	movlw	253
  3047   000738  2771               	addwf	efgtoa@w& (0+255),f,b
  3048   00073A  0EFF               	movlw	255
  3049   00073C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3050   00073E                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3053   00073E  C040  F00F         	movff	efgtoa@fp,pad@fp
  3054   000742  0E00               	movlw	low _dbuf
  3055   000744  6E10               	movwf	pad@buf^0,c
  3056   000746  0E01               	movlw	high _dbuf
  3057   000748  6E11               	movwf	(pad@buf+1)^0,c
  3058   00074A  C071  F012         	movff	efgtoa@w,pad@p
  3059   00074E  C072  F013         	movff	efgtoa@w+1,pad@p+1
  3060   000752  ECA2  F015         	call	_pad	;wreg free
  3061   000756  EF12  F008         	goto	l919
  3062   00075A                     l3018:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3065   00075A  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  3066   00075E  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3067   000762  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3068   000766  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3069   00076A  ECEE  F013         	call	___fpclassifyf	;wreg free
  3070   00076E  5001               	movf	?___fpclassifyf^0,w,c
  3071   000770  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3072   000772  A4D8               	btfss	status,2,c
  3073   000774  EFBE  F003         	goto	u3251
  3074   000778  EFC0  F003         	goto	u3250
  3075   00077C                     u3251:
  3076   00077C  EFDE  F003         	goto	l3036
  3077   000780                     u3250:
  3078   000780                     
  3079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3080   000780  0100               	movlb	0	; () banked
  3081   000782  5181               	movf	efgtoa@sign& (0+255),w,b
  3082   000784  B4D8               	btfsc	status,2,c
  3083   000786  EFC7  F003         	goto	u3261
  3084   00078A  EFC9  F003         	goto	u3260
  3085   00078E                     u3261:
  3086   00078E  EFD2  F003         	goto	l3028
  3087   000792                     u3260:
  3088   000792                     
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3091   000792  C081  F100         	movff	efgtoa@sign,_dbuf
  3092   000796                     
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3095   000796  0771               	decf	efgtoa@w& (0+255),f,b
  3096   000798  A0D8               	btfss	status,0,c
  3097   00079A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3098   00079C                     
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3101   00079C  0E00               	movlw	0
  3102   00079E  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3103   0007A0  0E01               	movlw	1
  3104   0007A2  6F82               	movwf	efgtoa@n& (0+255),b
  3105   0007A4                     l3028:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3109   0007A4  0E00               	movlw	low _dbuf
  3110   0007A6  2582               	addwf	efgtoa@n& (0+255),w,b
  3111   0007A8  6E01               	movwf	strcpy@dest^0,c
  3112   0007AA  0E01               	movlw	high _dbuf
  3113   0007AC  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3114   0007AE  6E02               	movwf	(strcpy@dest+1)^0,c
  3115   0007B0  0E3C               	movlw	low STR_8
  3116   0007B2  6E03               	movwf	strcpy@src^0,c
  3117   0007B4  EC4C  F017         	call	_strcpy	;wreg free
  3118   0007B8  EF9A  F003         	goto	l3012
  3119   0007BC                     l3036:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3122   0007BC  0E00               	movlw	0
  3123   0007BE  0100               	movlb	0	; () banked
  3124   0007C0  6F88               	movwf	efgtoa@u& (0+255),b
  3125   0007C2  0E00               	movlw	0
  3126   0007C4  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3127   0007C6  0E80               	movlw	128
  3128   0007C8  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3129   0007CA  0E3F               	movlw	63
  3130   0007CC  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3133   0007CE  0E00               	movlw	0
  3134   0007D0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3135   0007D2  0E00               	movlw	0
  3136   0007D4  6F6F               	movwf	efgtoa@e& (0+255),b
  3137   0007D6                     
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3140   0007D6  C084  F001         	movff	efgtoa@g,___fleq@ff1
  3141   0007DA  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3142   0007DE  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3143   0007E2  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3144   0007E6  0E00               	movlw	0
  3145   0007E8  6E05               	movwf	___fleq@ff2^0,c
  3146   0007EA  0E00               	movlw	0
  3147   0007EC  6E06               	movwf	(___fleq@ff2+1)^0,c
  3148   0007EE  0E00               	movlw	0
  3149   0007F0  6E07               	movwf	(___fleq@ff2+2)^0,c
  3150   0007F2  0E00               	movlw	0
  3151   0007F4  6E08               	movwf	(___fleq@ff2+3)^0,c
  3152   0007F6  ECC2  F014         	call	___fleq	;wreg free
  3153   0007FA  B0D8               	btfsc	status,0,c
  3154   0007FC  EF02  F004         	goto	u3271
  3155   000800  EF04  F004         	goto	u3270
  3156   000804                     u3271:
  3157   000804  EFE3  F004         	goto	l922
  3158   000808                     u3270:
  3159   000808  EF11  F004         	goto	l3044
  3160   00080C                     l924:
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3163   00080C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3164   000810  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3165   000814  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3166   000818  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3167   00081C                     
  3168                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3169   00081C  0100               	movlb	0	; () banked
  3170   00081E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3171   000820  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3172   000822                     l3044:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3175   000822  C088  F001         	movff	efgtoa@u,___flmul@b
  3176   000826  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3177   00082A  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3178   00082E  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3179   000832  0E00               	movlw	0
  3180   000834  6E05               	movwf	___flmul@a^0,c
  3181   000836  0E00               	movlw	0
  3182   000838  6E06               	movwf	(___flmul@a+1)^0,c
  3183   00083A  0E20               	movlw	32
  3184   00083C  6E07               	movwf	(___flmul@a+2)^0,c
  3185   00083E  0E41               	movlw	65
  3186   000840  6E08               	movwf	(___flmul@a+3)^0,c
  3187   000842  EC6E  F00A         	call	___flmul	;wreg free
  3188   000846  C001  F073         	movff	?___flmul,efgtoa@ou
  3189   00084A  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3190   00084E  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3191   000852  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3192   000856  0100               	movlb	0	; () banked
  3193   000858  5173               	movf	efgtoa@ou& (0+255),w,b
  3194   00085A  5D84               	subwf	efgtoa@g& (0+255),w,b
  3195   00085C  6E01               	movwf	labs@a^0,c
  3196   00085E  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3197   000860  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3198   000862  6E02               	movwf	(labs@a+1)^0,c
  3199   000864  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3200   000866  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3201   000868  6E03               	movwf	(labs@a+2)^0,c
  3202   00086A  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3203   00086C  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3204   00086E  6E04               	movwf	(labs@a+3)^0,c
  3205   000870  EC30  F016         	call	_labs	;wreg free
  3206   000874  BE04               	btfsc	(?_labs+3)^0,7,c
  3207   000876  EF48  F004         	goto	u3281
  3208   00087A  5004               	movf	(?_labs+3)^0,w,c
  3209   00087C  1003               	iorwf	(?_labs+2)^0,w,c
  3210   00087E  1002               	iorwf	(?_labs+1)^0,w,c
  3211   000880  E109               	bnz	u3280
  3212   000882  0E02               	movlw	2
  3213   000884  5C01               	subwf	?_labs^0,w,c
  3214   000886  A0D8               	btfss	status,0,c
  3215   000888  EF48  F004         	goto	u3281
  3216   00088C  EF4A  F004         	goto	u3280
  3217   000890                     u3281:
  3218   000890  EF06  F004         	goto	l924
  3219   000894                     u3280:
  3220   000894  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  3221   000898  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  3222   00089C  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  3223   0008A0  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  3224   0008A4  C084  F01E         	movff	efgtoa@g,___flge@ff2
  3225   0008A8  C085  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  3226   0008AC  C086  F020         	movff	efgtoa@g+2,___flge@ff2+2
  3227   0008B0  C087  F021         	movff	efgtoa@g+3,___flge@ff2+3
  3228   0008B4  EC6C  F013         	call	___flge	;wreg free
  3229   0008B8  A0D8               	btfss	status,0,c
  3230   0008BA  EF61  F004         	goto	u3291
  3231   0008BE  EF63  F004         	goto	u3290
  3232   0008C2                     u3291:
  3233   0008C2  EF06  F004         	goto	l924
  3234   0008C6                     u3290:
  3235   0008C6                     
  3236                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3237   0008C6  0100               	movlb	0	; () banked
  3238   0008C8  5188               	movf	efgtoa@u& (0+255),w,b
  3239   0008CA  5D84               	subwf	efgtoa@g& (0+255),w,b
  3240   0008CC  6E01               	movwf	labs@a^0,c
  3241   0008CE  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3242   0008D0  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3243   0008D2  6E02               	movwf	(labs@a+1)^0,c
  3244   0008D4  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3245   0008D6  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3246   0008D8  6E03               	movwf	(labs@a+2)^0,c
  3247   0008DA  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3248   0008DC  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3249   0008DE  6E04               	movwf	(labs@a+3)^0,c
  3250   0008E0  EC30  F016         	call	_labs	;wreg free
  3251   0008E4  BE04               	btfsc	(?_labs+3)^0,7,c
  3252   0008E6  EF82  F004         	goto	u3300
  3253   0008EA  5004               	movf	(?_labs+3)^0,w,c
  3254   0008EC  1003               	iorwf	(?_labs+2)^0,w,c
  3255   0008EE  1002               	iorwf	(?_labs+1)^0,w,c
  3256   0008F0  E107               	bnz	u3301
  3257   0008F2  0E02               	movlw	2
  3258   0008F4  5C01               	subwf	?_labs^0,w,c
  3259   0008F6  B0D8               	btfsc	status,0,c
  3260   0008F8  EF80  F004         	goto	u3301
  3261   0008FC  EF82  F004         	goto	u3300
  3262   000900                     u3301:
  3263   000900  EFCA  F004         	goto	l3062
  3264   000904                     u3300:
  3265   000904                     l3052:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3268   000904  C088  F084         	movff	efgtoa@u,efgtoa@g
  3269   000908  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  3270   00090C  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  3271   000910  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3274   000914  EFE3  F004         	goto	l922
  3275   000918                     l3054:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3278   000918  C088  F00F         	movff	efgtoa@u,___fldiv@b
  3279   00091C  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3280   000920  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3281   000924  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3282   000928  0E00               	movlw	0
  3283   00092A  6E13               	movwf	___fldiv@a^0,c
  3284   00092C  0E00               	movlw	0
  3285   00092E  6E14               	movwf	(___fldiv@a+1)^0,c
  3286   000930  0E20               	movlw	32
  3287   000932  6E15               	movwf	(___fldiv@a+2)^0,c
  3288   000934  0E41               	movlw	65
  3289   000936  6E16               	movwf	(___fldiv@a+3)^0,c
  3290   000938  EC81  F00C         	call	___fldiv	;wreg free
  3291   00093C  C00F  F088         	movff	?___fldiv,efgtoa@u
  3292   000940  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  3293   000944  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3294   000948  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3295   00094C                     
  3296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3297   00094C  0100               	movlb	0	; () banked
  3298   00094E  076F               	decf	efgtoa@e& (0+255),f,b
  3299   000950  A0D8               	btfss	status,0,c
  3300   000952  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3301   000954                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3304   000954  5188               	movf	efgtoa@u& (0+255),w,b
  3305   000956  5D84               	subwf	efgtoa@g& (0+255),w,b
  3306   000958  6E01               	movwf	labs@a^0,c
  3307   00095A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3308   00095C  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3309   00095E  6E02               	movwf	(labs@a+1)^0,c
  3310   000960  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3311   000962  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3312   000964  6E03               	movwf	(labs@a+2)^0,c
  3313   000966  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3314   000968  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3315   00096A  6E04               	movwf	(labs@a+3)^0,c
  3316   00096C  EC30  F016         	call	_labs	;wreg free
  3317   000970  BE04               	btfsc	(?_labs+3)^0,7,c
  3318   000972  EFC8  F004         	goto	u3310
  3319   000976  5004               	movf	(?_labs+3)^0,w,c
  3320   000978  1003               	iorwf	(?_labs+2)^0,w,c
  3321   00097A  1002               	iorwf	(?_labs+1)^0,w,c
  3322   00097C  E107               	bnz	u3311
  3323   00097E  0E02               	movlw	2
  3324   000980  5C01               	subwf	?_labs^0,w,c
  3325   000982  B0D8               	btfsc	status,0,c
  3326   000984  EFC6  F004         	goto	u3311
  3327   000988  EFC8  F004         	goto	u3310
  3328   00098C                     u3311:
  3329   00098C  EFCA  F004         	goto	l3062
  3330   000990                     u3310:
  3331   000990  EF82  F004         	goto	l3052
  3332   000994                     l3062:
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3335   000994  C084  F01A         	movff	efgtoa@g,___flge@ff1
  3336   000998  C085  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3337   00099C  C086  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3338   0009A0  C087  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3339   0009A4  C088  F01E         	movff	efgtoa@u,___flge@ff2
  3340   0009A8  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3341   0009AC  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3342   0009B0  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3343   0009B4  EC6C  F013         	call	___flge	;wreg free
  3344   0009B8  A0D8               	btfss	status,0,c
  3345   0009BA  EFE1  F004         	goto	u3321
  3346   0009BE  EFE3  F004         	goto	u3320
  3347   0009C2                     u3321:
  3348   0009C2  EF8C  F004         	goto	l3054
  3349   0009C6                     u3320:
  3350   0009C6                     l922:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3353   0009C6  C045  F069         	movff	efgtoa@c,efgtoa@mode
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3356   0009CA  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3357   0009CE                     
  3358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3359   0009CE  0100               	movlb	0	; () banked
  3360   0009D0  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  3361   0009D2  EFED  F004         	goto	u3331
  3362   0009D6  EFEF  F004         	goto	u3330
  3363   0009DA                     u3331:
  3364   0009DA  EFF5  F004         	goto	l3068
  3365   0009DE                     u3330:
  3366   0009DE                     
  3367                           ; BSR set to: 0
  3368   0009DE  C0D2  F062         	movff	_prec,efgtoa@p
  3369   0009E2  C0D3  F063         	movff	_prec+1,efgtoa@p+1
  3370   0009E6  EFF9  F004         	goto	l3070
  3371   0009EA                     l3068:
  3372                           
  3373                           ; BSR set to: 0
  3374   0009EA  0E00               	movlw	0
  3375   0009EC  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3376   0009EE  0E06               	movlw	6
  3377   0009F0  6F62               	movwf	efgtoa@p& (0+255),b
  3378   0009F2                     l3070:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3382   0009F2  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3383   0009F6  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3384   0009FA                     
  3385                           ; BSR set to: 0
  3386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3387   0009FA  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3388   0009FC  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3389   0009FE                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3392   0009FE  0E66               	movlw	102
  3393   000A00  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3394   000A02  A4D8               	btfss	status,2,c
  3395   000A04  EF06  F005         	goto	u3341
  3396   000A08  EF08  F005         	goto	u3340
  3397   000A0C                     u3341:
  3398   000A0C  EF28  F005         	goto	l3084
  3399   000A10                     u3340:
  3400   000A10                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3403   000A10  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3404   000A12  EF0F  F005         	goto	u3350
  3405   000A16  EF0D  F005         	goto	u3351
  3406   000A1A                     u3351:
  3407   000A1A  EF1B  F005         	goto	l3080
  3408   000A1E                     u3350:
  3409   000A1E                     
  3410                           ; BSR set to: 0
  3411                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3412   000A1E  0E00               	movlw	0
  3413   000A20  6F88               	movwf	efgtoa@u& (0+255),b
  3414   000A22  0E00               	movlw	0
  3415   000A24  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3416   000A26  0E80               	movlw	128
  3417   000A28  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3418   000A2A  0E3F               	movlw	63
  3419   000A2C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3422   000A2E  0E00               	movlw	0
  3423   000A30  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3424   000A32  0E00               	movlw	0
  3425   000A34  6F6F               	movwf	efgtoa@e& (0+255),b
  3426   000A36                     l3080:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3430   000A36  0E67               	movlw	103
  3431   000A38  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3432   000A3A  B4D8               	btfsc	status,2,c
  3433   000A3C  EF22  F005         	goto	u3361
  3434   000A40  EF24  F005         	goto	u3360
  3435   000A44                     u3361:
  3436   000A44  EF28  F005         	goto	l3084
  3437   000A48                     u3360:
  3438   000A48                     
  3439                           ; BSR set to: 0
  3440                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3441   000A48  516F               	movf	efgtoa@e& (0+255),w,b
  3442   000A4A  276D               	addwf	efgtoa@m& (0+255),f,b
  3443   000A4C  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3444   000A4E  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3445   000A50                     l3084:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3449   000A50  0E00               	movlw	0
  3450   000A52  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3451   000A54  0E00               	movlw	0
  3452   000A56  6F77               	movwf	efgtoa@i& (0+255),b
  3453   000A58                     
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3456   000A58  C084  F079         	movff	efgtoa@g,efgtoa@h
  3457   000A5C  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3458   000A60  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3459   000A64  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3460   000A68                     
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3463   000A68  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3464   000A6C  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3465   000A70  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3466   000A74  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3469   000A78  EFB9  F005         	goto	l3098
  3470   000A7C                     l3090:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3474   000A7C  C079  F00F         	movff	efgtoa@h,___fldiv@b
  3475   000A80  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3476   000A84  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3477   000A88  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3478   000A8C  C088  F013         	movff	efgtoa@u,___fldiv@a
  3479   000A90  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3480   000A94  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3481   000A98  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3482   000A9C  EC81  F00C         	call	___fldiv	;wreg free
  3483   000AA0  C00F  F028         	movff	?___fldiv,floorf@x
  3484   000AA4  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3485   000AA8  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3486   000AAC  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3487   000AB0  EC49  F00E         	call	_floorf	;wreg free
  3488   000AB4  C028  F07D         	movff	?_floorf,efgtoa@l
  3489   000AB8  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  3490   000ABC  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  3491   000AC0  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3494   000AC4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3495   000AC8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3496   000ACC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3497   000AD0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3498   000AD4  ECE9  F012         	call	___fltol	;wreg free
  3499   000AD8  C001  F06B         	movff	?___fltol,efgtoa@d
  3500   000ADC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3501   000AE0                     
  3502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3503   000AE0  C079  F038         	movff	efgtoa@h,___flsub@b
  3504   000AE4  C07A  F039         	movff	efgtoa@h+1,___flsub@b+1
  3505   000AE8  C07B  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3506   000AEC  C07C  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3507   000AF0  C07D  F005         	movff	efgtoa@l,___flmul@a
  3508   000AF4  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3509   000AF8  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3510   000AFC  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3511   000B00  C088  F001         	movff	efgtoa@u,___flmul@b
  3512   000B04  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3513   000B08  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3514   000B0C  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3515   000B10  EC6E  F00A         	call	___flmul	;wreg free
  3516   000B14  C001  F03C         	movff	?___flmul,___flsub@a
  3517   000B18  C002  F03D         	movff	?___flmul+1,___flsub@a+1
  3518   000B1C  C003  F03E         	movff	?___flmul+2,___flsub@a+2
  3519   000B20  C004  F03F         	movff	?___flmul+3,___flsub@a+3
  3520   000B24  ECAA  F016         	call	___flsub	;wreg free
  3521   000B28  C038  F079         	movff	?___flsub,efgtoa@h
  3522   000B2C  C039  F07A         	movff	?___flsub+1,efgtoa@h+1
  3523   000B30  C03A  F07B         	movff	?___flsub+2,efgtoa@h+2
  3524   000B34  C03B  F07C         	movff	?___flsub+3,efgtoa@h+3
  3525   000B38                     
  3526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3527   000B38  C088  F00F         	movff	efgtoa@u,___fldiv@b
  3528   000B3C  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3529   000B40  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3530   000B44  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3531   000B48  0E00               	movlw	0
  3532   000B4A  6E13               	movwf	___fldiv@a^0,c
  3533   000B4C  0E00               	movlw	0
  3534   000B4E  6E14               	movwf	(___fldiv@a+1)^0,c
  3535   000B50  0E20               	movlw	32
  3536   000B52  6E15               	movwf	(___fldiv@a+2)^0,c
  3537   000B54  0E41               	movlw	65
  3538   000B56  6E16               	movwf	(___fldiv@a+3)^0,c
  3539   000B58  EC81  F00C         	call	___fldiv	;wreg free
  3540   000B5C  C00F  F088         	movff	?___fldiv,efgtoa@u
  3541   000B60  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  3542   000B64  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3543   000B68  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3544   000B6C                     
  3545                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3546   000B6C  0100               	movlb	0	; () banked
  3547   000B6E  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3548   000B70  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3549   000B72                     l3098:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3553   000B72  516D               	movf	efgtoa@m& (0+255),w,b
  3554   000B74  5D77               	subwf	efgtoa@i& (0+255),w,b
  3555   000B76  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3556   000B78  0A80               	xorlw	128
  3557   000B7A  6E46               	movwf	??_efgtoa^0,c
  3558   000B7C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3559   000B7E  0A80               	xorlw	128
  3560   000B80  5846               	subwfb	??_efgtoa^0,w,c
  3561   000B82  A0D8               	btfss	status,0,c
  3562   000B84  EFC6  F005         	goto	u3371
  3563   000B88  EFC8  F005         	goto	u3370
  3564   000B8C                     u3371:
  3565   000B8C  EF3E  F005         	goto	l3090
  3566   000B90                     u3370:
  3567   000B90                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3570   000B90  C088  F001         	movff	efgtoa@u,___flmul@b
  3571   000B94  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3572   000B98  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3573   000B9C  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3574   000BA0  0E00               	movlw	0
  3575   000BA2  6E05               	movwf	___flmul@a^0,c
  3576   000BA4  0E00               	movlw	0
  3577   000BA6  6E06               	movwf	(___flmul@a+1)^0,c
  3578   000BA8  0EA0               	movlw	160
  3579   000BAA  6E07               	movwf	(___flmul@a+2)^0,c
  3580   000BAC  0E40               	movlw	64
  3581   000BAE  6E08               	movwf	(___flmul@a+3)^0,c
  3582   000BB0  EC6E  F00A         	call	___flmul	;wreg free
  3583   000BB4  C001  F07D         	movff	?___flmul,efgtoa@l
  3584   000BB8  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  3585   000BBC  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  3586   000BC0  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  3587   000BC4                     
  3588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3589   000BC4  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3590   000BC8  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3591   000BCC  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3592   000BD0  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3593   000BD4  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  3594   000BD8  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3595   000BDC  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3596   000BE0  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3597   000BE4  EC6C  F013         	call	___flge	;wreg free
  3598   000BE8  B0D8               	btfsc	status,0,c
  3599   000BEA  EFF9  F005         	goto	u3381
  3600   000BEE  EFFB  F005         	goto	u3380
  3601   000BF2                     u3381:
  3602   000BF2  EF06  F006         	goto	l3106
  3603   000BF6                     u3380:
  3604   000BF6                     
  3605                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3606   000BF6  0E00               	movlw	0
  3607   000BF8  0100               	movlb	0	; () banked
  3608   000BFA  6F7D               	movwf	efgtoa@l& (0+255),b
  3609   000BFC  0E00               	movlw	0
  3610   000BFE  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3611   000C00  0E00               	movlw	0
  3612   000C02  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3613   000C04  0E00               	movlw	0
  3614   000C06  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3617   000C08  EF2F  F006         	goto	l3112
  3618   000C0C                     l3106:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3621   000C0C  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3622   000C10  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3623   000C14  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3624   000C18  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3625   000C1C  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3626   000C20  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3627   000C24  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3628   000C28  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3629   000C2C  ECC2  F014         	call	___fleq	;wreg free
  3630   000C30  A0D8               	btfss	status,0,c
  3631   000C32  EF1D  F006         	goto	u3391
  3632   000C36  EF1F  F006         	goto	u3390
  3633   000C3A                     u3391:
  3634   000C3A  EF2F  F006         	goto	l3112
  3635   000C3E                     u3390:
  3636   000C3E  0100               	movlb	0	; () banked
  3637   000C40  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3638   000C42  EF25  F006         	goto	u3401
  3639   000C46  EF27  F006         	goto	u3400
  3640   000C4A                     u3401:
  3641   000C4A  EF2F  F006         	goto	l3112
  3642   000C4E                     u3400:
  3643   000C4E                     
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3646   000C4E  0E00               	movlw	0
  3647   000C50  6F7D               	movwf	efgtoa@l& (0+255),b
  3648   000C52  0E00               	movlw	0
  3649   000C54  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3650   000C56  0E00               	movlw	0
  3651   000C58  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3652   000C5A  0E00               	movlw	0
  3653   000C5C  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3654   000C5E                     l3112:
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3657   000C5E  C084  F028         	movff	efgtoa@g,___fladd@b
  3658   000C62  C085  F029         	movff	efgtoa@g+1,___fladd@b+1
  3659   000C66  C086  F02A         	movff	efgtoa@g+2,___fladd@b+2
  3660   000C6A  C087  F02B         	movff	efgtoa@g+3,___fladd@b+3
  3661   000C6E  C07D  F02C         	movff	efgtoa@l,___fladd@a
  3662   000C72  C07E  F02D         	movff	efgtoa@l+1,___fladd@a+1
  3663   000C76  C07F  F02E         	movff	efgtoa@l+2,___fladd@a+2
  3664   000C7A  C080  F02F         	movff	efgtoa@l+3,___fladd@a+3
  3665   000C7E  EC13  F008         	call	___fladd	;wreg free
  3666   000C82  C028  F079         	movff	?___fladd,efgtoa@h
  3667   000C86  C029  F07A         	movff	?___fladd+1,efgtoa@h+1
  3668   000C8A  C02A  F07B         	movff	?___fladd+2,efgtoa@h+2
  3669   000C8E  C02B  F07C         	movff	?___fladd+3,efgtoa@h+3
  3670   000C92                     
  3671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3672   000C92  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3673   000C96  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3674   000C9A  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3675   000C9E  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3676   000CA2  0E00               	movlw	0
  3677   000CA4  6E05               	movwf	___flmul@a^0,c
  3678   000CA6  0E00               	movlw	0
  3679   000CA8  6E06               	movwf	(___flmul@a+1)^0,c
  3680   000CAA  0E20               	movlw	32
  3681   000CAC  6E07               	movwf	(___flmul@a+2)^0,c
  3682   000CAE  0E41               	movlw	65
  3683   000CB0  6E08               	movwf	(___flmul@a+3)^0,c
  3684   000CB2  C073  F001         	movff	efgtoa@ou,___flmul@b
  3685   000CB6  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3686   000CBA  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3687   000CBE  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3688   000CC2  EC6E  F00A         	call	___flmul	;wreg free
  3689   000CC6  C001  F01E         	movff	?___flmul,___flge@ff2
  3690   000CCA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3691   000CCE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3692   000CD2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3693   000CD6  EC6C  F013         	call	___flge	;wreg free
  3694   000CDA  A0D8               	btfss	status,0,c
  3695   000CDC  EF72  F006         	goto	u3411
  3696   000CE0  EF74  F006         	goto	u3410
  3697   000CE4                     u3411:
  3698   000CE4  EF9D  F006         	goto	l3124
  3699   000CE8                     u3410:
  3700   000CE8                     
  3701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3702   000CE8  0100               	movlb	0	; () banked
  3703   000CEA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3704   000CEC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3705   000CEE                     
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3708   000CEE  C073  F001         	movff	efgtoa@ou,___flmul@b
  3709   000CF2  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3710   000CF6  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3711   000CFA  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3712   000CFE  0E00               	movlw	0
  3713   000D00  6E05               	movwf	___flmul@a^0,c
  3714   000D02  0E00               	movlw	0
  3715   000D04  6E06               	movwf	(___flmul@a+1)^0,c
  3716   000D06  0E20               	movlw	32
  3717   000D08  6E07               	movwf	(___flmul@a+2)^0,c
  3718   000D0A  0E41               	movlw	65
  3719   000D0C  6E08               	movwf	(___flmul@a+3)^0,c
  3720   000D0E  EC6E  F00A         	call	___flmul	;wreg free
  3721   000D12  C001  F073         	movff	?___flmul,efgtoa@ou
  3722   000D16  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3723   000D1A  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3724   000D1E  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3725   000D22                     
  3726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3727   000D22  0E66               	movlw	102
  3728   000D24  0100               	movlb	0	; () banked
  3729   000D26  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3730   000D28  A4D8               	btfss	status,2,c
  3731   000D2A  EF99  F006         	goto	u3421
  3732   000D2E  EF9B  F006         	goto	u3420
  3733   000D32                     u3421:
  3734   000D32  EF9D  F006         	goto	l3124
  3735   000D36                     u3420:
  3736   000D36                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3739   000D36  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3740   000D38  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3741   000D3A                     l3124:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3744   000D3A  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3745   000D3E  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3746   000D42  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3747   000D46  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3748   000D4A                     
  3749                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3750   000D4A  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3751   000D4E  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3752   000D52                     
  3753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3754   000D52  0100               	movlb	0	; () banked
  3755   000D54  6B68               	clrf	efgtoa@pp& (0+255),b
  3756   000D56                     
  3757                           ; BSR set to: 0
  3758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3759   000D56  0E00               	movlw	0
  3760   000D58  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3761   000D5A  0E00               	movlw	0
  3762   000D5C  6F64               	movwf	efgtoa@t& (0+255),b
  3763   000D5E                     
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3766   000D5E  0E00               	movlw	0
  3767   000D60  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3768   000D62  0E00               	movlw	0
  3769   000D64  6F77               	movwf	efgtoa@i& (0+255),b
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3772   000D66  EF9A  F007         	goto	l3174
  3773   000D6A                     l3134:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3777   000D6A  C079  F00F         	movff	efgtoa@h,___fldiv@b
  3778   000D6E  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3779   000D72  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3780   000D76  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3781   000D7A  C088  F013         	movff	efgtoa@u,___fldiv@a
  3782   000D7E  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3783   000D82  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3784   000D86  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3785   000D8A  EC81  F00C         	call	___fldiv	;wreg free
  3786   000D8E  C00F  F028         	movff	?___fldiv,floorf@x
  3787   000D92  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3788   000D96  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3789   000D9A  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3790   000D9E  EC49  F00E         	call	_floorf	;wreg free
  3791   000DA2  C028  F07D         	movff	?_floorf,efgtoa@l
  3792   000DA6  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  3793   000DAA  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  3794   000DAE  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3797   000DB2  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3798   000DB6  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3799   000DBA  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3800   000DBE  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3801   000DC2  ECE9  F012         	call	___fltol	;wreg free
  3802   000DC6  BE02               	btfsc	(?___fltol+1)^0,7,c
  3803   000DC8  EFF1  F006         	goto	u3430
  3804   000DCC  5002               	movf	(?___fltol+1)^0,w,c
  3805   000DCE  E107               	bnz	u3431
  3806   000DD0  0E0A               	movlw	10
  3807   000DD2  5C01               	subwf	?___fltol^0,w,c
  3808   000DD4  B0D8               	btfsc	status,0,c
  3809   000DD6  EFEF  F006         	goto	u3431
  3810   000DDA  EFF1  F006         	goto	u3430
  3811   000DDE                     u3431:
  3812   000DDE  EF01  F007         	goto	l3138
  3813   000DE2                     u3430:
  3814   000DE2  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3815   000DE6  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3816   000DEA  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3817   000DEE  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3818   000DF2  ECE9  F012         	call	___fltol	;wreg free
  3819   000DF6  C001  F06B         	movff	?___fltol,efgtoa@d
  3820   000DFA  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3821   000DFE  EF06  F007         	goto	l952
  3822   000E02                     l3138:
  3823   000E02  0E00               	movlw	0
  3824   000E04  0100               	movlb	0	; () banked
  3825   000E06  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3826   000E08  0E09               	movlw	9
  3827   000E0A  6F6B               	movwf	efgtoa@d& (0+255),b
  3828   000E0C                     l952:
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3831   000E0C  0100               	movlb	0	; () banked
  3832   000E0E  5168               	movf	efgtoa@pp& (0+255),w,b
  3833   000E10  A4D8               	btfss	status,2,c
  3834   000E12  EF0D  F007         	goto	u3441
  3835   000E16  EF0F  F007         	goto	u3440
  3836   000E1A                     u3441:
  3837   000E1A  EF37  F007         	goto	l3158
  3838   000E1E                     u3440:
  3839   000E1E                     
  3840                           ; BSR set to: 0
  3841   000E1E  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3842   000E20  EF16  F007         	goto	u3450
  3843   000E24  EF14  F007         	goto	u3451
  3844   000E28                     u3451:
  3845   000E28  EF37  F007         	goto	l3158
  3846   000E2C                     u3450:
  3847   000E2C                     
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3850   000E2C  0E00               	movlw	low _dbuf
  3851   000E2E  2582               	addwf	efgtoa@n& (0+255),w,b
  3852   000E30  6ED9               	movwf	fsr2l,c
  3853   000E32  0E01               	movlw	high _dbuf
  3854   000E34  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3855   000E36  6EDA               	movwf	fsr2h,c
  3856   000E38  0E2E               	movlw	46
  3857   000E3A  6EDF               	movwf	indf2,c
  3858   000E3C                     
  3859                           ; BSR set to: 0
  3860   000E3C  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3861   000E3E  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3862   000E40                     
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3865   000E40  0771               	decf	efgtoa@w& (0+255),f,b
  3866   000E42  A0D8               	btfss	status,0,c
  3867   000E44  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3868   000E46                     
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3871   000E46  0E01               	movlw	1
  3872   000E48  6F68               	movwf	efgtoa@pp& (0+255),b
  3873   000E4A  EF37  F007         	goto	l3158
  3874   000E4E                     l3150:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3878   000E4E  0E00               	movlw	low _dbuf
  3879   000E50  2582               	addwf	efgtoa@n& (0+255),w,b
  3880   000E52  6ED9               	movwf	fsr2l,c
  3881   000E54  0E01               	movlw	high _dbuf
  3882   000E56  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3883   000E58  6EDA               	movwf	fsr2h,c
  3884   000E5A  0E30               	movlw	48
  3885   000E5C  6EDF               	movwf	indf2,c
  3886   000E5E                     
  3887                           ; BSR set to: 0
  3888   000E5E  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3889   000E60  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3890   000E62                     
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3893   000E62  0771               	decf	efgtoa@w& (0+255),f,b
  3894   000E64  A0D8               	btfss	status,0,c
  3895   000E66  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3896   000E68                     
  3897                           ; BSR set to: 0
  3898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3899   000E68  0764               	decf	efgtoa@t& (0+255),f,b
  3900   000E6A  A0D8               	btfss	status,0,c
  3901   000E6C  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3902   000E6E                     l3158:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3906   000E6E  5164               	movf	efgtoa@t& (0+255),w,b
  3907   000E70  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3908   000E72  A4D8               	btfss	status,2,c
  3909   000E74  EF3E  F007         	goto	u3461
  3910   000E78  EF40  F007         	goto	u3460
  3911   000E7C                     u3461:
  3912   000E7C  EF27  F007         	goto	l3150
  3913   000E80                     u3460:
  3914   000E80                     
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3917   000E80  0E00               	movlw	low _dbuf
  3918   000E82  2582               	addwf	efgtoa@n& (0+255),w,b
  3919   000E84  6ED9               	movwf	fsr2l,c
  3920   000E86  0E01               	movlw	high _dbuf
  3921   000E88  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3922   000E8A  6EDA               	movwf	fsr2h,c
  3923   000E8C  516B               	movf	efgtoa@d& (0+255),w,b
  3924   000E8E  0F30               	addlw	48
  3925   000E90  6EDF               	movwf	indf2,c
  3926   000E92                     
  3927                           ; BSR set to: 0
  3928   000E92  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3929   000E94  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3930   000E96                     
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3933   000E96  0771               	decf	efgtoa@w& (0+255),f,b
  3934   000E98  A0D8               	btfss	status,0,c
  3935   000E9A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3936   000E9C                     
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3939   000E9C  C079  F038         	movff	efgtoa@h,___flsub@b
  3940   000EA0  C07A  F039         	movff	efgtoa@h+1,___flsub@b+1
  3941   000EA4  C07B  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3942   000EA8  C07C  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3943   000EAC  C07D  F005         	movff	efgtoa@l,___flmul@a
  3944   000EB0  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3945   000EB4  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3946   000EB8  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3947   000EBC  C088  F001         	movff	efgtoa@u,___flmul@b
  3948   000EC0  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3949   000EC4  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3950   000EC8  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3951   000ECC  EC6E  F00A         	call	___flmul	;wreg free
  3952   000ED0  C001  F03C         	movff	?___flmul,___flsub@a
  3953   000ED4  C002  F03D         	movff	?___flmul+1,___flsub@a+1
  3954   000ED8  C003  F03E         	movff	?___flmul+2,___flsub@a+2
  3955   000EDC  C004  F03F         	movff	?___flmul+3,___flsub@a+3
  3956   000EE0  ECAA  F016         	call	___flsub	;wreg free
  3957   000EE4  C038  F079         	movff	?___flsub,efgtoa@h
  3958   000EE8  C039  F07A         	movff	?___flsub+1,efgtoa@h+1
  3959   000EEC  C03A  F07B         	movff	?___flsub+2,efgtoa@h+2
  3960   000EF0  C03B  F07C         	movff	?___flsub+3,efgtoa@h+3
  3961   000EF4                     
  3962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3963   000EF4  C088  F00F         	movff	efgtoa@u,___fldiv@b
  3964   000EF8  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3965   000EFC  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3966   000F00  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3967   000F04  0E00               	movlw	0
  3968   000F06  6E13               	movwf	___fldiv@a^0,c
  3969   000F08  0E00               	movlw	0
  3970   000F0A  6E14               	movwf	(___fldiv@a+1)^0,c
  3971   000F0C  0E20               	movlw	32
  3972   000F0E  6E15               	movwf	(___fldiv@a+2)^0,c
  3973   000F10  0E41               	movlw	65
  3974   000F12  6E16               	movwf	(___fldiv@a+3)^0,c
  3975   000F14  EC81  F00C         	call	___fldiv	;wreg free
  3976   000F18  C00F  F088         	movff	?___fldiv,efgtoa@u
  3977   000F1C  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  3978   000F20  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3979   000F24  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3980   000F28                     
  3981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3982   000F28  0100               	movlb	0	; () banked
  3983   000F2A  0760               	decf	efgtoa@ne& (0+255),f,b
  3984   000F2C  A0D8               	btfss	status,0,c
  3985   000F2E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3986   000F30                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3989   000F30  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3990   000F32  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3991   000F34                     l3174:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3995   000F34  516D               	movf	efgtoa@m& (0+255),w,b
  3996   000F36  5D77               	subwf	efgtoa@i& (0+255),w,b
  3997   000F38  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3998   000F3A  0A80               	xorlw	128
  3999   000F3C  6E46               	movwf	??_efgtoa^0,c
  4000   000F3E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4001   000F40  0A80               	xorlw	128
  4002   000F42  5846               	subwfb	??_efgtoa^0,w,c
  4003   000F44  B0D8               	btfsc	status,0,c
  4004   000F46  EFA7  F007         	goto	u3471
  4005   000F4A  EFA9  F007         	goto	u3470
  4006   000F4E                     u3471:
  4007   000F4E  EFB7  F007         	goto	l3178
  4008   000F52                     u3470:
  4009   000F52                     
  4010                           ; BSR set to: 0
  4011   000F52  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4012   000F54  EFB5  F007         	goto	u3481
  4013   000F58  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4014   000F5A  E109               	bnz	u3480
  4015   000F5C  0E4B               	movlw	75
  4016   000F5E  5D82               	subwf	efgtoa@n& (0+255),w,b
  4017   000F60  A0D8               	btfss	status,0,c
  4018   000F62  EFB5  F007         	goto	u3481
  4019   000F66  EFB7  F007         	goto	u3480
  4020   000F6A                     u3481:
  4021   000F6A  EFB5  F006         	goto	l3134
  4022   000F6E                     u3480:
  4023   000F6E                     l3178:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4027   000F6E  0E00               	movlw	0
  4028   000F70  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4029   000F72  0E4F               	movlw	79
  4030   000F74  6F77               	movwf	efgtoa@i& (0+255),b
  4031   000F76                     
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4034   000F76  0E00               	movlw	low _dbuf
  4035   000F78  2577               	addwf	efgtoa@i& (0+255),w,b
  4036   000F7A  6ED9               	movwf	fsr2l,c
  4037   000F7C  0E01               	movlw	high _dbuf
  4038   000F7E  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4039   000F80  6EDA               	movwf	fsr2h,c
  4040   000F82  6ADF               	clrf	indf2,c
  4041   000F84                     
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4044   000F84  0E00               	movlw	low _dbuf
  4045   000F86  6E46               	movwf	??_efgtoa^0,c
  4046   000F88  0E01               	movlw	high _dbuf
  4047   000F8A  6E47               	movwf	(??_efgtoa+1)^0,c
  4048   000F8C  5182               	movf	efgtoa@n& (0+255),w,b
  4049   000F8E  5E46               	subwf	??_efgtoa^0,f,c
  4050   000F90  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4051   000F92  5A47               	subwfb	(??_efgtoa+1)^0,f,c
  4052   000F94  5177               	movf	efgtoa@i& (0+255),w,b
  4053   000F96  2446               	addwf	??_efgtoa^0,w,c
  4054   000F98  6E01               	movwf	memcpy@d1^0,c
  4055   000F9A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4056   000F9C  2047               	addwfc	(??_efgtoa+1)^0,w,c
  4057   000F9E  6E02               	movwf	(memcpy@d1+1)^0,c
  4058   000FA0  0E00               	movlw	low _dbuf
  4059   000FA2  6E03               	movwf	memcpy@s1^0,c
  4060   000FA4  0E01               	movlw	high _dbuf
  4061   000FA6  6E04               	movwf	(memcpy@s1+1)^0,c
  4062   000FA8  C082  F005         	movff	efgtoa@n,memcpy@n
  4063   000FAC  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  4064   000FB0  EC5B  F016         	call	_memcpy	;wreg free
  4065   000FB4                     
  4066                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4067   000FB4  0100               	movlb	0	; () banked
  4068   000FB6  5182               	movf	efgtoa@n& (0+255),w,b
  4069   000FB8  5D77               	subwf	efgtoa@i& (0+255),w,b
  4070   000FBA  6F82               	movwf	efgtoa@n& (0+255),b
  4071   000FBC  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4072   000FBE  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4073   000FC0  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  4074   000FC2                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4077   000FC2  5181               	movf	efgtoa@sign& (0+255),w,b
  4078   000FC4  A4D8               	btfss	status,2,c
  4079   000FC6  EFE7  F007         	goto	u3491
  4080   000FCA  EFEA  F007         	goto	u3490
  4081   000FCE                     u3491:
  4082   000FCE  0E01               	movlw	1
  4083   000FD0  EFEB  F007         	goto	u3500
  4084   000FD4                     u3490:
  4085   000FD4  0E00               	movlw	0
  4086   000FD6                     u3500:
  4087   000FD6  6F77               	movwf	efgtoa@i& (0+255),b
  4088   000FD8  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  4089   000FDA                     
  4090                           ; BSR set to: 0
  4091                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4092   000FDA  5181               	movf	efgtoa@sign& (0+255),w,b
  4093   000FDC  B4D8               	btfsc	status,2,c
  4094   000FDE  EFF3  F007         	goto	u3511
  4095   000FE2  EFF5  F007         	goto	u3510
  4096   000FE6                     u3511:
  4097   000FE6  EF00  F008         	goto	l3192
  4098   000FEA                     u3510:
  4099   000FEA                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4102   000FEA  0782               	decf	efgtoa@n& (0+255),f,b
  4103   000FEC  A0D8               	btfss	status,0,c
  4104   000FEE  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  4105   000FF0  0E00               	movlw	low _dbuf
  4106   000FF2  2582               	addwf	efgtoa@n& (0+255),w,b
  4107   000FF4  6ED9               	movwf	fsr2l,c
  4108   000FF6  0E01               	movlw	high _dbuf
  4109   000FF8  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4110   000FFA  6EDA               	movwf	fsr2h,c
  4111   000FFC  C081  FFDF         	movff	efgtoa@sign,indf2
  4112   001000                     l3192:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4116   001000  5177               	movf	efgtoa@i& (0+255),w,b
  4117   001002  5F71               	subwf	efgtoa@w& (0+255),f,b
  4118   001004  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4119   001006  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4120   001008                     
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4123   001008  C040  F00F         	movff	efgtoa@fp,pad@fp
  4124   00100C  0E00               	movlw	low _dbuf
  4125   00100E  2582               	addwf	efgtoa@n& (0+255),w,b
  4126   001010  6E10               	movwf	pad@buf^0,c
  4127   001012  0E01               	movlw	high _dbuf
  4128   001014  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4129   001016  6E11               	movwf	(pad@buf+1)^0,c
  4130   001018  C071  F012         	movff	efgtoa@w,pad@p
  4131   00101C  C072  F013         	movff	efgtoa@w+1,pad@p+1
  4132   001020  ECA2  F015         	call	_pad	;wreg free
  4133   001024                     l919:
  4134   001024  0012               	return		;funcret
  4135   001026                     __end_of_efgtoa:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _strcpy *****************
  4139 ;; Defined at:
  4140 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4143 ;;		 -> dbuf(80), 
  4144 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4145 ;;		 -> STR_8(4), STR_5(4), 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  d               2    4[COMRAM] PTR unsigned char 
  4148 ;;		 -> dbuf(80), 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  2    0[COMRAM] PTR unsigned char 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4158 ;;      Params:         3       0       0       0       0       0       0
  4159 ;;      Locals:         2       0       0       0       0       0       0
  4160 ;;      Temps:          1       0       0       0       0       0       0
  4161 ;;      Totals:         6       0       0       0       0       0       0
  4162 ;;Total ram usage:        6 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_efgtoa
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text6
  4172   002E98                     __ptext6:
  4173                           	callstack 0
  4174   002E98                     _strcpy:
  4175                           	callstack 26
  4176   002E98  C001  F005         	movff	strcpy@dest,strcpy@d
  4177   002E9C  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4178   002EA0                     l2928:
  4179   002EA0  2A03               	incf	strcpy@src^0,f,c
  4180   002EA2  0403               	decf	strcpy@src^0,w,c
  4181   002EA4  6E04               	movwf	??_strcpy^0,c
  4182   002EA6  C004  FFF6         	movff	??_strcpy,tblptrl
  4183   002EAA                     	if	1	;There is more than 1 active tblptr byte
  4184   002EAA  0E06               	movlw	high __smallconst
  4185   002EAC  6EF7               	movwf	tblptrh,c
  4186   002EAE                     	endif
  4187   002EAE                     	if	0	;tblptru may be non-zero
  4188   002EAE                     	endif
  4189   002EAE                     	if	0	;tblptru may be non-zero
  4190   002EAE                     	endif
  4191   002EAE  C005  FFD9         	movff	strcpy@d,fsr2l
  4192   002EB2  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4193   002EB6  4A05               	infsnz	strcpy@d^0,f,c
  4194   002EB8  2A06               	incf	(strcpy@d+1)^0,f,c
  4195   002EBA  0008               	tblrd		*
  4196   002EBC  CFF5 FFDF          	movff	tablat,indf2
  4197   002EC0  50DF               	movf	indf2,w,c
  4198   002EC2  A4D8               	btfss	status,2,c
  4199   002EC4  EF66  F017         	goto	u3071
  4200   002EC8  EF68  F017         	goto	u3070
  4201   002ECC                     u3071:
  4202   002ECC  EF50  F017         	goto	l2928
  4203   002ED0                     u3070:
  4204   002ED0  0012               	return		;funcret
  4205   002ED2                     __end_of_strcpy:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function _pad *****************
  4209 ;; Defined at:
  4210 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4213 ;;		 -> sprintf@f(11), 
  4214 ;;  buf             2   15[COMRAM] PTR unsigned char 
  4215 ;;		 -> dbuf(80), 
  4216 ;;  p               2   17[COMRAM] int 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  i               2   20[COMRAM] int 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4228 ;;      Params:         5       0       0       0       0       0       0
  4229 ;;      Locals:         2       0       0       0       0       0       0
  4230 ;;      Temps:          1       0       0       0       0       0       0
  4231 ;;      Totals:         8       0       0       0       0       0       0
  4232 ;;Total ram usage:        8 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; Hardware stack levels required when called: 3
  4235 ;; This function calls:
  4236 ;;		_fputc
  4237 ;;		_fputs
  4238 ;; This function is called by:
  4239 ;;		_efgtoa
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text7
  4244   002B44                     __ptext7:
  4245                           	callstack 0
  4246   002B44                     _pad:
  4247                           	callstack 23
  4248   002B44                     
  4249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4250   002B44  BE13               	btfsc	(pad@p+1)^0,7,c
  4251   002B46  EFA9  F015         	goto	u2980
  4252   002B4A  EFA7  F015         	goto	u2981
  4253   002B4E                     u2981:
  4254   002B4E  EFAD  F015         	goto	l904
  4255   002B52                     u2980:
  4256   002B52                     
  4257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4258   002B52  0E00               	movlw	0
  4259   002B54  6E13               	movwf	(pad@p+1)^0,c
  4260   002B56  0E00               	movlw	0
  4261   002B58  6E12               	movwf	pad@p^0,c
  4262   002B5A                     l904:
  4263                           
  4264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4265   002B5A  0E00               	movlw	0
  4266   002B5C  6E16               	movwf	(pad@i+1)^0,c
  4267   002B5E  0E00               	movlw	0
  4268   002B60  6E15               	movwf	pad@i^0,c
  4269                           
  4270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4271   002B62  EFBD  F015         	goto	l2900
  4272   002B66                     l2896:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4275   002B66  0E00               	movlw	0
  4276   002B68  6E02               	movwf	(fputc@c+1)^0,c
  4277   002B6A  0E20               	movlw	32
  4278   002B6C  6E01               	movwf	fputc@c^0,c
  4279   002B6E  C00F  F003         	movff	pad@fp,fputc@fp
  4280   002B72  EC6D  F014         	call	_fputc	;wreg free
  4281   002B76                     
  4282                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4283   002B76  4A15               	infsnz	pad@i^0,f,c
  4284   002B78  2A16               	incf	(pad@i+1)^0,f,c
  4285   002B7A                     l2900:
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4288   002B7A  5012               	movf	pad@p^0,w,c
  4289   002B7C  5C15               	subwf	pad@i^0,w,c
  4290   002B7E  5016               	movf	(pad@i+1)^0,w,c
  4291   002B80  0A80               	xorlw	128
  4292   002B82  6E14               	movwf	??_pad^0,c
  4293   002B84  5013               	movf	(pad@p+1)^0,w,c
  4294   002B86  0A80               	xorlw	128
  4295   002B88  5814               	subwfb	??_pad^0,w,c
  4296   002B8A  A0D8               	btfss	status,0,c
  4297   002B8C  EFCA  F015         	goto	u2991
  4298   002B90  EFCC  F015         	goto	u2990
  4299   002B94                     u2991:
  4300   002B94  EFB3  F015         	goto	l2896
  4301   002B98                     u2990:
  4302   002B98                     
  4303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4304   002B98  C010  F009         	movff	pad@buf,fputs@s
  4305   002B9C  C011  F00A         	movff	pad@buf+1,fputs@s+1
  4306   002BA0  C00F  F00B         	movff	pad@fp,fputs@fp
  4307   002BA4  ECCD  F016         	call	_fputs	;wreg free
  4308   002BA8  0012               	return		;funcret
  4309   002BAA                     __end_of_pad:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _fputs *****************
  4313 ;; Defined at:
  4314 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4317 ;;		 -> dbuf(80), 
  4318 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4319 ;;		 -> sprintf@f(11), 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  i               2   12[COMRAM] int 
  4322 ;;  c               1   11[COMRAM] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  2    8[COMRAM] int 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4332 ;;      Params:         3       0       0       0       0       0       0
  4333 ;;      Locals:         3       0       0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0
  4335 ;;      Totals:         6       0       0       0       0       0       0
  4336 ;;Total ram usage:        6 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; Hardware stack levels required when called: 2
  4339 ;; This function calls:
  4340 ;;		_fputc
  4341 ;; This function is called by:
  4342 ;;		_pad
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text8
  4347   002D9A                     __ptext8:
  4348                           	callstack 0
  4349   002D9A                     _fputs:
  4350                           	callstack 23
  4351   002D9A  0E00               	movlw	0
  4352   002D9C  6E0E               	movwf	(fputs@i+1)^0,c
  4353   002D9E  0E00               	movlw	0
  4354   002DA0  6E0D               	movwf	fputs@i^0,c
  4355   002DA2  EFDC  F016         	goto	l2530
  4356   002DA6                     l2526:
  4357   002DA6  C00C  F001         	movff	fputs@c,fputc@c
  4358   002DAA  6A02               	clrf	(fputc@c+1)^0,c
  4359   002DAC  C00B  F003         	movff	fputs@fp,fputc@fp
  4360   002DB0  EC6D  F014         	call	_fputc	;wreg free
  4361   002DB4  4A0D               	infsnz	fputs@i^0,f,c
  4362   002DB6  2A0E               	incf	(fputs@i+1)^0,f,c
  4363   002DB8                     l2530:
  4364   002DB8  500D               	movf	fputs@i^0,w,c
  4365   002DBA  2409               	addwf	fputs@s^0,w,c
  4366   002DBC  6ED9               	movwf	fsr2l,c
  4367   002DBE  500E               	movf	(fputs@i+1)^0,w,c
  4368   002DC0  200A               	addwfc	(fputs@s+1)^0,w,c
  4369   002DC2  6EDA               	movwf	fsr2h,c
  4370   002DC4  50DF               	movf	indf2,w,c
  4371   002DC6  6E0C               	movwf	fputs@c^0,c
  4372   002DC8  500C               	movf	fputs@c^0,w,c
  4373   002DCA  A4D8               	btfss	status,2,c
  4374   002DCC  EFEA  F016         	goto	u2391
  4375   002DD0  EFEC  F016         	goto	u2390
  4376   002DD4                     u2391:
  4377   002DD4  EFD3  F016         	goto	l2526
  4378   002DD8                     u2390:
  4379   002DD8  0012               	return		;funcret
  4380   002DDA                     __end_of_fputs:
  4381                           	callstack 0
  4382                           
  4383 ;; *************** function _fputc *****************
  4384 ;; Defined at:
  4385 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  c               2    0[COMRAM] int 
  4388 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4389 ;;		 -> sprintf@f(11), 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2    0[COMRAM] int 
  4394 ;; Registers used:
  4395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4401 ;;      Params:         3       0       0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0
  4403 ;;      Temps:          5       0       0       0       0       0       0
  4404 ;;      Totals:         8       0       0       0       0       0       0
  4405 ;;Total ram usage:        8 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 1
  4408 ;; This function calls:
  4409 ;;		_putch
  4410 ;; This function is called by:
  4411 ;;		_pad
  4412 ;;		_vfpfcnvrt
  4413 ;;		_fputs
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text9
  4418   0028DA                     __ptext9:
  4419                           	callstack 0
  4420   0028DA                     _fputc:
  4421                           	callstack 26
  4422   0028DA  5003               	movf	fputc@fp^0,w,c
  4423   0028DC  B4D8               	btfsc	status,2,c
  4424   0028DE  EF73  F014         	goto	u1961
  4425   0028E2  EF75  F014         	goto	u1960
  4426   0028E6                     u1961:
  4427   0028E6  EF7D  F014         	goto	l2320
  4428   0028EA                     u1960:
  4429   0028EA  5003               	movf	fputc@fp^0,w,c
  4430   0028EC  A4D8               	btfss	status,2,c
  4431   0028EE  EF7B  F014         	goto	u1971
  4432   0028F2  EF7D  F014         	goto	u1970
  4433   0028F6                     u1971:
  4434   0028F6  EF82  F014         	goto	l2322
  4435   0028FA                     u1970:
  4436   0028FA                     l2320:
  4437   0028FA  5001               	movf	fputc@c^0,w,c
  4438   0028FC  EC24  F018         	call	_putch
  4439   002900  EFC1  F014         	goto	l1045
  4440   002904                     l2322:
  4441   002904  5003               	movf	fputc@fp^0,w,c
  4442   002906  6ED9               	movwf	fsr2l,c
  4443   002908  6ADA               	clrf	fsr2h,c
  4444   00290A  0E09               	movlw	9
  4445   00290C  26D9               	addwf	fsr2l,f,c
  4446   00290E  50DE               	movf	postinc2,w,c
  4447   002910  10DE               	iorwf	postinc2,w,c
  4448   002912  B4D8               	btfsc	status,2,c
  4449   002914  EF8E  F014         	goto	u1981
  4450   002918  EF90  F014         	goto	u1980
  4451   00291C                     u1981:
  4452   00291C  EFA9  F014         	goto	l2326
  4453   002920                     u1980:
  4454   002920  5003               	movf	fputc@fp^0,w,c
  4455   002922  6ED9               	movwf	fsr2l,c
  4456   002924  6ADA               	clrf	fsr2h,c
  4457   002926  0E09               	movlw	9
  4458   002928  26D9               	addwf	fsr2l,f,c
  4459   00292A  5003               	movf	fputc@fp^0,w,c
  4460   00292C  6EE1               	movwf	fsr1l,c
  4461   00292E  6AE2               	clrf	fsr1h,c
  4462   002930  0E02               	movlw	2
  4463   002932  26E1               	addwf	fsr1l,f,c
  4464   002934  50DE               	movf	postinc2,w,c
  4465   002936  5CE6               	subwf	postinc1,w,c
  4466   002938  50E6               	movf	postinc1,w,c
  4467   00293A  0A80               	xorlw	128
  4468   00293C  6E08               	movwf	(??_fputc+4)^0,c
  4469   00293E  50DE               	movf	postinc2,w,c
  4470   002940  0A80               	xorlw	128
  4471   002942  5808               	subwfb	(??_fputc+4)^0,w,c
  4472   002944  B0D8               	btfsc	status,0,c
  4473   002946  EFA7  F014         	goto	u1991
  4474   00294A  EFA9  F014         	goto	u1990
  4475   00294E                     u1991:
  4476   00294E  EFC1  F014         	goto	l1045
  4477   002952                     u1990:
  4478   002952                     l2326:
  4479   002952  5003               	movf	fputc@fp^0,w,c
  4480   002954  6ED9               	movwf	fsr2l,c
  4481   002956  6ADA               	clrf	fsr2h,c
  4482   002958  0E02               	movlw	2
  4483   00295A  26D9               	addwf	fsr2l,f,c
  4484   00295C  50DF               	movf	indf2,w,c
  4485   00295E  6E04               	movwf	??_fputc^0,c
  4486   002960  5003               	movf	fputc@fp^0,w,c
  4487   002962  6ED9               	movwf	fsr2l,c
  4488   002964  6ADA               	clrf	fsr2h,c
  4489   002966  50DF               	movf	indf2,w,c
  4490   002968  2404               	addwf	??_fputc^0,w,c
  4491   00296A  6ED9               	movwf	fsr2l,c
  4492   00296C  6ADA               	clrf	fsr2h,c
  4493   00296E  C001  FFDF         	movff	fputc@c,indf2
  4494   002972  5003               	movf	fputc@fp^0,w,c
  4495   002974  6ED9               	movwf	fsr2l,c
  4496   002976  6ADA               	clrf	fsr2h,c
  4497   002978  0E02               	movlw	2
  4498   00297A  26D9               	addwf	fsr2l,f,c
  4499   00297C  2ADE               	incf	postinc2,f,c
  4500   00297E  0E00               	movlw	0
  4501   002980  22DD               	addwfc	postdec2,f,c
  4502   002982                     l1045:
  4503   002982  0012               	return		;funcret
  4504   002984                     __end_of_fputc:
  4505                           	callstack 0
  4506                           
  4507 ;; *************** function _putch *****************
  4508 ;; Defined at:
  4509 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  c               1    wreg     unsigned char 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  c               1    0[COMRAM] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4523 ;;      Params:         0       0       0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0
  4526 ;;      Totals:         0       0       0       0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_fputc
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text10
  4537   003048                     __ptext10:
  4538                           	callstack 0
  4539   003048                     _putch:
  4540                           	callstack 26
  4541   003048  0012               	return		;funcret
  4542   00304A                     __end_of_putch:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _memcpy *****************
  4546 ;; Defined at:
  4547 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  d1              2    0[COMRAM] PTR void 
  4550 ;;		 -> dbuf(80), 
  4551 ;;  s1              2    2[COMRAM] PTR const void 
  4552 ;;		 -> dbuf(80), 
  4553 ;;  n               2    4[COMRAM] unsigned int 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4556 ;;		 -> dbuf(80), 
  4557 ;;  d               2    6[COMRAM] PTR unsigned char 
  4558 ;;		 -> dbuf(80), 
  4559 ;;  tmp             1   10[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2    0[COMRAM] PTR void 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4569 ;;      Params:         6       0       0       0       0       0       0
  4570 ;;      Locals:         5       0       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0
  4572 ;;      Totals:        11       0       0       0       0       0       0
  4573 ;;Total ram usage:       11 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_efgtoa
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text11
  4583   002CB6                     __ptext11:
  4584                           	callstack 0
  4585   002CB6                     _memcpy:
  4586                           	callstack 26
  4587   002CB6  C003  F009         	movff	memcpy@s1,memcpy@s
  4588   002CBA  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4589   002CBE  C001  F007         	movff	memcpy@d1,memcpy@d
  4590   002CC2  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4591   002CC6  EF75  F016         	goto	l2976
  4592   002CCA                     l2968:
  4593   002CCA  C009  FFD9         	movff	memcpy@s,fsr2l
  4594   002CCE  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4595   002CD2  50DF               	movf	indf2,w,c
  4596   002CD4  6E0B               	movwf	memcpy@tmp^0,c
  4597   002CD6  4A09               	infsnz	memcpy@s^0,f,c
  4598   002CD8  2A0A               	incf	(memcpy@s+1)^0,f,c
  4599   002CDA  C007  FFD9         	movff	memcpy@d,fsr2l
  4600   002CDE  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4601   002CE2  C00B  FFDF         	movff	memcpy@tmp,indf2
  4602   002CE6  4A07               	infsnz	memcpy@d^0,f,c
  4603   002CE8  2A08               	incf	(memcpy@d+1)^0,f,c
  4604   002CEA                     l2976:
  4605   002CEA  0605               	decf	memcpy@n^0,f,c
  4606   002CEC  A0D8               	btfss	status,0,c
  4607   002CEE  0606               	decf	(memcpy@n+1)^0,f,c
  4608   002CF0  2805               	incf	memcpy@n^0,w,c
  4609   002CF2  E106               	bnz	u3191
  4610   002CF4  2806               	incf	(memcpy@n+1)^0,w,c
  4611   002CF6  A4D8               	btfss	status,2,c
  4612   002CF8  EF80  F016         	goto	u3191
  4613   002CFC  EF82  F016         	goto	u3190
  4614   002D00                     u3191:
  4615   002D00  EF65  F016         	goto	l2968
  4616   002D04                     u3190:
  4617   002D04  0012               	return		;funcret
  4618   002D06                     __end_of_memcpy:
  4619                           	callstack 0
  4620                           
  4621 ;; *************** function _labs *****************
  4622 ;; Defined at:
  4623 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  a               4    0[COMRAM] long 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  4    0[COMRAM] long 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4637 ;;      Params:         4       0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0
  4639 ;;      Temps:          4       0       0       0       0       0       0
  4640 ;;      Totals:         8       0       0       0       0       0       0
  4641 ;;Total ram usage:        8 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_efgtoa
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text12
  4651   002C60                     __ptext12:
  4652                           	callstack 0
  4653   002C60                     _labs:
  4654                           	callstack 26
  4655   002C60  BE04               	btfsc	(labs@a+3)^0,7,c
  4656   002C62  EF35  F016         	goto	u3081
  4657   002C66  EF37  F016         	goto	u3080
  4658   002C6A                     u3081:
  4659   002C6A  EF41  F016         	goto	l2934
  4660   002C6E                     u3080:
  4661   002C6E  C001  F001         	movff	labs@a,?_labs
  4662   002C72  C002  F002         	movff	labs@a+1,?_labs+1
  4663   002C76  C003  F003         	movff	labs@a+2,?_labs+2
  4664   002C7A  C004  F004         	movff	labs@a+3,?_labs+3
  4665   002C7E  EF5A  F016         	goto	l1027
  4666   002C82                     l2934:
  4667   002C82  C001  F005         	movff	labs@a,??_labs
  4668   002C86  C002  F006         	movff	labs@a+1,??_labs+1
  4669   002C8A  C003  F007         	movff	labs@a+2,??_labs+2
  4670   002C8E  C004  F008         	movff	labs@a+3,??_labs+3
  4671   002C92  1E05               	comf	??_labs^0,f,c
  4672   002C94  1E06               	comf	(??_labs+1)^0,f,c
  4673   002C96  1E07               	comf	(??_labs+2)^0,f,c
  4674   002C98  1E08               	comf	(??_labs+3)^0,f,c
  4675   002C9A  2A05               	incf	??_labs^0,f,c
  4676   002C9C  0E00               	movlw	0
  4677   002C9E  2206               	addwfc	(??_labs+1)^0,f,c
  4678   002CA0  2207               	addwfc	(??_labs+2)^0,f,c
  4679   002CA2  2208               	addwfc	(??_labs+3)^0,f,c
  4680   002CA4  C005  F001         	movff	??_labs,?_labs
  4681   002CA8  C006  F002         	movff	??_labs+1,?_labs+1
  4682   002CAC  C007  F003         	movff	??_labs+2,?_labs+2
  4683   002CB0  C008  F004         	movff	??_labs+3,?_labs+3
  4684   002CB4                     l1027:
  4685   002CB4  0012               	return		;funcret
  4686   002CB6                     __end_of_labs:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _floorf *****************
  4690 ;; Defined at:
  4691 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  x               4   39[COMRAM] float 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  u               4   55[COMRAM] struct .
  4696 ;;  m               4   49[COMRAM] unsigned long 
  4697 ;;  e               2   53[COMRAM] int 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  4   39[COMRAM] float 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4707 ;;      Params:         4       0       0       0       0       0       0
  4708 ;;      Locals:        10       0       0       0       0       0       0
  4709 ;;      Temps:          6       0       0       0       0       0       0
  4710 ;;      Totals:        20       0       0       0       0       0       0
  4711 ;;Total ram usage:       20 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_efgtoa
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text13
  4721   001C92                     __ptext13:
  4722                           	callstack 0
  4723   001C92                     _floorf:
  4724                           	callstack 26
  4725   001C92  C0C8  F038         	movff	floorf@F521,floorf@u
  4726   001C96  C0C9  F039         	movff	floorf@F521+1,floorf@u+1
  4727   001C9A  C0CA  F03A         	movff	floorf@F521+2,floorf@u+2
  4728   001C9E  C0CB  F03B         	movff	floorf@F521+3,floorf@u+3
  4729   001CA2  C028  F038         	movff	floorf@x,floorf@u
  4730   001CA6  C029  F039         	movff	floorf@x+1,floorf@u+1
  4731   001CAA  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  4732   001CAE  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  4733   001CB2  0E81               	movlw	129
  4734   001CB4  6E2C               	movwf	??_floorf^0,c
  4735   001CB6  0EFF               	movlw	255
  4736   001CB8  6E2D               	movwf	(??_floorf+1)^0,c
  4737   001CBA  C038  F02E         	movff	floorf@u,??_floorf+2
  4738   001CBE  C039  F02F         	movff	floorf@u+1,??_floorf+3
  4739   001CC2  C03A  F030         	movff	floorf@u+2,??_floorf+4
  4740   001CC6  C03B  F031         	movff	floorf@u+3,??_floorf+5
  4741   001CCA  0E18               	movlw	24
  4742   001CCC  EF6D  F00E         	goto	u3090
  4743   001CD0                     u3095:
  4744   001CD0  90D8               	bcf	status,0,c
  4745   001CD2  3231               	rrcf	(??_floorf+5)^0,f,c
  4746   001CD4  3230               	rrcf	(??_floorf+4)^0,f,c
  4747   001CD6  322F               	rrcf	(??_floorf+3)^0,f,c
  4748   001CD8  322E               	rrcf	(??_floorf+2)^0,f,c
  4749   001CDA                     u3090:
  4750   001CDA  2EE8               	decfsz	wreg,f,c
  4751   001CDC  EF68  F00E         	goto	u3095
  4752   001CE0  502E               	movf	(??_floorf+2)^0,w,c
  4753   001CE2  242C               	addwf	??_floorf^0,w,c
  4754   001CE4  6E36               	movwf	floorf@e^0,c
  4755   001CE6  0E00               	movlw	0
  4756   001CE8  202D               	addwfc	(??_floorf+1)^0,w,c
  4757   001CEA  6E37               	movwf	(floorf@e+1)^0,c
  4758   001CEC  BE37               	btfsc	(floorf@e+1)^0,7,c
  4759   001CEE  EF82  F00E         	goto	u3101
  4760   001CF2  5037               	movf	(floorf@e+1)^0,w,c
  4761   001CF4  E109               	bnz	u3100
  4762   001CF6  0E17               	movlw	23
  4763   001CF8  5C36               	subwf	floorf@e^0,w,c
  4764   001CFA  A0D8               	btfss	status,0,c
  4765   001CFC  EF82  F00E         	goto	u3101
  4766   001D00  EF84  F00E         	goto	u3100
  4767   001D04                     u3101:
  4768   001D04  EF8E  F00E         	goto	l2944
  4769   001D08                     u3100:
  4770   001D08                     l2942:
  4771   001D08  C028  F028         	movff	floorf@x,?_floorf
  4772   001D0C  C029  F029         	movff	floorf@x+1,?_floorf+1
  4773   001D10  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  4774   001D14  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  4775   001D18  EF51  F00F         	goto	l1013
  4776   001D1C                     l2944:
  4777   001D1C  BE37               	btfsc	(floorf@e+1)^0,7,c
  4778   001D1E  EF93  F00E         	goto	u3111
  4779   001D22  EF95  F00E         	goto	u3110
  4780   001D26                     u3111:
  4781   001D26  EF05  F00F         	goto	l2954
  4782   001D2A                     u3110:
  4783   001D2A  C036  F02C         	movff	floorf@e,??_floorf
  4784   001D2E  0EFF               	movlw	255
  4785   001D30  6E2D               	movwf	(??_floorf+1)^0,c
  4786   001D32  0EFF               	movlw	255
  4787   001D34  6E2E               	movwf	(??_floorf+2)^0,c
  4788   001D36  0E7F               	movlw	127
  4789   001D38  6E2F               	movwf	(??_floorf+3)^0,c
  4790   001D3A  0E00               	movlw	0
  4791   001D3C  6E30               	movwf	(??_floorf+4)^0,c
  4792   001D3E                     u3125:
  4793   001D3E  662C               	tstfsz	??_floorf^0,c
  4794   001D40  EFA4  F00E         	goto	u3126
  4795   001D44  EFAC  F00E         	goto	u3127
  4796   001D48                     u3126:
  4797   001D48  3430               	rlcf	(??_floorf+4)^0,w,c
  4798   001D4A  3230               	rrcf	(??_floorf+4)^0,f,c
  4799   001D4C  322F               	rrcf	(??_floorf+3)^0,f,c
  4800   001D4E  322E               	rrcf	(??_floorf+2)^0,f,c
  4801   001D50  322D               	rrcf	(??_floorf+1)^0,f,c
  4802   001D52  2E2C               	decfsz	??_floorf^0,f,c
  4803   001D54  EF9F  F00E         	goto	u3125
  4804   001D58                     u3127:
  4805   001D58  C02D  F032         	movff	??_floorf+1,floorf@m
  4806   001D5C  C02E  F033         	movff	??_floorf+2,floorf@m+1
  4807   001D60  C02F  F034         	movff	??_floorf+3,floorf@m+2
  4808   001D64  C030  F035         	movff	??_floorf+4,floorf@m+3
  4809   001D68  5032               	movf	floorf@m^0,w,c
  4810   001D6A  1438               	andwf	floorf@u^0,w,c
  4811   001D6C  6E2C               	movwf	??_floorf^0,c
  4812   001D6E  5033               	movf	(floorf@m+1)^0,w,c
  4813   001D70  1439               	andwf	(floorf@u+1)^0,w,c
  4814   001D72  6E2D               	movwf	(??_floorf+1)^0,c
  4815   001D74  5034               	movf	(floorf@m+2)^0,w,c
  4816   001D76  143A               	andwf	(floorf@u+2)^0,w,c
  4817   001D78  6E2E               	movwf	(??_floorf+2)^0,c
  4818   001D7A  5035               	movf	(floorf@m+3)^0,w,c
  4819   001D7C  143B               	andwf	(floorf@u+3)^0,w,c
  4820   001D7E  6E2F               	movwf	(??_floorf+3)^0,c
  4821   001D80  502C               	movf	??_floorf^0,w,c
  4822   001D82  102D               	iorwf	(??_floorf+1)^0,w,c
  4823   001D84  102E               	iorwf	(??_floorf+2)^0,w,c
  4824   001D86  102F               	iorwf	(??_floorf+3)^0,w,c
  4825   001D88  A4D8               	btfss	status,2,c
  4826   001D8A  EFC9  F00E         	goto	u3131
  4827   001D8E  EFCB  F00E         	goto	u3130
  4828   001D92                     u3131:
  4829   001D92  EFCD  F00E         	goto	l2950
  4830   001D96                     u3130:
  4831   001D96  EF84  F00E         	goto	l2942
  4832   001D9A                     l2950:
  4833   001D9A  C038  F02C         	movff	floorf@u,??_floorf
  4834   001D9E  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4835   001DA2  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4836   001DA6  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4837   001DAA  0E20               	movlw	32
  4838   001DAC  EFDD  F00E         	goto	u3140
  4839   001DB0                     u3145:
  4840   001DB0  90D8               	bcf	status,0,c
  4841   001DB2  322F               	rrcf	(??_floorf+3)^0,f,c
  4842   001DB4  322E               	rrcf	(??_floorf+2)^0,f,c
  4843   001DB6  322D               	rrcf	(??_floorf+1)^0,f,c
  4844   001DB8  322C               	rrcf	??_floorf^0,f,c
  4845   001DBA                     u3140:
  4846   001DBA  2EE8               	decfsz	wreg,f,c
  4847   001DBC  EFD8  F00E         	goto	u3145
  4848   001DC0  502C               	movf	??_floorf^0,w,c
  4849   001DC2  102D               	iorwf	(??_floorf+1)^0,w,c
  4850   001DC4  102E               	iorwf	(??_floorf+2)^0,w,c
  4851   001DC6  102F               	iorwf	(??_floorf+3)^0,w,c
  4852   001DC8  B4D8               	btfsc	status,2,c
  4853   001DCA  EFE9  F00E         	goto	u3151
  4854   001DCE  EFEB  F00E         	goto	u3150
  4855   001DD2                     u3151:
  4856   001DD2  EFF3  F00E         	goto	l1016
  4857   001DD6                     u3150:
  4858   001DD6  5032               	movf	floorf@m^0,w,c
  4859   001DD8  2638               	addwf	floorf@u^0,f,c
  4860   001DDA  5033               	movf	(floorf@m+1)^0,w,c
  4861   001DDC  2239               	addwfc	(floorf@u+1)^0,f,c
  4862   001DDE  5034               	movf	(floorf@m+2)^0,w,c
  4863   001DE0  223A               	addwfc	(floorf@u+2)^0,f,c
  4864   001DE2  5035               	movf	(floorf@m+3)^0,w,c
  4865   001DE4  223B               	addwfc	(floorf@u+3)^0,f,c
  4866   001DE6                     l1016:
  4867   001DE6  1C32               	comf	floorf@m^0,w,c
  4868   001DE8  6E2C               	movwf	??_floorf^0,c
  4869   001DEA  1C33               	comf	(floorf@m+1)^0,w,c
  4870   001DEC  6E2D               	movwf	(??_floorf+1)^0,c
  4871   001DEE  1C34               	comf	(floorf@m+2)^0,w,c
  4872   001DF0  6E2E               	movwf	(??_floorf+2)^0,c
  4873   001DF2  1C35               	comf	(floorf@m+3)^0,w,c
  4874   001DF4  6E2F               	movwf	(??_floorf+3)^0,c
  4875   001DF6  502C               	movf	??_floorf^0,w,c
  4876   001DF8  1638               	andwf	floorf@u^0,f,c
  4877   001DFA  502D               	movf	(??_floorf+1)^0,w,c
  4878   001DFC  1639               	andwf	(floorf@u+1)^0,f,c
  4879   001DFE  502E               	movf	(??_floorf+2)^0,w,c
  4880   001E00  163A               	andwf	(floorf@u+2)^0,f,c
  4881   001E02  502F               	movf	(??_floorf+3)^0,w,c
  4882   001E04  163B               	andwf	(floorf@u+3)^0,f,c
  4883   001E06  EF49  F00F         	goto	l2962
  4884   001E0A                     l2954:
  4885   001E0A  C038  F02C         	movff	floorf@u,??_floorf
  4886   001E0E  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4887   001E12  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4888   001E16  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4889   001E1A  0E20               	movlw	32
  4890   001E1C  EF15  F00F         	goto	u3160
  4891   001E20                     u3165:
  4892   001E20  90D8               	bcf	status,0,c
  4893   001E22  322F               	rrcf	(??_floorf+3)^0,f,c
  4894   001E24  322E               	rrcf	(??_floorf+2)^0,f,c
  4895   001E26  322D               	rrcf	(??_floorf+1)^0,f,c
  4896   001E28  322C               	rrcf	??_floorf^0,f,c
  4897   001E2A                     u3160:
  4898   001E2A  2EE8               	decfsz	wreg,f,c
  4899   001E2C  EF10  F00F         	goto	u3165
  4900   001E30  502C               	movf	??_floorf^0,w,c
  4901   001E32  102D               	iorwf	(??_floorf+1)^0,w,c
  4902   001E34  102E               	iorwf	(??_floorf+2)^0,w,c
  4903   001E36  102F               	iorwf	(??_floorf+3)^0,w,c
  4904   001E38  A4D8               	btfss	status,2,c
  4905   001E3A  EF21  F00F         	goto	u3171
  4906   001E3E  EF23  F00F         	goto	u3170
  4907   001E42                     u3171:
  4908   001E42  EF2D  F00F         	goto	l2958
  4909   001E46                     u3170:
  4910   001E46  0E00               	movlw	0
  4911   001E48  6E38               	movwf	floorf@u^0,c
  4912   001E4A  0E00               	movlw	0
  4913   001E4C  6E39               	movwf	(floorf@u+1)^0,c
  4914   001E4E  0E00               	movlw	0
  4915   001E50  6E3A               	movwf	(floorf@u+2)^0,c
  4916   001E52  0E00               	movlw	0
  4917   001E54  6E3B               	movwf	(floorf@u+3)^0,c
  4918   001E56  EF49  F00F         	goto	l2962
  4919   001E5A                     l2958:
  4920   001E5A  90D8               	bcf	status,0,c
  4921   001E5C  3438               	rlcf	floorf@u^0,w,c
  4922   001E5E  6E2C               	movwf	??_floorf^0,c
  4923   001E60  3439               	rlcf	(floorf@u+1)^0,w,c
  4924   001E62  6E2D               	movwf	(??_floorf+1)^0,c
  4925   001E64  343A               	rlcf	(floorf@u+2)^0,w,c
  4926   001E66  6E2E               	movwf	(??_floorf+2)^0,c
  4927   001E68  343B               	rlcf	(floorf@u+3)^0,w,c
  4928   001E6A  6E2F               	movwf	(??_floorf+3)^0,c
  4929   001E6C  502C               	movf	??_floorf^0,w,c
  4930   001E6E  102D               	iorwf	(??_floorf+1)^0,w,c
  4931   001E70  102E               	iorwf	(??_floorf+2)^0,w,c
  4932   001E72  102F               	iorwf	(??_floorf+3)^0,w,c
  4933   001E74  B4D8               	btfsc	status,2,c
  4934   001E76  EF3F  F00F         	goto	u3181
  4935   001E7A  EF41  F00F         	goto	u3180
  4936   001E7E                     u3181:
  4937   001E7E  EF49  F00F         	goto	l2962
  4938   001E82                     u3180:
  4939   001E82  0E00               	movlw	0
  4940   001E84  6E38               	movwf	floorf@u^0,c
  4941   001E86  0E00               	movlw	0
  4942   001E88  6E39               	movwf	(floorf@u+1)^0,c
  4943   001E8A  0E80               	movlw	128
  4944   001E8C  6E3A               	movwf	(floorf@u+2)^0,c
  4945   001E8E  0EBF               	movlw	191
  4946   001E90  6E3B               	movwf	(floorf@u+3)^0,c
  4947   001E92                     l2962:
  4948   001E92  C038  F028         	movff	floorf@u,?_floorf
  4949   001E96  C039  F029         	movff	floorf@u+1,?_floorf+1
  4950   001E9A  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  4951   001E9E  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  4952   001EA2                     l1013:
  4953   001EA2  0012               	return		;funcret
  4954   001EA4                     __end_of_floorf:
  4955                           	callstack 0
  4956                           
  4957 ;; *************** function ___fpclassifyf *****************
  4958 ;; Defined at:
  4959 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  x               4    0[COMRAM] float 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  u               4   10[COMRAM] struct .
  4964 ;;  e               2    8[COMRAM] int 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  2    0[COMRAM] int 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4974 ;;      Params:         4       0       0       0       0       0       0
  4975 ;;      Locals:         6       0       0       0       0       0       0
  4976 ;;      Temps:          4       0       0       0       0       0       0
  4977 ;;      Totals:        14       0       0       0       0       0       0
  4978 ;;Total ram usage:       14 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_efgtoa
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text14
  4988   0027DC                     __ptext14:
  4989                           	callstack 0
  4990   0027DC                     ___fpclassifyf:
  4991                           	callstack 26
  4992   0027DC  C0CC  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4993   0027E0  C0CD  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4994   0027E4  C0CE  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4995   0027E8  C0CF  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4996   0027EC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4997   0027F0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4998   0027F4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4999   0027F8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5000   0027FC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5001   002800  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5002   002804  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5003   002808  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5004   00280C  0E18               	movlw	24
  5005   00280E  EF0E  F014         	goto	u3000
  5006   002812                     u3005:
  5007   002812  90D8               	bcf	status,0,c
  5008   002814  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5009   002816  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5010   002818  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5011   00281A  3205               	rrcf	??___fpclassifyf^0,f,c
  5012   00281C                     u3000:
  5013   00281C  2EE8               	decfsz	wreg,f,c
  5014   00281E  EF09  F014         	goto	u3005
  5015   002822  5005               	movf	??___fpclassifyf^0,w,c
  5016   002824  6E09               	movwf	___fpclassifyf@e^0,c
  5017   002826  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5018   002828  5009               	movf	___fpclassifyf@e^0,w,c
  5019   00282A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5020   00282C  A4D8               	btfss	status,2,c
  5021   00282E  EF1B  F014         	goto	u3011
  5022   002832  EF1D  F014         	goto	u3010
  5023   002836                     u3011:
  5024   002836  EF3D  F014         	goto	l2916
  5025   00283A                     u3010:
  5026   00283A  90D8               	bcf	status,0,c
  5027   00283C  340B               	rlcf	___fpclassifyf@u^0,w,c
  5028   00283E  6E05               	movwf	??___fpclassifyf^0,c
  5029   002840  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5030   002842  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5031   002844  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5032   002846  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5033   002848  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5034   00284A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5035   00284C  5005               	movf	??___fpclassifyf^0,w,c
  5036   00284E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5037   002850  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5038   002852  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5039   002854  A4D8               	btfss	status,2,c
  5040   002856  EF2F  F014         	goto	u3021
  5041   00285A  EF31  F014         	goto	u3020
  5042   00285E                     u3021:
  5043   00285E  EF37  F014         	goto	l2912
  5044   002862                     u3020:
  5045   002862  0E00               	movlw	0
  5046   002864  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5047   002866  0E02               	movlw	2
  5048   002868  6E01               	movwf	?___fpclassifyf^0,c
  5049   00286A  EF6C  F014         	goto	l1006
  5050   00286E                     l2912:
  5051   00286E  0E00               	movlw	0
  5052   002870  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5053   002872  0E03               	movlw	3
  5054   002874  6E01               	movwf	?___fpclassifyf^0,c
  5055   002876  EF6C  F014         	goto	l1006
  5056   00287A                     l2916:
  5057   00287A  2809               	incf	___fpclassifyf@e^0,w,c
  5058   00287C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5059   00287E  A4D8               	btfss	status,2,c
  5060   002880  EF44  F014         	goto	u3031
  5061   002884  EF46  F014         	goto	u3030
  5062   002888                     u3031:
  5063   002888  EF68  F014         	goto	l2922
  5064   00288C                     u3030:
  5065   00288C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5066   002890  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5067   002894  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5068   002898  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5069   00289C  0E09               	movlw	9
  5070   00289E                     u3045:
  5071   00289E  90D8               	bcf	status,0,c
  5072   0028A0  3605               	rlcf	??___fpclassifyf^0,f,c
  5073   0028A2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5074   0028A4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5075   0028A6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5076   0028A8  2EE8               	decfsz	wreg,f,c
  5077   0028AA  EF4F  F014         	goto	u3045
  5078   0028AE  5005               	movf	??___fpclassifyf^0,w,c
  5079   0028B0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5080   0028B2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5081   0028B4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5082   0028B6  B4D8               	btfsc	status,2,c
  5083   0028B8  EF60  F014         	goto	u3051
  5084   0028BC  EF63  F014         	goto	u3050
  5085   0028C0                     u3051:
  5086   0028C0  0E01               	movlw	1
  5087   0028C2  EF64  F014         	goto	u3060
  5088   0028C6                     u3050:
  5089   0028C6  0E00               	movlw	0
  5090   0028C8                     u3060:
  5091   0028C8  6E01               	movwf	?___fpclassifyf^0,c
  5092   0028CA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5093   0028CC  EF6C  F014         	goto	l1006
  5094   0028D0                     l2922:
  5095   0028D0  0E00               	movlw	0
  5096   0028D2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5097   0028D4  0E04               	movlw	4
  5098   0028D6  6E01               	movwf	?___fpclassifyf^0,c
  5099   0028D8                     l1006:
  5100   0028D8  0012               	return		;funcret
  5101   0028DA                     __end_of___fpclassifyf:
  5102                           	callstack 0
  5103                           
  5104 ;; *************** function ___fltol *****************
  5105 ;; Defined at:
  5106 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  f1              4    0[COMRAM] int 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  exp1            1    9[COMRAM] unsigned char 
  5111 ;;  sign1           1    8[COMRAM] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  4    0[COMRAM] long 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5121 ;;      Params:         4       0       0       0       0       0       0
  5122 ;;      Locals:         2       0       0       0       0       0       0
  5123 ;;      Temps:          4       0       0       0       0       0       0
  5124 ;;      Totals:        10       0       0       0       0       0       0
  5125 ;;Total ram usage:       10 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_efgtoa
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text15
  5135   0025D2                     __ptext15:
  5136                           	callstack 0
  5137   0025D2                     ___fltol:
  5138                           	callstack 26
  5139   0025D2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5140   0025D4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5141   0025D6  6E0A               	movwf	___fltol@exp1^0,c
  5142   0025D8  500A               	movf	___fltol@exp1^0,w,c
  5143   0025DA  A4D8               	btfss	status,2,c
  5144   0025DC  EFF2  F012         	goto	u2911
  5145   0025E0  EFF4  F012         	goto	u2910
  5146   0025E4                     u2911:
  5147   0025E4  EFFE  F012         	goto	l2854
  5148   0025E8                     u2910:
  5149   0025E8                     l2850:
  5150   0025E8  0E00               	movlw	0
  5151   0025EA  6E01               	movwf	?___fltol^0,c
  5152   0025EC  0E00               	movlw	0
  5153   0025EE  6E02               	movwf	(?___fltol+1)^0,c
  5154   0025F0  0E00               	movlw	0
  5155   0025F2  6E03               	movwf	(?___fltol+2)^0,c
  5156   0025F4  0E00               	movlw	0
  5157   0025F6  6E04               	movwf	(?___fltol+3)^0,c
  5158   0025F8  EF6B  F013         	goto	l496
  5159   0025FC                     l2854:
  5160   0025FC  C001  F005         	movff	___fltol@f1,??___fltol
  5161   002600  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5162   002604  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5163   002608  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5164   00260C  0E20               	movlw	32
  5165   00260E  EF0E  F013         	goto	u2920
  5166   002612                     u2925:
  5167   002612  90D8               	bcf	status,0,c
  5168   002614  3208               	rrcf	(??___fltol+3)^0,f,c
  5169   002616  3207               	rrcf	(??___fltol+2)^0,f,c
  5170   002618  3206               	rrcf	(??___fltol+1)^0,f,c
  5171   00261A  3205               	rrcf	??___fltol^0,f,c
  5172   00261C                     u2920:
  5173   00261C  2EE8               	decfsz	wreg,f,c
  5174   00261E  EF09  F013         	goto	u2925
  5175   002622  5005               	movf	??___fltol^0,w,c
  5176   002624  6E09               	movwf	___fltol@sign1^0,c
  5177   002626  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5178   002628  0EFF               	movlw	255
  5179   00262A  1601               	andwf	___fltol@f1^0,f,c
  5180   00262C  0EFF               	movlw	255
  5181   00262E  1602               	andwf	(___fltol@f1+1)^0,f,c
  5182   002630  0EFF               	movlw	255
  5183   002632  1603               	andwf	(___fltol@f1+2)^0,f,c
  5184   002634  0E00               	movlw	0
  5185   002636  1604               	andwf	(___fltol@f1+3)^0,f,c
  5186   002638  0E96               	movlw	150
  5187   00263A  5E0A               	subwf	___fltol@exp1^0,f,c
  5188   00263C  BE0A               	btfsc	___fltol@exp1^0,7,c
  5189   00263E  EF25  F013         	goto	u2930
  5190   002642  EF23  F013         	goto	u2931
  5191   002646                     u2931:
  5192   002646  EF3B  F013         	goto	l2874
  5193   00264A                     u2930:
  5194   00264A  500A               	movf	___fltol@exp1^0,w,c
  5195   00264C  0A80               	xorlw	128
  5196   00264E  0F97               	addlw	151
  5197   002650  B0D8               	btfsc	status,0,c
  5198   002652  EF2D  F013         	goto	u2941
  5199   002656  EF2F  F013         	goto	u2940
  5200   00265A                     u2941:
  5201   00265A  EF31  F013         	goto	l2870
  5202   00265E                     u2940:
  5203   00265E  EFF4  F012         	goto	l2850
  5204   002662                     l2870:
  5205   002662  90D8               	bcf	status,0,c
  5206   002664  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5207   002666  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5208   002668  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5209   00266A  3201               	rrcf	___fltol@f1^0,f,c
  5210   00266C  3E0A               	incfsz	___fltol@exp1^0,f,c
  5211   00266E  EF31  F013         	goto	l2870
  5212   002672  EF53  F013         	goto	l2884
  5213   002676                     l2874:
  5214   002676  0E1F               	movlw	31
  5215   002678  640A               	cpfsgt	___fltol@exp1^0,c
  5216   00267A  EF41  F013         	goto	u2951
  5217   00267E  EF43  F013         	goto	u2950
  5218   002682                     u2951:
  5219   002682  EF4B  F013         	goto	l2882
  5220   002686                     u2950:
  5221   002686  EFF4  F012         	goto	l2850
  5222   00268A                     l2880:
  5223   00268A  90D8               	bcf	status,0,c
  5224   00268C  3601               	rlcf	___fltol@f1^0,f,c
  5225   00268E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5226   002690  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5227   002692  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5228   002694  060A               	decf	___fltol@exp1^0,f,c
  5229   002696                     l2882:
  5230   002696  500A               	movf	___fltol@exp1^0,w,c
  5231   002698  A4D8               	btfss	status,2,c
  5232   00269A  EF51  F013         	goto	u2961
  5233   00269E  EF53  F013         	goto	u2960
  5234   0026A2                     u2961:
  5235   0026A2  EF45  F013         	goto	l2880
  5236   0026A6                     u2960:
  5237   0026A6                     l2884:
  5238   0026A6  5009               	movf	___fltol@sign1^0,w,c
  5239   0026A8  B4D8               	btfsc	status,2,c
  5240   0026AA  EF59  F013         	goto	u2971
  5241   0026AE  EF5B  F013         	goto	u2970
  5242   0026B2                     u2971:
  5243   0026B2  EF63  F013         	goto	l2888
  5244   0026B6                     u2970:
  5245   0026B6  1E04               	comf	(___fltol@f1+3)^0,f,c
  5246   0026B8  1E03               	comf	(___fltol@f1+2)^0,f,c
  5247   0026BA  1E02               	comf	(___fltol@f1+1)^0,f,c
  5248   0026BC  6C01               	negf	___fltol@f1^0,c
  5249   0026BE  0E00               	movlw	0
  5250   0026C0  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5251   0026C2  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5252   0026C4  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5253   0026C6                     l2888:
  5254   0026C6  C001  F001         	movff	___fltol@f1,?___fltol
  5255   0026CA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5256   0026CE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5257   0026D2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5258   0026D6                     l496:
  5259   0026D6  0012               	return		;funcret
  5260   0026D8                     __end_of___fltol:
  5261                           	callstack 0
  5262                           
  5263 ;; *************** function ___flsub *****************
  5264 ;; Defined at:
  5265 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  b               4   55[COMRAM] long 
  5268 ;;  a               4   59[COMRAM] long 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  4   55[COMRAM] long 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5280 ;;      Params:         8       0       0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0
  5283 ;;      Totals:         8       0       0       0       0       0       0
  5284 ;;Total ram usage:        8 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; Hardware stack levels required when called: 1
  5287 ;; This function calls:
  5288 ;;		___fladd
  5289 ;; This function is called by:
  5290 ;;		_efgtoa
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text16
  5295   002D54                     __ptext16:
  5296                           	callstack 0
  5297   002D54                     ___flsub:
  5298                           	callstack 25
  5299   002D54  0E00               	movlw	0
  5300   002D56  1A3C               	xorwf	___flsub@a^0,f,c
  5301   002D58  0E00               	movlw	0
  5302   002D5A  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  5303   002D5C  0E00               	movlw	0
  5304   002D5E  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  5305   002D60  0E80               	movlw	128
  5306   002D62  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  5307   002D64  C038  F028         	movff	___flsub@b,___fladd@b
  5308   002D68  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  5309   002D6C  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  5310   002D70  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  5311   002D74  C03C  F02C         	movff	___flsub@a,___fladd@a
  5312   002D78  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  5313   002D7C  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  5314   002D80  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  5315   002D84  EC13  F008         	call	___fladd	;wreg free
  5316   002D88  C028  F038         	movff	?___fladd,?___flsub
  5317   002D8C  C029  F039         	movff	?___fladd+1,?___flsub+1
  5318   002D90  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  5319   002D94  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  5320   002D98  0012               	return		;funcret
  5321   002D9A                     __end_of___flsub:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function ___flneg *****************
  5325 ;; Defined at:
  5326 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  f1              4    0[COMRAM] long 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  4    0[COMRAM] long 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5340 ;;      Params:         4       0       0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0       0
  5343 ;;      Totals:         4       0       0       0       0       0       0
  5344 ;;Total ram usage:        4 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_efgtoa
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text17
  5354   002F0A                     __ptext17:
  5355                           	callstack 0
  5356   002F0A                     ___flneg:
  5357                           	callstack 26
  5358   002F0A  5001               	movf	___flneg@f1^0,w,c
  5359   002F0C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5360   002F0E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5361   002F10  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5362   002F12  B4D8               	btfsc	status,2,c
  5363   002F14  EF8E  F017         	goto	u2901
  5364   002F18  EF90  F017         	goto	u2900
  5365   002F1C                     u2901:
  5366   002F1C  EF98  F017         	goto	l2844
  5367   002F20                     u2900:
  5368   002F20  0E00               	movlw	0
  5369   002F22  1A01               	xorwf	___flneg@f1^0,f,c
  5370   002F24  0E00               	movlw	0
  5371   002F26  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5372   002F28  0E00               	movlw	0
  5373   002F2A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5374   002F2C  0E80               	movlw	128
  5375   002F2E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5376   002F30                     l2844:
  5377   002F30  C001  F001         	movff	___flneg@f1,?___flneg
  5378   002F34  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5379   002F38  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5380   002F3C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5381   002F40  0012               	return		;funcret
  5382   002F42                     __end_of___flneg:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function ___flmul *****************
  5386 ;; Defined at:
  5387 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  b               4    0[COMRAM] long 
  5390 ;;  a               4    4[COMRAM] long 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  prod            4   19[COMRAM] struct .
  5393 ;;  grs             4   13[COMRAM] unsigned long 
  5394 ;;  temp            2   23[COMRAM] struct .
  5395 ;;  bexp            1   18[COMRAM] unsigned char 
  5396 ;;  aexp            1   17[COMRAM] unsigned char 
  5397 ;;  sign            1   12[COMRAM] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  4    0[COMRAM] unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0, prodl, prodh
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5407 ;;      Params:         8       0       0       0       0       0       0
  5408 ;;      Locals:        13       0       0       0       0       0       0
  5409 ;;      Temps:          4       0       0       0       0       0       0
  5410 ;;      Totals:        25       0       0       0       0       0       0
  5411 ;;Total ram usage:       25 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_efgtoa
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text18
  5421   0014DC                     __ptext18:
  5422                           	callstack 0
  5423   0014DC                     ___flmul:
  5424                           	callstack 26
  5425   0014DC  5004               	movf	(___flmul@b+3)^0,w,c
  5426   0014DE  0B80               	andlw	128
  5427   0014E0  6E0D               	movwf	___flmul@sign^0,c
  5428   0014E2  5004               	movf	(___flmul@b+3)^0,w,c
  5429   0014E4  2404               	addwf	(___flmul@b+3)^0,w,c
  5430   0014E6  6E13               	movwf	___flmul@bexp^0,c
  5431   0014E8  AE03               	btfss	(___flmul@b+2)^0,7,c
  5432   0014EA  EF79  F00A         	goto	u2631
  5433   0014EE  EF7B  F00A         	goto	u2630
  5434   0014F2                     u2631:
  5435   0014F2  EF7C  F00A         	goto	l2674
  5436   0014F6                     u2630:
  5437   0014F6  8013               	bsf	___flmul@bexp^0,0,c
  5438   0014F8                     l2674:
  5439   0014F8  5013               	movf	___flmul@bexp^0,w,c
  5440   0014FA  B4D8               	btfsc	status,2,c
  5441   0014FC  EF82  F00A         	goto	u2641
  5442   001500  EF84  F00A         	goto	u2640
  5443   001504                     u2641:
  5444   001504  EF97  F00A         	goto	l2682
  5445   001508                     u2640:
  5446   001508  2813               	incf	___flmul@bexp^0,w,c
  5447   00150A  A4D8               	btfss	status,2,c
  5448   00150C  EF8A  F00A         	goto	u2651
  5449   001510  EF8C  F00A         	goto	u2650
  5450   001514                     u2651:
  5451   001514  EF94  F00A         	goto	l2680
  5452   001518                     u2650:
  5453   001518  0E00               	movlw	0
  5454   00151A  6E01               	movwf	___flmul@b^0,c
  5455   00151C  0E00               	movlw	0
  5456   00151E  6E02               	movwf	(___flmul@b+1)^0,c
  5457   001520  0E00               	movlw	0
  5458   001522  6E03               	movwf	(___flmul@b+2)^0,c
  5459   001524  0E00               	movlw	0
  5460   001526  6E04               	movwf	(___flmul@b+3)^0,c
  5461   001528                     l2680:
  5462   001528  8E03               	bsf	(___flmul@b+2)^0,7,c
  5463   00152A  EF9F  F00A         	goto	l2684
  5464   00152E                     l2682:
  5465   00152E  0E00               	movlw	0
  5466   001530  6E01               	movwf	___flmul@b^0,c
  5467   001532  0E00               	movlw	0
  5468   001534  6E02               	movwf	(___flmul@b+1)^0,c
  5469   001536  0E00               	movlw	0
  5470   001538  6E03               	movwf	(___flmul@b+2)^0,c
  5471   00153A  0E00               	movlw	0
  5472   00153C  6E04               	movwf	(___flmul@b+3)^0,c
  5473   00153E                     l2684:
  5474   00153E  5008               	movf	(___flmul@a+3)^0,w,c
  5475   001540  0B80               	andlw	128
  5476   001542  1A0D               	xorwf	___flmul@sign^0,f,c
  5477   001544  5008               	movf	(___flmul@a+3)^0,w,c
  5478   001546  2408               	addwf	(___flmul@a+3)^0,w,c
  5479   001548  6E12               	movwf	___flmul@aexp^0,c
  5480   00154A  AE07               	btfss	(___flmul@a+2)^0,7,c
  5481   00154C  EFAA  F00A         	goto	u2661
  5482   001550  EFAC  F00A         	goto	u2660
  5483   001554                     u2661:
  5484   001554  EFAD  F00A         	goto	l2692
  5485   001558                     u2660:
  5486   001558  8012               	bsf	___flmul@aexp^0,0,c
  5487   00155A                     l2692:
  5488   00155A  5012               	movf	___flmul@aexp^0,w,c
  5489   00155C  B4D8               	btfsc	status,2,c
  5490   00155E  EFB3  F00A         	goto	u2671
  5491   001562  EFB5  F00A         	goto	u2670
  5492   001566                     u2671:
  5493   001566  EFC8  F00A         	goto	l2700
  5494   00156A                     u2670:
  5495   00156A  2812               	incf	___flmul@aexp^0,w,c
  5496   00156C  A4D8               	btfss	status,2,c
  5497   00156E  EFBB  F00A         	goto	u2681
  5498   001572  EFBD  F00A         	goto	u2680
  5499   001576                     u2681:
  5500   001576  EFC5  F00A         	goto	l2698
  5501   00157A                     u2680:
  5502   00157A  0E00               	movlw	0
  5503   00157C  6E05               	movwf	___flmul@a^0,c
  5504   00157E  0E00               	movlw	0
  5505   001580  6E06               	movwf	(___flmul@a+1)^0,c
  5506   001582  0E00               	movlw	0
  5507   001584  6E07               	movwf	(___flmul@a+2)^0,c
  5508   001586  0E00               	movlw	0
  5509   001588  6E08               	movwf	(___flmul@a+3)^0,c
  5510   00158A                     l2698:
  5511   00158A  8E07               	bsf	(___flmul@a+2)^0,7,c
  5512   00158C  EFD0  F00A         	goto	l813
  5513   001590                     l2700:
  5514   001590  0E00               	movlw	0
  5515   001592  6E05               	movwf	___flmul@a^0,c
  5516   001594  0E00               	movlw	0
  5517   001596  6E06               	movwf	(___flmul@a+1)^0,c
  5518   001598  0E00               	movlw	0
  5519   00159A  6E07               	movwf	(___flmul@a+2)^0,c
  5520   00159C  0E00               	movlw	0
  5521   00159E  6E08               	movwf	(___flmul@a+3)^0,c
  5522   0015A0                     l813:
  5523   0015A0  5012               	movf	___flmul@aexp^0,w,c
  5524   0015A2  B4D8               	btfsc	status,2,c
  5525   0015A4  EFD6  F00A         	goto	u2691
  5526   0015A8  EFD8  F00A         	goto	u2690
  5527   0015AC                     u2691:
  5528   0015AC  EFE0  F00A         	goto	l2704
  5529   0015B0                     u2690:
  5530   0015B0  5013               	movf	___flmul@bexp^0,w,c
  5531   0015B2  A4D8               	btfss	status,2,c
  5532   0015B4  EFDE  F00A         	goto	u2701
  5533   0015B8  EFE0  F00A         	goto	u2700
  5534   0015BC                     u2701:
  5535   0015BC  EFEA  F00A         	goto	l2708
  5536   0015C0                     u2700:
  5537   0015C0                     l2704:
  5538   0015C0  0E00               	movlw	0
  5539   0015C2  6E01               	movwf	?___flmul^0,c
  5540   0015C4  0E00               	movlw	0
  5541   0015C6  6E02               	movwf	(?___flmul+1)^0,c
  5542   0015C8  0E00               	movlw	0
  5543   0015CA  6E03               	movwf	(?___flmul+2)^0,c
  5544   0015CC  0E00               	movlw	0
  5545   0015CE  6E04               	movwf	(?___flmul+3)^0,c
  5546   0015D0  EF80  F00C         	goto	l817
  5547   0015D4                     l2708:
  5548   0015D4  5007               	movf	(___flmul@a+2)^0,w,c
  5549   0015D6  0201               	mulwf	___flmul@b^0,c
  5550   0015D8  CFF3 F018          	movff	prodl,___flmul@temp
  5551   0015DC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5552   0015E0  5018               	movf	___flmul@temp^0,w,c
  5553   0015E2  6E0E               	movwf	___flmul@grs^0,c
  5554   0015E4  6A0F               	clrf	(___flmul@grs+1)^0,c
  5555   0015E6  6A10               	clrf	(___flmul@grs+2)^0,c
  5556   0015E8  6A11               	clrf	(___flmul@grs+3)^0,c
  5557   0015EA  5019               	movf	(___flmul@temp+1)^0,w,c
  5558   0015EC  6E14               	movwf	___flmul@prod^0,c
  5559   0015EE  6A15               	clrf	(___flmul@prod+1)^0,c
  5560   0015F0  6A16               	clrf	(___flmul@prod+2)^0,c
  5561   0015F2  6A17               	clrf	(___flmul@prod+3)^0,c
  5562   0015F4  5006               	movf	(___flmul@a+1)^0,w,c
  5563   0015F6  0202               	mulwf	(___flmul@b+1)^0,c
  5564   0015F8  CFF3 F018          	movff	prodl,___flmul@temp
  5565   0015FC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5566   001600  5018               	movf	___flmul@temp^0,w,c
  5567   001602  260E               	addwf	___flmul@grs^0,f,c
  5568   001604  0E00               	movlw	0
  5569   001606  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5570   001608  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5571   00160A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5572   00160C  5019               	movf	(___flmul@temp+1)^0,w,c
  5573   00160E  2614               	addwf	___flmul@prod^0,f,c
  5574   001610  0E00               	movlw	0
  5575   001612  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5576   001614  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5577   001616  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5578   001618  5005               	movf	___flmul@a^0,w,c
  5579   00161A  0203               	mulwf	(___flmul@b+2)^0,c
  5580   00161C  CFF3 F018          	movff	prodl,___flmul@temp
  5581   001620  CFF4 F019          	movff	prodh,___flmul@temp+1
  5582   001624  5018               	movf	___flmul@temp^0,w,c
  5583   001626  260E               	addwf	___flmul@grs^0,f,c
  5584   001628  0E00               	movlw	0
  5585   00162A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5586   00162C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5587   00162E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5588   001630  5019               	movf	(___flmul@temp+1)^0,w,c
  5589   001632  2614               	addwf	___flmul@prod^0,f,c
  5590   001634  0E00               	movlw	0
  5591   001636  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5592   001638  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5593   00163A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5594   00163C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5595   001640  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5596   001644  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5597   001648  6A0E               	clrf	___flmul@grs^0,c
  5598   00164A  5005               	movf	___flmul@a^0,w,c
  5599   00164C  0202               	mulwf	(___flmul@b+1)^0,c
  5600   00164E  CFF3 F018          	movff	prodl,___flmul@temp
  5601   001652  CFF4 F019          	movff	prodh,___flmul@temp+1
  5602   001656  5018               	movf	___flmul@temp^0,w,c
  5603   001658  260E               	addwf	___flmul@grs^0,f,c
  5604   00165A  5019               	movf	(___flmul@temp+1)^0,w,c
  5605   00165C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5606   00165E  0E00               	movlw	0
  5607   001660  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5608   001662  0E00               	movlw	0
  5609   001664  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5610   001666  5006               	movf	(___flmul@a+1)^0,w,c
  5611   001668  0201               	mulwf	___flmul@b^0,c
  5612   00166A  CFF3 F018          	movff	prodl,___flmul@temp
  5613   00166E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5614   001672  5018               	movf	___flmul@temp^0,w,c
  5615   001674  260E               	addwf	___flmul@grs^0,f,c
  5616   001676  5019               	movf	(___flmul@temp+1)^0,w,c
  5617   001678  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5618   00167A  0E00               	movlw	0
  5619   00167C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5620   00167E  0E00               	movlw	0
  5621   001680  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5622   001682  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5623   001686  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5624   00168A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5625   00168E  6A0E               	clrf	___flmul@grs^0,c
  5626   001690  5005               	movf	___flmul@a^0,w,c
  5627   001692  0201               	mulwf	___flmul@b^0,c
  5628   001694  CFF3 F018          	movff	prodl,___flmul@temp
  5629   001698  CFF4 F019          	movff	prodh,___flmul@temp+1
  5630   00169C  5018               	movf	___flmul@temp^0,w,c
  5631   00169E  260E               	addwf	___flmul@grs^0,f,c
  5632   0016A0  5019               	movf	(___flmul@temp+1)^0,w,c
  5633   0016A2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5634   0016A4  0E00               	movlw	0
  5635   0016A6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5636   0016A8  0E00               	movlw	0
  5637   0016AA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5638   0016AC  5007               	movf	(___flmul@a+2)^0,w,c
  5639   0016AE  0202               	mulwf	(___flmul@b+1)^0,c
  5640   0016B0  CFF3 F018          	movff	prodl,___flmul@temp
  5641   0016B4  CFF4 F019          	movff	prodh,___flmul@temp+1
  5642   0016B8  5018               	movf	___flmul@temp^0,w,c
  5643   0016BA  2614               	addwf	___flmul@prod^0,f,c
  5644   0016BC  5019               	movf	(___flmul@temp+1)^0,w,c
  5645   0016BE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5646   0016C0  0E00               	movlw	0
  5647   0016C2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5648   0016C4  0E00               	movlw	0
  5649   0016C6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5650   0016C8  5006               	movf	(___flmul@a+1)^0,w,c
  5651   0016CA  0203               	mulwf	(___flmul@b+2)^0,c
  5652   0016CC  CFF3 F018          	movff	prodl,___flmul@temp
  5653   0016D0  CFF4 F019          	movff	prodh,___flmul@temp+1
  5654   0016D4  5018               	movf	___flmul@temp^0,w,c
  5655   0016D6  2614               	addwf	___flmul@prod^0,f,c
  5656   0016D8  5019               	movf	(___flmul@temp+1)^0,w,c
  5657   0016DA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5658   0016DC  0E00               	movlw	0
  5659   0016DE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5660   0016E0  0E00               	movlw	0
  5661   0016E2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5662   0016E4  5007               	movf	(___flmul@a+2)^0,w,c
  5663   0016E6  0203               	mulwf	(___flmul@b+2)^0,c
  5664   0016E8  CFF3 F018          	movff	prodl,___flmul@temp
  5665   0016EC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5666   0016F0  5018               	movf	___flmul@temp^0,w,c
  5667   0016F2  6E09               	movwf	??___flmul^0,c
  5668   0016F4  5019               	movf	(___flmul@temp+1)^0,w,c
  5669   0016F6  6E0A               	movwf	(??___flmul+1)^0,c
  5670   0016F8  6A0B               	clrf	(??___flmul+2)^0,c
  5671   0016FA  6A0C               	clrf	(??___flmul+3)^0,c
  5672   0016FC  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5673   001700  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5674   001704  C009  F00A         	movff	??___flmul,??___flmul+1
  5675   001708  6A09               	clrf	??___flmul^0,c
  5676   00170A  5009               	movf	??___flmul^0,w,c
  5677   00170C  2614               	addwf	___flmul@prod^0,f,c
  5678   00170E  500A               	movf	(??___flmul+1)^0,w,c
  5679   001710  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5680   001712  500B               	movf	(??___flmul+2)^0,w,c
  5681   001714  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5682   001716  500C               	movf	(??___flmul+3)^0,w,c
  5683   001718  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5684   00171A  C00E  F009         	movff	___flmul@grs,??___flmul
  5685   00171E  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5686   001722  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5687   001726  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5688   00172A  0E19               	movlw	25
  5689   00172C  EF9D  F00B         	goto	u2710
  5690   001730                     u2715:
  5691   001730  90D8               	bcf	status,0,c
  5692   001732  320C               	rrcf	(??___flmul+3)^0,f,c
  5693   001734  320B               	rrcf	(??___flmul+2)^0,f,c
  5694   001736  320A               	rrcf	(??___flmul+1)^0,f,c
  5695   001738  3209               	rrcf	??___flmul^0,f,c
  5696   00173A                     u2710:
  5697   00173A  2EE8               	decfsz	wreg,f,c
  5698   00173C  EF98  F00B         	goto	u2715
  5699   001740  5009               	movf	??___flmul^0,w,c
  5700   001742  2614               	addwf	___flmul@prod^0,f,c
  5701   001744  500A               	movf	(??___flmul+1)^0,w,c
  5702   001746  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5703   001748  500B               	movf	(??___flmul+2)^0,w,c
  5704   00174A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5705   00174C  500C               	movf	(??___flmul+3)^0,w,c
  5706   00174E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5707   001750  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5708   001754  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5709   001758  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5710   00175C  6A0E               	clrf	___flmul@grs^0,c
  5711   00175E  5012               	movf	___flmul@aexp^0,w,c
  5712   001760  C013  F009         	movff	___flmul@bexp,??___flmul
  5713   001764  6A0A               	clrf	(??___flmul+1)^0,c
  5714   001766  2609               	addwf	??___flmul^0,f,c
  5715   001768  0E00               	movlw	0
  5716   00176A  220A               	addwfc	(??___flmul+1)^0,f,c
  5717   00176C  0E82               	movlw	130
  5718   00176E  2409               	addwf	??___flmul^0,w,c
  5719   001770  6E18               	movwf	___flmul@temp^0,c
  5720   001772  0EFF               	movlw	255
  5721   001774  200A               	addwfc	(??___flmul+1)^0,w,c
  5722   001776  6E19               	movwf	(___flmul@temp+1)^0,c
  5723   001778  EFD3  F00B         	goto	l2756
  5724   00177C                     l2750:
  5725   00177C  90D8               	bcf	status,0,c
  5726   00177E  3614               	rlcf	___flmul@prod^0,f,c
  5727   001780  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5728   001782  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5729   001784  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5730   001786  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5731   001788  EFC8  F00B         	goto	u2721
  5732   00178C  EFCA  F00B         	goto	u2720
  5733   001790                     u2721:
  5734   001790  EFCB  F00B         	goto	l820
  5735   001794                     u2720:
  5736   001794  8014               	bsf	___flmul@prod^0,0,c
  5737   001796                     l820:
  5738   001796  90D8               	bcf	status,0,c
  5739   001798  360E               	rlcf	___flmul@grs^0,f,c
  5740   00179A  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5741   00179C  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5742   00179E  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5743   0017A0  0618               	decf	___flmul@temp^0,f,c
  5744   0017A2  A0D8               	btfss	status,0,c
  5745   0017A4  0619               	decf	(___flmul@temp+1)^0,f,c
  5746   0017A6                     l2756:
  5747   0017A6  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5748   0017A8  EFD8  F00B         	goto	u2731
  5749   0017AC  EFDA  F00B         	goto	u2730
  5750   0017B0                     u2731:
  5751   0017B0  EFBE  F00B         	goto	l2750
  5752   0017B4                     u2730:
  5753   0017B4  6A12               	clrf	___flmul@aexp^0,c
  5754   0017B6  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5755   0017B8  EFE0  F00B         	goto	u2741
  5756   0017BC  EFE2  F00B         	goto	u2740
  5757   0017C0                     u2741:
  5758   0017C0  EF06  F00C         	goto	l822
  5759   0017C4                     u2740:
  5760   0017C4  0EFF               	movlw	255
  5761   0017C6  140E               	andwf	___flmul@grs^0,w,c
  5762   0017C8  6E09               	movwf	??___flmul^0,c
  5763   0017CA  0EFF               	movlw	255
  5764   0017CC  140F               	andwf	(___flmul@grs+1)^0,w,c
  5765   0017CE  6E0A               	movwf	(??___flmul+1)^0,c
  5766   0017D0  0EFF               	movlw	255
  5767   0017D2  1410               	andwf	(___flmul@grs+2)^0,w,c
  5768   0017D4  6E0B               	movwf	(??___flmul+2)^0,c
  5769   0017D6  0E7F               	movlw	127
  5770   0017D8  1411               	andwf	(___flmul@grs+3)^0,w,c
  5771   0017DA  6E0C               	movwf	(??___flmul+3)^0,c
  5772   0017DC  5009               	movf	??___flmul^0,w,c
  5773   0017DE  100A               	iorwf	(??___flmul+1)^0,w,c
  5774   0017E0  100B               	iorwf	(??___flmul+2)^0,w,c
  5775   0017E2  100C               	iorwf	(??___flmul+3)^0,w,c
  5776   0017E4  B4D8               	btfsc	status,2,c
  5777   0017E6  EFF7  F00B         	goto	u2751
  5778   0017EA  EFF9  F00B         	goto	u2750
  5779   0017EE                     u2751:
  5780   0017EE  EFFD  F00B         	goto	l823
  5781   0017F2                     u2750:
  5782   0017F2                     l2760:
  5783   0017F2  0E01               	movlw	1
  5784   0017F4  6E12               	movwf	___flmul@aexp^0,c
  5785   0017F6  EF06  F00C         	goto	l822
  5786   0017FA                     l823:
  5787   0017FA  A014               	btfss	___flmul@prod^0,0,c
  5788   0017FC  EF02  F00C         	goto	u2761
  5789   001800  EF04  F00C         	goto	u2760
  5790   001804                     u2761:
  5791   001804  EF06  F00C         	goto	l822
  5792   001808                     u2760:
  5793   001808  EFF9  F00B         	goto	l2760
  5794   00180C                     l822:
  5795   00180C  5012               	movf	___flmul@aexp^0,w,c
  5796   00180E  B4D8               	btfsc	status,2,c
  5797   001810  EF0C  F00C         	goto	u2771
  5798   001814  EF0E  F00C         	goto	u2770
  5799   001818                     u2771:
  5800   001818  EF32  F00C         	goto	l2772
  5801   00181C                     u2770:
  5802   00181C  0E01               	movlw	1
  5803   00181E  2614               	addwf	___flmul@prod^0,f,c
  5804   001820  0E00               	movlw	0
  5805   001822  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5806   001824  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5807   001826  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5808   001828  A017               	btfss	(___flmul@prod+3)^0,0,c
  5809   00182A  EF19  F00C         	goto	u2781
  5810   00182E  EF1B  F00C         	goto	u2780
  5811   001832                     u2781:
  5812   001832  EF32  F00C         	goto	l2772
  5813   001836                     u2780:
  5814   001836  C014  F009         	movff	___flmul@prod,??___flmul
  5815   00183A  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5816   00183E  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5817   001842  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5818   001846  340C               	rlcf	(??___flmul+3)^0,w,c
  5819   001848  320C               	rrcf	(??___flmul+3)^0,f,c
  5820   00184A  320B               	rrcf	(??___flmul+2)^0,f,c
  5821   00184C  320A               	rrcf	(??___flmul+1)^0,f,c
  5822   00184E  3209               	rrcf	??___flmul^0,f,c
  5823   001850  C009  F014         	movff	??___flmul,___flmul@prod
  5824   001854  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5825   001858  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5826   00185C  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5827   001860  4A18               	infsnz	___flmul@temp^0,f,c
  5828   001862  2A19               	incf	(___flmul@temp+1)^0,f,c
  5829   001864                     l2772:
  5830   001864  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5831   001866  EF3D  F00C         	goto	u2791
  5832   00186A  5019               	movf	(___flmul@temp+1)^0,w,c
  5833   00186C  E108               	bnz	u2790
  5834   00186E  2818               	incf	___flmul@temp^0,w,c
  5835   001870  A0D8               	btfss	status,0,c
  5836   001872  EF3D  F00C         	goto	u2791
  5837   001876  EF3F  F00C         	goto	u2790
  5838   00187A                     u2791:
  5839   00187A  EF49  F00C         	goto	l2776
  5840   00187E                     u2790:
  5841   00187E  0E00               	movlw	0
  5842   001880  6E14               	movwf	___flmul@prod^0,c
  5843   001882  0E00               	movlw	0
  5844   001884  6E15               	movwf	(___flmul@prod+1)^0,c
  5845   001886  0E80               	movlw	128
  5846   001888  6E16               	movwf	(___flmul@prod+2)^0,c
  5847   00188A  0E7F               	movlw	127
  5848   00188C  6E17               	movwf	(___flmul@prod+3)^0,c
  5849   00188E  EF76  F00C         	goto	l2790
  5850   001892                     l2776:
  5851   001892  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5852   001894  EF56  F00C         	goto	u2800
  5853   001898  5019               	movf	(___flmul@temp+1)^0,w,c
  5854   00189A  E106               	bnz	u2801
  5855   00189C  0418               	decf	___flmul@temp^0,w,c
  5856   00189E  B0D8               	btfsc	status,0,c
  5857   0018A0  EF54  F00C         	goto	u2801
  5858   0018A4  EF56  F00C         	goto	u2800
  5859   0018A8                     u2801:
  5860   0018A8  EF61  F00C         	goto	l830
  5861   0018AC                     u2800:
  5862   0018AC  0E00               	movlw	0
  5863   0018AE  6E14               	movwf	___flmul@prod^0,c
  5864   0018B0  0E00               	movlw	0
  5865   0018B2  6E15               	movwf	(___flmul@prod+1)^0,c
  5866   0018B4  0E00               	movlw	0
  5867   0018B6  6E16               	movwf	(___flmul@prod+2)^0,c
  5868   0018B8  0E00               	movlw	0
  5869   0018BA  6E17               	movwf	(___flmul@prod+3)^0,c
  5870   0018BC  6A0D               	clrf	___flmul@sign^0,c
  5871   0018BE  EF76  F00C         	goto	l2790
  5872   0018C2                     l830:
  5873   0018C2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5874   0018C6  0EFF               	movlw	255
  5875   0018C8  1614               	andwf	___flmul@prod^0,f,c
  5876   0018CA  0EFF               	movlw	255
  5877   0018CC  1615               	andwf	(___flmul@prod+1)^0,f,c
  5878   0018CE  0E7F               	movlw	127
  5879   0018D0  1616               	andwf	(___flmul@prod+2)^0,f,c
  5880   0018D2  0E00               	movlw	0
  5881   0018D4  1617               	andwf	(___flmul@prod+3)^0,f,c
  5882   0018D6  A013               	btfss	___flmul@bexp^0,0,c
  5883   0018D8  EF70  F00C         	goto	u2811
  5884   0018DC  EF72  F00C         	goto	u2810
  5885   0018E0                     u2811:
  5886   0018E0  EF73  F00C         	goto	l2788
  5887   0018E4                     u2810:
  5888   0018E4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5889   0018E6                     l2788:
  5890   0018E6  90D8               	bcf	status,0,c
  5891   0018E8  3013               	rrcf	___flmul@bexp^0,w,c
  5892   0018EA  6E17               	movwf	(___flmul@prod+3)^0,c
  5893   0018EC                     l2790:
  5894   0018EC  500D               	movf	___flmul@sign^0,w,c
  5895   0018EE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5896   0018F0  C014  F001         	movff	___flmul@prod,?___flmul
  5897   0018F4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5898   0018F8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5899   0018FC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5900   001900                     l817:
  5901   001900  0012               	return		;funcret
  5902   001902                     __end_of___flmul:
  5903                           	callstack 0
  5904                           
  5905 ;; *************** function ___flge *****************
  5906 ;; Defined at:
  5907 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  ff1             4   25[COMRAM] unsigned char 
  5910 ;;  ff2             4   29[COMRAM] unsigned char 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;		None               void
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5922 ;;      Params:         8       0       0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0
  5924 ;;      Temps:          4       0       0       0       0       0       0
  5925 ;;      Totals:        12       0       0       0       0       0       0
  5926 ;;Total ram usage:       12 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_main
  5932 ;;		_efgtoa
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text19
  5937   0026D8                     __ptext19:
  5938                           	callstack 0
  5939   0026D8                     ___flge:
  5940                           	callstack 26
  5941   0026D8  0E00               	movlw	0
  5942   0026DA  141A               	andwf	___flge@ff1^0,w,c
  5943   0026DC  6E22               	movwf	??___flge^0,c
  5944   0026DE  0E00               	movlw	0
  5945   0026E0  141B               	andwf	(___flge@ff1+1)^0,w,c
  5946   0026E2  6E23               	movwf	(??___flge+1)^0,c
  5947   0026E4  0E80               	movlw	128
  5948   0026E6  141C               	andwf	(___flge@ff1+2)^0,w,c
  5949   0026E8  6E24               	movwf	(??___flge+2)^0,c
  5950   0026EA  0E7F               	movlw	127
  5951   0026EC  141D               	andwf	(___flge@ff1+3)^0,w,c
  5952   0026EE  6E25               	movwf	(??___flge+3)^0,c
  5953   0026F0  5022               	movf	??___flge^0,w,c
  5954   0026F2  1023               	iorwf	(??___flge+1)^0,w,c
  5955   0026F4  1024               	iorwf	(??___flge+2)^0,w,c
  5956   0026F6  1025               	iorwf	(??___flge+3)^0,w,c
  5957   0026F8  A4D8               	btfss	status,2,c
  5958   0026FA  EF81  F013         	goto	u2851
  5959   0026FE  EF83  F013         	goto	u2850
  5960   002702                     u2851:
  5961   002702  EF8B  F013         	goto	l2822
  5962   002706                     u2850:
  5963   002706  0E00               	movlw	0
  5964   002708  6E1A               	movwf	___flge@ff1^0,c
  5965   00270A  0E00               	movlw	0
  5966   00270C  6E1B               	movwf	(___flge@ff1+1)^0,c
  5967   00270E  0E00               	movlw	0
  5968   002710  6E1C               	movwf	(___flge@ff1+2)^0,c
  5969   002712  0E00               	movlw	0
  5970   002714  6E1D               	movwf	(___flge@ff1+3)^0,c
  5971   002716                     l2822:
  5972   002716  0E00               	movlw	0
  5973   002718  141E               	andwf	___flge@ff2^0,w,c
  5974   00271A  6E22               	movwf	??___flge^0,c
  5975   00271C  0E00               	movlw	0
  5976   00271E  141F               	andwf	(___flge@ff2+1)^0,w,c
  5977   002720  6E23               	movwf	(??___flge+1)^0,c
  5978   002722  0E80               	movlw	128
  5979   002724  1420               	andwf	(___flge@ff2+2)^0,w,c
  5980   002726  6E24               	movwf	(??___flge+2)^0,c
  5981   002728  0E7F               	movlw	127
  5982   00272A  1421               	andwf	(___flge@ff2+3)^0,w,c
  5983   00272C  6E25               	movwf	(??___flge+3)^0,c
  5984   00272E  5022               	movf	??___flge^0,w,c
  5985   002730  1023               	iorwf	(??___flge+1)^0,w,c
  5986   002732  1024               	iorwf	(??___flge+2)^0,w,c
  5987   002734  1025               	iorwf	(??___flge+3)^0,w,c
  5988   002736  A4D8               	btfss	status,2,c
  5989   002738  EFA0  F013         	goto	u2861
  5990   00273C  EFA2  F013         	goto	u2860
  5991   002740                     u2861:
  5992   002740  EFAA  F013         	goto	l2826
  5993   002744                     u2860:
  5994   002744  0E00               	movlw	0
  5995   002746  6E1E               	movwf	___flge@ff2^0,c
  5996   002748  0E00               	movlw	0
  5997   00274A  6E1F               	movwf	(___flge@ff2+1)^0,c
  5998   00274C  0E00               	movlw	0
  5999   00274E  6E20               	movwf	(___flge@ff2+2)^0,c
  6000   002750  0E00               	movlw	0
  6001   002752  6E21               	movwf	(___flge@ff2+3)^0,c
  6002   002754                     l2826:
  6003   002754  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6004   002756  EFAF  F013         	goto	u2871
  6005   00275A  EFB1  F013         	goto	u2870
  6006   00275E                     u2871:
  6007   00275E  EFBA  F013         	goto	l2830
  6008   002762                     u2870:
  6009   002762  6C1A               	negf	___flge@ff1^0,c
  6010   002764  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6011   002766  B0D8               	btfsc	status,0,c
  6012   002768  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6013   00276A  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6014   00276C  B0D8               	btfsc	status,0,c
  6015   00276E  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6016   002770  0E80               	movlw	128
  6017   002772  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6018   002774                     l2830:
  6019   002774  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6020   002776  EFBF  F013         	goto	u2881
  6021   00277A  EFC1  F013         	goto	u2880
  6022   00277E                     u2881:
  6023   00277E  EFCA  F013         	goto	l464
  6024   002782                     u2880:
  6025   002782  6C1E               	negf	___flge@ff2^0,c
  6026   002784  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6027   002786  B0D8               	btfsc	status,0,c
  6028   002788  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6029   00278A  1E20               	comf	(___flge@ff2+2)^0,f,c
  6030   00278C  B0D8               	btfsc	status,0,c
  6031   00278E  2A20               	incf	(___flge@ff2+2)^0,f,c
  6032   002790  0E80               	movlw	128
  6033   002792  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6034   002794                     l464:
  6035   002794  0E00               	movlw	0
  6036   002796  1A1A               	xorwf	___flge@ff1^0,f,c
  6037   002798  0E00               	movlw	0
  6038   00279A  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6039   00279C  0E00               	movlw	0
  6040   00279E  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6041   0027A0  0E80               	movlw	128
  6042   0027A2  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6043   0027A4  0E00               	movlw	0
  6044   0027A6  1A1E               	xorwf	___flge@ff2^0,f,c
  6045   0027A8  0E00               	movlw	0
  6046   0027AA  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6047   0027AC  0E00               	movlw	0
  6048   0027AE  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6049   0027B0  0E80               	movlw	128
  6050   0027B2  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6051   0027B4  501E               	movf	___flge@ff2^0,w,c
  6052   0027B6  5C1A               	subwf	___flge@ff1^0,w,c
  6053   0027B8  501F               	movf	(___flge@ff2+1)^0,w,c
  6054   0027BA  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6055   0027BC  5020               	movf	(___flge@ff2+2)^0,w,c
  6056   0027BE  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6057   0027C0  5021               	movf	(___flge@ff2+3)^0,w,c
  6058   0027C2  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6059   0027C4  B0D8               	btfsc	status,0,c
  6060   0027C6  EFE7  F013         	goto	u2891
  6061   0027CA  EFE9  F013         	goto	u2890
  6062   0027CE                     u2891:
  6063   0027CE  EFEC  F013         	goto	l2836
  6064   0027D2                     u2890:
  6065   0027D2  90D8               	bcf	status,0,c
  6066   0027D4  EFED  F013         	goto	l469
  6067   0027D8                     l2836:
  6068   0027D8  80D8               	bsf	status,0,c
  6069   0027DA                     l469:
  6070   0027DA  0012               	return		;funcret
  6071   0027DC                     __end_of___flge:
  6072                           	callstack 0
  6073                           
  6074 ;; *************** function ___fleq *****************
  6075 ;; Defined at:
  6076 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  ff1             4    0[COMRAM] unsigned char 
  6079 ;;  ff2             4    4[COMRAM] unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;		None
  6082 ;; Return value:  Size  Location     Type
  6083 ;;		None               void
  6084 ;; Registers used:
  6085 ;;		wreg, status,2, status,0
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6091 ;;      Params:         8       0       0       0       0       0       0
  6092 ;;      Locals:         0       0       0       0       0       0       0
  6093 ;;      Temps:          4       0       0       0       0       0       0
  6094 ;;      Totals:        12       0       0       0       0       0       0
  6095 ;;Total ram usage:       12 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_efgtoa
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text20
  6105   002984                     __ptext20:
  6106                           	callstack 0
  6107   002984                     ___fleq:
  6108                           	callstack 26
  6109   002984  0E00               	movlw	0
  6110   002986  1401               	andwf	___fleq@ff1^0,w,c
  6111   002988  6E09               	movwf	??___fleq^0,c
  6112   00298A  0E00               	movlw	0
  6113   00298C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6114   00298E  6E0A               	movwf	(??___fleq+1)^0,c
  6115   002990  0E80               	movlw	128
  6116   002992  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6117   002994  6E0B               	movwf	(??___fleq+2)^0,c
  6118   002996  0E7F               	movlw	127
  6119   002998  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6120   00299A  6E0C               	movwf	(??___fleq+3)^0,c
  6121   00299C  5009               	movf	??___fleq^0,w,c
  6122   00299E  100A               	iorwf	(??___fleq+1)^0,w,c
  6123   0029A0  100B               	iorwf	(??___fleq+2)^0,w,c
  6124   0029A2  100C               	iorwf	(??___fleq+3)^0,w,c
  6125   0029A4  A4D8               	btfss	status,2,c
  6126   0029A6  EFD7  F014         	goto	u2821
  6127   0029AA  EFD9  F014         	goto	u2820
  6128   0029AE                     u2821:
  6129   0029AE  EFE1  F014         	goto	l2806
  6130   0029B2                     u2820:
  6131   0029B2  0E00               	movlw	0
  6132   0029B4  6E01               	movwf	___fleq@ff1^0,c
  6133   0029B6  0E00               	movlw	0
  6134   0029B8  6E02               	movwf	(___fleq@ff1+1)^0,c
  6135   0029BA  0E00               	movlw	0
  6136   0029BC  6E03               	movwf	(___fleq@ff1+2)^0,c
  6137   0029BE  0E00               	movlw	0
  6138   0029C0  6E04               	movwf	(___fleq@ff1+3)^0,c
  6139   0029C2                     l2806:
  6140   0029C2  0E00               	movlw	0
  6141   0029C4  1405               	andwf	___fleq@ff2^0,w,c
  6142   0029C6  6E09               	movwf	??___fleq^0,c
  6143   0029C8  0E00               	movlw	0
  6144   0029CA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6145   0029CC  6E0A               	movwf	(??___fleq+1)^0,c
  6146   0029CE  0E80               	movlw	128
  6147   0029D0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6148   0029D2  6E0B               	movwf	(??___fleq+2)^0,c
  6149   0029D4  0E7F               	movlw	127
  6150   0029D6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6151   0029D8  6E0C               	movwf	(??___fleq+3)^0,c
  6152   0029DA  5009               	movf	??___fleq^0,w,c
  6153   0029DC  100A               	iorwf	(??___fleq+1)^0,w,c
  6154   0029DE  100B               	iorwf	(??___fleq+2)^0,w,c
  6155   0029E0  100C               	iorwf	(??___fleq+3)^0,w,c
  6156   0029E2  A4D8               	btfss	status,2,c
  6157   0029E4  EFF6  F014         	goto	u2831
  6158   0029E8  EFF8  F014         	goto	u2830
  6159   0029EC                     u2831:
  6160   0029EC  EF00  F015         	goto	l2810
  6161   0029F0                     u2830:
  6162   0029F0  0E00               	movlw	0
  6163   0029F2  6E05               	movwf	___fleq@ff2^0,c
  6164   0029F4  0E00               	movlw	0
  6165   0029F6  6E06               	movwf	(___fleq@ff2+1)^0,c
  6166   0029F8  0E00               	movlw	0
  6167   0029FA  6E07               	movwf	(___fleq@ff2+2)^0,c
  6168   0029FC  0E00               	movlw	0
  6169   0029FE  6E08               	movwf	(___fleq@ff2+3)^0,c
  6170   002A00                     l2810:
  6171   002A00  5005               	movf	___fleq@ff2^0,w,c
  6172   002A02  1801               	xorwf	___fleq@ff1^0,w,c
  6173   002A04  E10F               	bnz	u2840
  6174   002A06  5006               	movf	(___fleq@ff2+1)^0,w,c
  6175   002A08  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6176   002A0A  E10C               	bnz	u2840
  6177   002A0C  5007               	movf	(___fleq@ff2+2)^0,w,c
  6178   002A0E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6179   002A10  E109               	bnz	u2840
  6180   002A12  5008               	movf	(___fleq@ff2+3)^0,w,c
  6181   002A14  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6182   002A16  B4D8               	btfsc	status,2,c
  6183   002A18  EF10  F015         	goto	u2841
  6184   002A1C  EF12  F015         	goto	u2840
  6185   002A20                     u2841:
  6186   002A20  EF15  F015         	goto	l2814
  6187   002A24                     u2840:
  6188   002A24  90D8               	bcf	status,0,c
  6189   002A26  EF16  F015         	goto	l458
  6190   002A2A                     l2814:
  6191   002A2A  80D8               	bsf	status,0,c
  6192   002A2C                     l458:
  6193   002A2C  0012               	return		;funcret
  6194   002A2E                     __end_of___fleq:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _OSC_Init *****************
  6198 ;; Defined at:
  6199 ;;		line 7 in file "11.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, status,2
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6213 ;;      Params:         0       0       0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0
  6215 ;;      Temps:          1       0       0       0       0       0       0
  6216 ;;      Totals:         1       0       0       0       0       0       0
  6217 ;;Total ram usage:        1 bytes
  6218 ;; Hardware stack levels used: 1
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text21
  6227   002FBA                     __ptext21:
  6228                           	callstack 0
  6229   002FBA                     _OSC_Init:
  6230                           	callstack 30
  6231   002FBA  8C9B               	bsf	155,6,c	;volatile
  6232   002FBC  50D3               	movf	211,w,c	;volatile
  6233   002FBE  0B8F               	andlw	-113
  6234   002FC0  0960               	iorlw	96
  6235   002FC2  6ED3               	movwf	211,c	;volatile
  6236   002FC4  0EFC               	movlw	-4
  6237   002FC6  16D3               	andwf	211,f,c	;volatile
  6238   002FC8  0E15               	movlw	21
  6239   002FCA  6E01               	movwf	??_OSC_Init^0,c
  6240   002FCC  0EC6               	movlw	198
  6241   002FCE                     u3897:
  6242   002FCE  2EE8               	decfsz	wreg,f,c
  6243   002FD0  D7FE               	bra	u3897
  6244   002FD2  2E01               	decfsz	??_OSC_Init^0,f,c
  6245   002FD4  D7FC               	bra	u3897
  6246   002FD6  D000               	nop2	
  6247   002FD8  0012               	return		;funcret
  6248   002FDA                     __end_of_OSC_Init:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function _Lcd_Write_String *****************
  6252 ;; Defined at:
  6253 ;;		line 55 in file "lcd_i2c.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  str             2    4[COMRAM] PTR const unsigned char 
  6256 ;;		 -> main@buf2(20), main@buf1(20), STR_1(13), 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      void 
  6261 ;; Registers used:
  6262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6268 ;;      Params:         2       0       0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0       0       0
  6271 ;;      Totals:         2       0       0       0       0       0       0
  6272 ;;Total ram usage:        2 bytes
  6273 ;; Hardware stack levels used: 1
  6274 ;; Hardware stack levels required when called: 2
  6275 ;; This function calls:
  6276 ;;		_Lcd_Write_Char
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text22
  6283   002BAA                     __ptext22:
  6284                           	callstack 0
  6285   002BAA                     _Lcd_Write_String:
  6286                           	callstack 28
  6287   002BAA                     
  6288                           ;lcd_i2c.c: 56:     while (*str) Lcd_Write_Char(*str++);
  6289   002BAA  EFEB  F015         	goto	l3448
  6290   002BAE                     l3444:
  6291   002BAE  C005  FFF6         	movff	Lcd_Write_String@str,tblptrl
  6292   002BB2  C006  FFF7         	movff	Lcd_Write_String@str+1,tblptrh
  6293   002BB6  6AF8               	clrf	tblptru,c
  6294   002BB8  0E05               	movlw	(high __ramtop+-1)
  6295   002BBA  64F7               	cpfsgt	tblptrh,c
  6296   002BBC  D003               	bra	u3797
  6297   002BBE  0008               	tblrd		*
  6298   002BC0  50F5               	movf	tablat,w,c
  6299   002BC2  D005               	bra	u3790
  6300   002BC4                     u3797:
  6301   002BC4  CFF6 FFE1          	movff	tblptrl,fsr1l
  6302   002BC8  CFF7 FFE2          	movff	tblptrh,fsr1h
  6303   002BCC  50E7               	movf	indf1,w,c
  6304   002BCE                     u3790:
  6305   002BCE  ECED  F016         	call	_Lcd_Write_Char
  6306   002BD2  4A05               	infsnz	Lcd_Write_String@str^0,f,c
  6307   002BD4  2A06               	incf	(Lcd_Write_String@str+1)^0,f,c
  6308   002BD6                     l3448:
  6309   002BD6  C005  FFF6         	movff	Lcd_Write_String@str,tblptrl
  6310   002BDA  C006  FFF7         	movff	Lcd_Write_String@str+1,tblptrh
  6311   002BDE  6AF8               	clrf	tblptru,c
  6312   002BE0  0E05               	movlw	(high __ramtop+-1)
  6313   002BE2  64F7               	cpfsgt	tblptrh,c
  6314   002BE4  D003               	bra	u3807
  6315   002BE6  0008               	tblrd		*
  6316   002BE8  50F5               	movf	tablat,w,c
  6317   002BEA  D005               	bra	u3800
  6318   002BEC                     u3807:
  6319   002BEC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6320   002BF0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6321   002BF4  50E7               	movf	indf1,w,c
  6322   002BF6                     u3800:
  6323   002BF6  0900               	iorlw	0
  6324   002BF8  A4D8               	btfss	status,2,c
  6325   002BFA  EF01  F016         	goto	u3811
  6326   002BFE  EF03  F016         	goto	u3810
  6327   002C02                     u3811:
  6328   002C02  EFD7  F015         	goto	l3444
  6329   002C06                     u3810:
  6330   002C06  0012               	return		;funcret
  6331   002C08                     __end_of_Lcd_Write_String:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _Lcd_Write_Char *****************
  6335 ;; Defined at:
  6336 ;;		line 43 in file "lcd_i2c.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  c               1    wreg     unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  c               1    1[COMRAM] unsigned char 
  6341 ;;  lo              1    3[COMRAM] unsigned char 
  6342 ;;  hi              1    2[COMRAM] unsigned char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6352 ;;      Params:         0       0       0       0       0       0       0
  6353 ;;      Locals:         3       0       0       0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0
  6355 ;;      Totals:         3       0       0       0       0       0       0
  6356 ;;Total ram usage:        3 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 1
  6359 ;; This function calls:
  6360 ;;		_I2C_Start
  6361 ;;		_I2C_Stop
  6362 ;;		_I2C_Write
  6363 ;; This function is called by:
  6364 ;;		_Lcd_Write_String
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text23
  6369   002DDA                     __ptext23:
  6370                           	callstack 0
  6371   002DDA                     _Lcd_Write_Char:
  6372                           	callstack 28
  6373                           
  6374                           ;incstack = 0
  6375                           ;Lcd_Write_Char@c stored from wreg
  6376   002DDA  6E02               	movwf	Lcd_Write_Char@c^0,c
  6377   002DDC                     
  6378                           ;lcd_i2c.c: 44:     unsigned char hi = c & 0xF0;
  6379   002DDC  5002               	movf	Lcd_Write_Char@c^0,w,c
  6380   002DDE  0BF0               	andlw	240
  6381   002DE0  6E03               	movwf	Lcd_Write_Char@hi^0,c
  6382                           
  6383                           ;lcd_i2c.c: 45:     unsigned char lo = (c << 4) & 0xF0;
  6384   002DE2  3802               	swapf	Lcd_Write_Char@c^0,w,c
  6385   002DE4  0BF0               	andlw	240
  6386   002DE6  0BF0               	andlw	240
  6387   002DE8  6E04               	movwf	Lcd_Write_Char@lo^0,c
  6388   002DEA                     
  6389                           ;lcd_i2c.c: 46:     I2C_Start();
  6390   002DEA  EC1A  F018         	call	_I2C_Start	;wreg free
  6391   002DEE                     
  6392                           ;lcd_i2c.c: 47:     I2C_Write(0x4E);
  6393   002DEE  0E4E               	movlw	78
  6394   002DF0  ECED  F017         	call	_I2C_Write
  6395   002DF4                     
  6396                           ;lcd_i2c.c: 48:     I2C_Write(hi | 0x0D);
  6397   002DF4  5003               	movf	Lcd_Write_Char@hi^0,w,c
  6398   002DF6  090D               	iorlw	13
  6399   002DF8  ECED  F017         	call	_I2C_Write
  6400   002DFC                     
  6401                           ;lcd_i2c.c: 49:     I2C_Write(hi | 0x09);
  6402   002DFC  5003               	movf	Lcd_Write_Char@hi^0,w,c
  6403   002DFE  0909               	iorlw	9
  6404   002E00  ECED  F017         	call	_I2C_Write
  6405   002E04                     
  6406                           ;lcd_i2c.c: 50:     I2C_Write(lo | 0x0D);
  6407   002E04  5004               	movf	Lcd_Write_Char@lo^0,w,c
  6408   002E06  090D               	iorlw	13
  6409   002E08  ECED  F017         	call	_I2C_Write
  6410   002E0C                     
  6411                           ;lcd_i2c.c: 51:     I2C_Write(lo | 0x09);
  6412   002E0C  5004               	movf	Lcd_Write_Char@lo^0,w,c
  6413   002E0E  0909               	iorlw	9
  6414   002E10  ECED  F017         	call	_I2C_Write
  6415   002E14                     
  6416                           ;lcd_i2c.c: 52:     I2C_Stop();
  6417   002E14  EC10  F018         	call	_I2C_Stop	;wreg free
  6418   002E18  0012               	return		;funcret
  6419   002E1A                     __end_of_Lcd_Write_Char:
  6420                           	callstack 0
  6421                           
  6422 ;; *************** function _Lcd_Set_Cursor *****************
  6423 ;; Defined at:
  6424 ;;		line 30 in file "lcd_i2c.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  col             1    wreg     unsigned char 
  6427 ;;  row             1    4[COMRAM] unsigned char 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  col             1    5[COMRAM] unsigned char 
  6430 ;;  addr            1    6[COMRAM] unsigned char 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6440 ;;      Params:         1       0       0       0       0       0       0
  6441 ;;      Locals:         2       0       0       0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0
  6443 ;;      Totals:         3       0       0       0       0       0       0
  6444 ;;Total ram usage:        3 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 2
  6447 ;; This function calls:
  6448 ;;		_Lcd_Cmd
  6449 ;; This function is called by:
  6450 ;;		_main
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text24
  6455   002C08                     __ptext24:
  6456                           	callstack 0
  6457   002C08                     _Lcd_Set_Cursor:
  6458                           	callstack 28
  6459                           
  6460                           ;incstack = 0
  6461                           ;Lcd_Set_Cursor@col stored from wreg
  6462   002C08  6E06               	movwf	Lcd_Set_Cursor@col^0,c
  6463   002C0A                     
  6464                           ;lcd_i2c.c: 31:     unsigned char addr;;lcd_i2c.c: 32:     switch (row) {
  6465   002C0A  EF16  F016         	goto	l3436
  6466   002C0E                     l178:
  6467   002C0E  6A07               	clrf	Lcd_Set_Cursor@addr^0,c
  6468   002C10  EF29  F016         	goto	l3438
  6469   002C14                     l3430:
  6470   002C14  0E40               	movlw	64
  6471   002C16  6E07               	movwf	Lcd_Set_Cursor@addr^0,c
  6472   002C18  EF29  F016         	goto	l3438
  6473   002C1C                     l3432:
  6474   002C1C  0E14               	movlw	20
  6475   002C1E  6E07               	movwf	Lcd_Set_Cursor@addr^0,c
  6476   002C20  EF29  F016         	goto	l3438
  6477   002C24                     l3434:
  6478   002C24  0E54               	movlw	84
  6479   002C26  6E07               	movwf	Lcd_Set_Cursor@addr^0,c
  6480   002C28  EF29  F016         	goto	l3438
  6481   002C2C                     l3436:
  6482   002C2C  5005               	movf	Lcd_Set_Cursor@row^0,w,c
  6483                           
  6484                           ; Switch size 1, requested type "simple"
  6485                           ; Number of cases is 4, Range of values is 1 to 4
  6486                           ; switch strategies available:
  6487                           ; Name         Instructions Cycles
  6488                           ; simple_byte           13     7 (average)
  6489                           ;	Chosen strategy is simple_byte
  6490   002C2E  0A01               	xorlw	1	; case 1
  6491   002C30  B4D8               	btfsc	status,2,c
  6492   002C32  EF07  F016         	goto	l178
  6493   002C36  0A03               	xorlw	3	; case 2
  6494   002C38  B4D8               	btfsc	status,2,c
  6495   002C3A  EF0A  F016         	goto	l3430
  6496   002C3E  0A01               	xorlw	1	; case 3
  6497   002C40  B4D8               	btfsc	status,2,c
  6498   002C42  EF0E  F016         	goto	l3432
  6499   002C46  0A07               	xorlw	7	; case 4
  6500   002C48  B4D8               	btfsc	status,2,c
  6501   002C4A  EF12  F016         	goto	l3434
  6502   002C4E  EF07  F016         	goto	l178
  6503   002C52                     l3438:
  6504                           
  6505                           ;lcd_i2c.c: 39:     addr += col - 1;
  6506   002C52  0406               	decf	Lcd_Set_Cursor@col^0,w,c
  6507   002C54  2607               	addwf	Lcd_Set_Cursor@addr^0,f,c
  6508   002C56                     
  6509                           ;lcd_i2c.c: 40:     Lcd_Cmd(0x80 | addr);
  6510   002C56  5007               	movf	Lcd_Set_Cursor@addr^0,w,c
  6511   002C58  0980               	iorlw	128
  6512   002C5A  EC0D  F017         	call	_Lcd_Cmd
  6513   002C5E  0012               	return		;funcret
  6514   002C60                     __end_of_Lcd_Set_Cursor:
  6515                           	callstack 0
  6516                           
  6517 ;; *************** function _Lcd_Init *****************
  6518 ;; Defined at:
  6519 ;;		line 7 in file "lcd_i2c.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6533 ;;      Params:         0       0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0
  6535 ;;      Temps:          2       0       0       0       0       0       0
  6536 ;;      Totals:         2       0       0       0       0       0       0
  6537 ;;Total ram usage:        2 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; Hardware stack levels required when called: 2
  6540 ;; This function calls:
  6541 ;;		_Lcd_Cmd
  6542 ;; This function is called by:
  6543 ;;		_main
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text25
  6548   002D06                     __ptext25:
  6549                           	callstack 0
  6550   002D06                     _Lcd_Init:
  6551                           	callstack 28
  6552   002D06                     
  6553                           ;lcd_i2c.c: 8:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
  6554   002D06  0E02               	movlw	2
  6555   002D08  6E06               	movwf	(??_Lcd_Init+1)^0,c
  6556   002D0A  0EA0               	movlw	160
  6557   002D0C  6E05               	movwf	??_Lcd_Init^0,c
  6558   002D0E  0E92               	movlw	146
  6559   002D10                     u3907:
  6560   002D10  2EE8               	decfsz	wreg,f,c
  6561   002D12  D7FE               	bra	u3907
  6562   002D14  2E05               	decfsz	??_Lcd_Init^0,f,c
  6563   002D16  D7FC               	bra	u3907
  6564   002D18  2E06               	decfsz	(??_Lcd_Init+1)^0,f,c
  6565   002D1A  D7FA               	bra	u3907
  6566   002D1C  D000               	nop2	
  6567   002D1E                     
  6568                           ;lcd_i2c.c: 9:     Lcd_Cmd(0x33);
  6569   002D1E  0E33               	movlw	51
  6570   002D20  EC0D  F017         	call	_Lcd_Cmd
  6571   002D24                     
  6572                           ;lcd_i2c.c: 10:     Lcd_Cmd(0x32);
  6573   002D24  0E32               	movlw	50
  6574   002D26  EC0D  F017         	call	_Lcd_Cmd
  6575   002D2A                     
  6576                           ;lcd_i2c.c: 11:     Lcd_Cmd(0x28);
  6577   002D2A  0E28               	movlw	40
  6578   002D2C  EC0D  F017         	call	_Lcd_Cmd
  6579   002D30                     
  6580                           ;lcd_i2c.c: 12:     Lcd_Cmd(0x0C);
  6581   002D30  0E0C               	movlw	12
  6582   002D32  EC0D  F017         	call	_Lcd_Cmd
  6583   002D36                     
  6584                           ;lcd_i2c.c: 13:     Lcd_Cmd(0x06);
  6585   002D36  0E06               	movlw	6
  6586   002D38  EC0D  F017         	call	_Lcd_Cmd
  6587   002D3C                     
  6588                           ;lcd_i2c.c: 14:     Lcd_Cmd(0x01);
  6589   002D3C  0E01               	movlw	1
  6590   002D3E  EC0D  F017         	call	_Lcd_Cmd
  6591                           
  6592                           ;lcd_i2c.c: 15:     _delay((unsigned long)((3)*(64000000UL/4000.0)));
  6593   002D42  0E3F               	movlw	63
  6594   002D44  6E05               	movwf	??_Lcd_Init^0,c
  6595   002D46  0E55               	movlw	85
  6596   002D48                     u3917:
  6597   002D48  2EE8               	decfsz	wreg,f,c
  6598   002D4A  D7FE               	bra	u3917
  6599   002D4C  2E05               	decfsz	??_Lcd_Init^0,f,c
  6600   002D4E  D7FC               	bra	u3917
  6601   002D50  0000               	nop	
  6602   002D52  0012               	return		;funcret
  6603   002D54                     __end_of_Lcd_Init:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function _Lcd_Clear *****************
  6607 ;; Defined at:
  6608 ;;		line 59 in file "lcd_i2c.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6622 ;;      Params:         0       0       0       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0
  6624 ;;      Temps:          1       0       0       0       0       0       0
  6625 ;;      Totals:         1       0       0       0       0       0       0
  6626 ;;Total ram usage:        1 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; Hardware stack levels required when called: 2
  6629 ;; This function calls:
  6630 ;;		_Lcd_Cmd
  6631 ;; This function is called by:
  6632 ;;		_main
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text26
  6637   002FF4                     __ptext26:
  6638                           	callstack 0
  6639   002FF4                     _Lcd_Clear:
  6640                           	callstack 28
  6641   002FF4                     
  6642                           ;lcd_i2c.c: 60:     Lcd_Cmd(0x01);
  6643   002FF4  0E01               	movlw	1
  6644   002FF6  EC0D  F017         	call	_Lcd_Cmd
  6645   002FFA                     
  6646                           ;lcd_i2c.c: 61:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
  6647   002FFA  0E2A               	movlw	42
  6648   002FFC  6E05               	movwf	??_Lcd_Clear^0,c
  6649   002FFE  0E8E               	movlw	142
  6650   003000                     u3927:
  6651   003000  2EE8               	decfsz	wreg,f,c
  6652   003002  D7FE               	bra	u3927
  6653   003004  2E05               	decfsz	??_Lcd_Clear^0,f,c
  6654   003006  D7FC               	bra	u3927
  6655   003008  0012               	return		;funcret
  6656   00300A                     __end_of_Lcd_Clear:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _Lcd_Cmd *****************
  6660 ;; Defined at:
  6661 ;;		line 18 in file "lcd_i2c.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  cmd             1    wreg     unsigned char 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  cmd             1    1[COMRAM] unsigned char 
  6666 ;;  lo              1    3[COMRAM] unsigned char 
  6667 ;;  hi              1    2[COMRAM] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6677 ;;      Params:         0       0       0       0       0       0       0
  6678 ;;      Locals:         3       0       0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0
  6680 ;;      Totals:         3       0       0       0       0       0       0
  6681 ;;Total ram usage:        3 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 1
  6684 ;; This function calls:
  6685 ;;		_I2C_Start
  6686 ;;		_I2C_Stop
  6687 ;;		_I2C_Write
  6688 ;; This function is called by:
  6689 ;;		_Lcd_Init
  6690 ;;		_Lcd_Set_Cursor
  6691 ;;		_Lcd_Clear
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text27
  6696   002E1A                     __ptext27:
  6697                           	callstack 0
  6698   002E1A                     _Lcd_Cmd:
  6699                           	callstack 28
  6700                           
  6701                           ;incstack = 0
  6702                           ;Lcd_Cmd@cmd stored from wreg
  6703   002E1A  6E02               	movwf	Lcd_Cmd@cmd^0,c
  6704   002E1C                     
  6705                           ;lcd_i2c.c: 19:     unsigned char hi = cmd & 0xF0;
  6706   002E1C  5002               	movf	Lcd_Cmd@cmd^0,w,c
  6707   002E1E  0BF0               	andlw	240
  6708   002E20  6E03               	movwf	Lcd_Cmd@hi^0,c
  6709                           
  6710                           ;lcd_i2c.c: 20:     unsigned char lo = (cmd << 4) & 0xF0;
  6711   002E22  3802               	swapf	Lcd_Cmd@cmd^0,w,c
  6712   002E24  0BF0               	andlw	240
  6713   002E26  0BF0               	andlw	240
  6714   002E28  6E04               	movwf	Lcd_Cmd@lo^0,c
  6715   002E2A                     
  6716                           ;lcd_i2c.c: 21:     I2C_Start();
  6717   002E2A  EC1A  F018         	call	_I2C_Start	;wreg free
  6718   002E2E                     
  6719                           ;lcd_i2c.c: 22:     I2C_Write(0x4E);
  6720   002E2E  0E4E               	movlw	78
  6721   002E30  ECED  F017         	call	_I2C_Write
  6722   002E34                     
  6723                           ;lcd_i2c.c: 23:     I2C_Write(hi | 0x0C);
  6724   002E34  5003               	movf	Lcd_Cmd@hi^0,w,c
  6725   002E36  090C               	iorlw	12
  6726   002E38  ECED  F017         	call	_I2C_Write
  6727   002E3C                     
  6728                           ;lcd_i2c.c: 24:     I2C_Write(hi | 0x08);
  6729   002E3C  5003               	movf	Lcd_Cmd@hi^0,w,c
  6730   002E3E  0908               	iorlw	8
  6731   002E40  ECED  F017         	call	_I2C_Write
  6732   002E44                     
  6733                           ;lcd_i2c.c: 25:     I2C_Write(lo | 0x0C);
  6734   002E44  5004               	movf	Lcd_Cmd@lo^0,w,c
  6735   002E46  090C               	iorlw	12
  6736   002E48  ECED  F017         	call	_I2C_Write
  6737   002E4C                     
  6738                           ;lcd_i2c.c: 26:     I2C_Write(lo | 0x08);
  6739   002E4C  5004               	movf	Lcd_Cmd@lo^0,w,c
  6740   002E4E  0908               	iorlw	8
  6741   002E50  ECED  F017         	call	_I2C_Write
  6742   002E54                     
  6743                           ;lcd_i2c.c: 27:     I2C_Stop();
  6744   002E54  EC10  F018         	call	_I2C_Stop	;wreg free
  6745   002E58  0012               	return		;funcret
  6746   002E5A                     __end_of_Lcd_Cmd:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function _I2C_Write *****************
  6750 ;; Defined at:
  6751 ;;		line 45 in file "i2c.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  data            1    wreg     unsigned char 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  data            1    0[COMRAM] unsigned char 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  2  148[None  ] short 
  6758 ;; Registers used:
  6759 ;;		wreg
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6765 ;;      Params:         0       0       0       0       0       0       0
  6766 ;;      Locals:         1       0       0       0       0       0       0
  6767 ;;      Temps:          0       0       0       0       0       0       0
  6768 ;;      Totals:         1       0       0       0       0       0       0
  6769 ;;Total ram usage:        1 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_Lcd_Cmd
  6775 ;;		_Lcd_Write_Char
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text28
  6780   002FDA                     __ptext28:
  6781                           	callstack 0
  6782   002FDA                     _I2C_Write:
  6783                           	callstack 28
  6784                           
  6785                           ;incstack = 0
  6786                           ;I2C_Write@data stored from wreg
  6787   002FDA  6E01               	movwf	I2C_Write@data^0,c
  6788   002FDC                     
  6789                           ;i2c.c: 46:     SSP1BUF = data;
  6790   002FDC  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  6791   002FE0                     l149:
  6792   002FE0  A69E               	btfss	158,3,c	;volatile
  6793   002FE2  EFF5  F017         	goto	u3561
  6794   002FE6  EFF7  F017         	goto	u3560
  6795   002FEA                     u3561:
  6796   002FEA  EFF0  F017         	goto	l149
  6797   002FEE                     u3560:
  6798   002FEE                     
  6799                           ;i2c.c: 48:     PIR1bits.SSP1IF = 0;
  6800   002FEE  969E               	bcf	158,3,c	;volatile
  6801                           
  6802                           ;i2c.c: 49:     return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Write is never used
  6803   002FF0  50C5               	movf	197,w,c	;volatile
  6804   002FF2  0012               	return		;funcret
  6805   002FF4                     __end_of_I2C_Write:
  6806                           	callstack 0
  6807                           
  6808 ;; *************** function _I2C_Stop *****************
  6809 ;; Defined at:
  6810 ;;		line 19 in file "i2c.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		None
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6824 ;;      Params:         0       0       0       0       0       0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_Lcd_Cmd
  6834 ;;		_Lcd_Write_Char
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text29
  6839   003020                     __ptext29:
  6840                           	callstack 0
  6841   003020                     _I2C_Stop:
  6842                           	callstack 28
  6843   003020                     
  6844                           ;i2c.c: 20:     SSP1CON2bits.PEN = 1;
  6845   003020  84C5               	bsf	197,2,c	;volatile
  6846   003022                     l125:
  6847   003022  A69E               	btfss	158,3,c	;volatile
  6848   003024  EF16  F018         	goto	u3551
  6849   003028  EF18  F018         	goto	u3550
  6850   00302C                     u3551:
  6851   00302C  EF11  F018         	goto	l125
  6852   003030                     u3550:
  6853   003030                     
  6854                           ;i2c.c: 22:     PIR1bits.SSP1IF = 0;
  6855   003030  969E               	bcf	158,3,c	;volatile
  6856   003032  0012               	return		;funcret
  6857   003034                     __end_of_I2C_Stop:
  6858                           	callstack 0
  6859                           
  6860 ;; *************** function _I2C_Start *****************
  6861 ;; Defined at:
  6862 ;;		line 13 in file "i2c.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		None
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6876 ;;      Params:         0       0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_Lcd_Cmd
  6886 ;;		_Lcd_Write_Char
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text30
  6891   003034                     __ptext30:
  6892                           	callstack 0
  6893   003034                     _I2C_Start:
  6894                           	callstack 28
  6895   003034                     
  6896                           ;i2c.c: 14:     SSP1CON2bits.SEN = 1;
  6897   003034  80C5               	bsf	197,0,c	;volatile
  6898   003036                     l119:
  6899   003036  A69E               	btfss	158,3,c	;volatile
  6900   003038  EF20  F018         	goto	u3541
  6901   00303C  EF22  F018         	goto	u3540
  6902   003040                     u3541:
  6903   003040  EF1B  F018         	goto	l119
  6904   003044                     u3540:
  6905   003044                     
  6906                           ;i2c.c: 16:     PIR1bits.SSP1IF = 0;
  6907   003044  969E               	bcf	158,3,c	;volatile
  6908   003046  0012               	return		;funcret
  6909   003048                     __end_of_I2C_Start:
  6910                           	callstack 0
  6911                           
  6912 ;; *************** function _I2C_Init_Master *****************
  6913 ;; Defined at:
  6914 ;;		line 4 in file "i2c.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  brg             1    wreg     unsigned char 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  brg             1    0[COMRAM] unsigned char 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6928 ;;      Params:         0       0       0       0       0       0       0
  6929 ;;      Locals:         1       0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0
  6931 ;;      Totals:         1       0       0       0       0       0       0
  6932 ;;Total ram usage:        1 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_main
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text31
  6942   00300A                     __ptext31:
  6943                           	callstack 0
  6944   00300A                     _I2C_Init_Master:
  6945                           	callstack 30
  6946                           
  6947                           ;incstack = 0
  6948                           ;I2C_Init_Master@brg stored from wreg
  6949   00300A  6E01               	movwf	I2C_Init_Master@brg^0,c
  6950   00300C                     
  6951                           ;i2c.c: 5:     TRISCbits.TRISC3 = 1;
  6952   00300C  8694               	bsf	148,3,c	;volatile
  6953                           
  6954                           ;i2c.c: 6:     TRISCbits.TRISC4 = 1;
  6955   00300E  8894               	bsf	148,4,c	;volatile
  6956   003010                     
  6957                           ;i2c.c: 7:     SSP1STAT = brg;
  6958   003010  C001  FFC7         	movff	I2C_Init_Master@brg,4039	;volatile
  6959   003014                     
  6960                           ;i2c.c: 8:     SSP1CON1 = 0x28;
  6961   003014  0E28               	movlw	40
  6962   003016  6EC6               	movwf	198,c	;volatile
  6963   003018                     
  6964                           ;i2c.c: 9:     SSP1CON2 = 0x00;
  6965   003018  6AC5               	clrf	197,c	;volatile
  6966   00301A                     
  6967                           ;i2c.c: 10:     SSP1ADD = (64000000UL / (4UL * 100000UL)) - 1;
  6968   00301A  0E9F               	movlw	159
  6969   00301C  6EC8               	movwf	200,c	;volatile
  6970   00301E  0012               	return		;funcret
  6971   003020                     __end_of_I2C_Init_Master:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _DHT11_Read_Data *****************
  6975 ;; Defined at:
  6976 ;;		line 31 in file "dht11.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  tem             1   55[COMRAM] PTR float 
  6979 ;;		 -> main@temp(4), 
  6980 ;;  hum             1   56[COMRAM] PTR float 
  6981 ;;		 -> main@hum(4), 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  i               2   71[COMRAM] int 
  6984 ;;  info           10   61[COMRAM] int [5]
  6985 ;;  sum             2   59[COMRAM] int 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  2   55[COMRAM] short 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6995 ;;      Params:         2       0       0       0       0       0       0
  6996 ;;      Locals:        14       0       0       0       0       0       0
  6997 ;;      Temps:          2       0       0       0       0       0       0
  6998 ;;      Totals:        18       0       0       0       0       0       0
  6999 ;;Total ram usage:       18 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; Hardware stack levels required when called: 1
  7002 ;; This function calls:
  7003 ;;		_DHT11_Read_Byte
  7004 ;;		_DHT11_Response
  7005 ;;		_DHT11_Start
  7006 ;;		___fladd
  7007 ;;		___fldiv
  7008 ;;		___xxtofl
  7009 ;; This function is called by:
  7010 ;;		_main
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text32
  7015   0020B0                     __ptext32:
  7016                           	callstack 0
  7017   0020B0                     _DHT11_Read_Data:
  7018                           	callstack 29
  7019   0020B0                     
  7020                           ;dht11.c: 32:     int info[5];;dht11.c: 33:     DHT11_Start();
  7021   0020B0  ECB7  F017         	call	_DHT11_Start	;wreg free
  7022   0020B4                     
  7023                           ;dht11.c: 34:     DHT11_Response();
  7024   0020B4  ECA1  F017         	call	_DHT11_Response	;wreg free
  7025   0020B8                     
  7026                           ;dht11.c: 35:     for (int i = 0; i < 5; i++) info[i] = DHT11_Read_Byte();
  7027   0020B8  0E00               	movlw	0
  7028   0020BA  6E49               	movwf	(DHT11_Read_Data@i+1)^0,c
  7029   0020BC  0E00               	movlw	0
  7030   0020BE  6E48               	movwf	DHT11_Read_Data@i^0,c
  7031   0020C0                     l3464:
  7032   0020C0  EC69  F015         	call	_DHT11_Read_Byte	;wreg free
  7033   0020C4  5048               	movf	DHT11_Read_Data@i^0,w,c
  7034   0020C6  0D02               	mullw	2
  7035   0020C8  50F3               	movf	243,w,c
  7036   0020CA  0F3E               	addlw	low DHT11_Read_Data@info
  7037   0020CC  6ED9               	movwf	fsr2l,c
  7038   0020CE  6ADA               	clrf	fsr2h,c
  7039   0020D0  C001  FFDE         	movff	?_DHT11_Read_Byte,postinc2
  7040   0020D4  C002  FFDD         	movff	?_DHT11_Read_Byte+1,postdec2
  7041   0020D8  4A48               	infsnz	DHT11_Read_Data@i^0,f,c
  7042   0020DA  2A49               	incf	(DHT11_Read_Data@i+1)^0,f,c
  7043   0020DC  BE49               	btfsc	(DHT11_Read_Data@i+1)^0,7,c
  7044   0020DE  EF7A  F010         	goto	u3821
  7045   0020E2  5049               	movf	(DHT11_Read_Data@i+1)^0,w,c
  7046   0020E4  E109               	bnz	u3820
  7047   0020E6  0E05               	movlw	5
  7048   0020E8  5C48               	subwf	DHT11_Read_Data@i^0,w,c
  7049   0020EA  A0D8               	btfss	status,0,c
  7050   0020EC  EF7A  F010         	goto	u3821
  7051   0020F0  EF7C  F010         	goto	u3820
  7052   0020F4                     u3821:
  7053   0020F4  EF60  F010         	goto	l3464
  7054   0020F8                     u3820:
  7055   0020F8                     
  7056                           ;dht11.c: 36:     *hum = info[0] + info[1] / 10.0f;
  7057   0020F8  C03E  F001         	movff	DHT11_Read_Data@info,___xxtofl@val
  7058   0020FC  C03F  F002         	movff	DHT11_Read_Data@info+1,___xxtofl@val+1
  7059   002100  0E00               	movlw	0
  7060   002102  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7061   002104  0EFF               	movlw	-1
  7062   002106  6E03               	movwf	(___xxtofl@val+2)^0,c
  7063   002108  6E04               	movwf	(___xxtofl@val+3)^0,c
  7064   00210A  0E01               	movlw	1
  7065   00210C  EC3B  F011         	call	___xxtofl
  7066   002110  C001  F028         	movff	?___xxtofl,___fladd@b
  7067   002114  C002  F029         	movff	?___xxtofl+1,___fladd@b+1
  7068   002118  C003  F02A         	movff	?___xxtofl+2,___fladd@b+2
  7069   00211C  C004  F02B         	movff	?___xxtofl+3,___fladd@b+3
  7070   002120  0E00               	movlw	0
  7071   002122  6E13               	movwf	___fldiv@a^0,c
  7072   002124  0E00               	movlw	0
  7073   002126  6E14               	movwf	(___fldiv@a+1)^0,c
  7074   002128  0E20               	movlw	32
  7075   00212A  6E15               	movwf	(___fldiv@a+2)^0,c
  7076   00212C  0E41               	movlw	65
  7077   00212E  6E16               	movwf	(___fldiv@a+3)^0,c
  7078   002130  EE20  F040         	lfsr	2,DHT11_Read_Data@info+2
  7079   002134  CFDE F001          	movff	postinc2,___xxtofl@val
  7080   002138  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7081   00213C  0E00               	movlw	0
  7082   00213E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7083   002140  0EFF               	movlw	-1
  7084   002142  6E03               	movwf	(___xxtofl@val+2)^0,c
  7085   002144  6E04               	movwf	(___xxtofl@val+3)^0,c
  7086   002146  0E01               	movlw	1
  7087   002148  EC3B  F011         	call	___xxtofl
  7088   00214C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7089   002150  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7090   002154  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7091   002158  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7092   00215C  EC81  F00C         	call	___fldiv	;wreg free
  7093   002160  C00F  F02C         	movff	?___fldiv,___fladd@a
  7094   002164  C010  F02D         	movff	?___fldiv+1,___fladd@a+1
  7095   002168  C011  F02E         	movff	?___fldiv+2,___fladd@a+2
  7096   00216C  C012  F02F         	movff	?___fldiv+3,___fladd@a+3
  7097   002170  EC13  F008         	call	___fladd	;wreg free
  7098   002174  5039               	movf	DHT11_Read_Data@hum^0,w,c
  7099   002176  6ED9               	movwf	fsr2l,c
  7100   002178  6ADA               	clrf	fsr2h,c
  7101   00217A  C028  FFDE         	movff	?___fladd,postinc2
  7102   00217E  C029  FFDE         	movff	?___fladd+1,postinc2
  7103   002182  C02A  FFDE         	movff	?___fladd+2,postinc2
  7104   002186  C02B  FFDE         	movff	?___fladd+3,postinc2
  7105                           
  7106                           ;dht11.c: 37:     *tem = info[2] + info[3] / 10.0f;
  7107   00218A  EE20  F042         	lfsr	2,DHT11_Read_Data@info+4
  7108   00218E  CFDE F001          	movff	postinc2,___xxtofl@val
  7109   002192  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7110   002196  0E00               	movlw	0
  7111   002198  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7112   00219A  0EFF               	movlw	-1
  7113   00219C  6E03               	movwf	(___xxtofl@val+2)^0,c
  7114   00219E  6E04               	movwf	(___xxtofl@val+3)^0,c
  7115   0021A0  0E01               	movlw	1
  7116   0021A2  EC3B  F011         	call	___xxtofl
  7117   0021A6  C001  F028         	movff	?___xxtofl,___fladd@b
  7118   0021AA  C002  F029         	movff	?___xxtofl+1,___fladd@b+1
  7119   0021AE  C003  F02A         	movff	?___xxtofl+2,___fladd@b+2
  7120   0021B2  C004  F02B         	movff	?___xxtofl+3,___fladd@b+3
  7121   0021B6  0E00               	movlw	0
  7122   0021B8  6E13               	movwf	___fldiv@a^0,c
  7123   0021BA  0E00               	movlw	0
  7124   0021BC  6E14               	movwf	(___fldiv@a+1)^0,c
  7125   0021BE  0E20               	movlw	32
  7126   0021C0  6E15               	movwf	(___fldiv@a+2)^0,c
  7127   0021C2  0E41               	movlw	65
  7128   0021C4  6E16               	movwf	(___fldiv@a+3)^0,c
  7129   0021C6  EE20  F044         	lfsr	2,DHT11_Read_Data@info+6
  7130   0021CA  CFDE F001          	movff	postinc2,___xxtofl@val
  7131   0021CE  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7132   0021D2  0E00               	movlw	0
  7133   0021D4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7134   0021D6  0EFF               	movlw	-1
  7135   0021D8  6E03               	movwf	(___xxtofl@val+2)^0,c
  7136   0021DA  6E04               	movwf	(___xxtofl@val+3)^0,c
  7137   0021DC  0E01               	movlw	1
  7138   0021DE  EC3B  F011         	call	___xxtofl
  7139   0021E2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7140   0021E6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7141   0021EA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7142   0021EE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7143   0021F2  EC81  F00C         	call	___fldiv	;wreg free
  7144   0021F6  C00F  F02C         	movff	?___fldiv,___fladd@a
  7145   0021FA  C010  F02D         	movff	?___fldiv+1,___fladd@a+1
  7146   0021FE  C011  F02E         	movff	?___fldiv+2,___fladd@a+2
  7147   002202  C012  F02F         	movff	?___fldiv+3,___fladd@a+3
  7148   002206  EC13  F008         	call	___fladd	;wreg free
  7149   00220A  5038               	movf	DHT11_Read_Data@tem^0,w,c
  7150   00220C  6ED9               	movwf	fsr2l,c
  7151   00220E  6ADA               	clrf	fsr2h,c
  7152   002210  C028  FFDE         	movff	?___fladd,postinc2
  7153   002214  C029  FFDE         	movff	?___fladd+1,postinc2
  7154   002218  C02A  FFDE         	movff	?___fladd+2,postinc2
  7155   00221C  C02B  FFDE         	movff	?___fladd+3,postinc2
  7156   002220                     
  7157                           ;dht11.c: 38:     int sum = info[0] + info[1] + info[2] + info[3];
  7158   002220  5042               	movf	(DHT11_Read_Data@info+4)^0,w,c
  7159   002222  2440               	addwf	(DHT11_Read_Data@info+2)^0,w,c
  7160   002224  6E3A               	movwf	??_DHT11_Read_Data^0,c
  7161   002226  5043               	movf	(DHT11_Read_Data@info+5)^0,w,c
  7162   002228  2041               	addwfc	(DHT11_Read_Data@info+3)^0,w,c
  7163   00222A  6E3B               	movwf	(??_DHT11_Read_Data+1)^0,c
  7164   00222C  5044               	movf	(DHT11_Read_Data@info+6)^0,w,c
  7165   00222E  263A               	addwf	??_DHT11_Read_Data^0,f,c
  7166   002230  5045               	movf	(DHT11_Read_Data@info+7)^0,w,c
  7167   002232  223B               	addwfc	(??_DHT11_Read_Data+1)^0,f,c
  7168   002234  503E               	movf	DHT11_Read_Data@info^0,w,c
  7169   002236  243A               	addwf	??_DHT11_Read_Data^0,w,c
  7170   002238  6E3C               	movwf	DHT11_Read_Data@sum^0,c
  7171   00223A  503F               	movf	(DHT11_Read_Data@info+1)^0,w,c
  7172   00223C  203B               	addwfc	(??_DHT11_Read_Data+1)^0,w,c
  7173   00223E  6E3D               	movwf	(DHT11_Read_Data@sum+1)^0,c
  7174   002240                     
  7175                           ;dht11.c: 39:     return ((sum & 0xFF) == info[4]) ? 0 : -1;
  7176   002240  0EFF               	movlw	255
  7177   002242  143C               	andwf	DHT11_Read_Data@sum^0,w,c
  7178   002244  6E3A               	movwf	??_DHT11_Read_Data^0,c
  7179   002246  0E00               	movlw	0
  7180   002248  143D               	andwf	(DHT11_Read_Data@sum+1)^0,w,c
  7181   00224A  6E3B               	movwf	(??_DHT11_Read_Data+1)^0,c
  7182   00224C  5046               	movf	(DHT11_Read_Data@info+8)^0,w,c
  7183   00224E  183A               	xorwf	??_DHT11_Read_Data^0,w,c
  7184   002250  E109               	bnz	u3830
  7185   002252  5047               	movf	(DHT11_Read_Data@info+9)^0,w,c
  7186   002254  183B               	xorwf	(??_DHT11_Read_Data+1)^0,w,c
  7187   002256  B4D8               	btfsc	status,2,c
  7188   002258  EF30  F011         	goto	u3831
  7189   00225C  EF32  F011         	goto	u3830
  7190   002260                     u3831:
  7191   002260  EF36  F011         	goto	l3478
  7192   002264                     u3830:
  7193   002264  6838               	setf	?_DHT11_Read_Data^0,c
  7194   002266  6839               	setf	(?_DHT11_Read_Data+1)^0,c
  7195   002268  EF3A  F011         	goto	l97
  7196   00226C                     l3478:
  7197   00226C  0E00               	movlw	0
  7198   00226E  6E39               	movwf	(?_DHT11_Read_Data+1)^0,c
  7199   002270  0E00               	movlw	0
  7200   002272  6E38               	movwf	?_DHT11_Read_Data^0,c
  7201   002274                     l97:
  7202   002274  0012               	return		;funcret
  7203   002276                     __end_of_DHT11_Read_Data:
  7204                           	callstack 0
  7205                           
  7206 ;; *************** function ___xxtofl *****************
  7207 ;; Defined at:
  7208 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  sign            1    wreg     unsigned char 
  7211 ;;  val             4    0[COMRAM] long 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  sign            1    8[COMRAM] unsigned char 
  7214 ;;  arg             4   10[COMRAM] unsigned long 
  7215 ;;  exp             1    9[COMRAM] unsigned char 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  4    0[COMRAM] unsigned char 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7225 ;;      Params:         4       0       0       0       0       0       0
  7226 ;;      Locals:         6       0       0       0       0       0       0
  7227 ;;      Temps:          4       0       0       0       0       0       0
  7228 ;;      Totals:        14       0       0       0       0       0       0
  7229 ;;Total ram usage:       14 bytes
  7230 ;; Hardware stack levels used: 1
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_DHT11_Read_Data
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text33
  7239   002276                     __ptext33:
  7240                           	callstack 0
  7241   002276                     ___xxtofl:
  7242                           	callstack 29
  7243                           
  7244                           ;incstack = 0
  7245                           ;___xxtofl@sign stored from wreg
  7246   002276  6E09               	movwf	___xxtofl@sign^0,c
  7247   002278  5009               	movf	___xxtofl@sign^0,w,c
  7248   00227A  B4D8               	btfsc	status,2,c
  7249   00227C  EF42  F011         	goto	u3681
  7250   002280  EF44  F011         	goto	u3680
  7251   002284                     u3681:
  7252   002284  EF66  F011         	goto	l854
  7253   002288                     u3680:
  7254   002288  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7255   00228A  EF4B  F011         	goto	u3690
  7256   00228E  EF49  F011         	goto	u3691
  7257   002292                     u3691:
  7258   002292  EF66  F011         	goto	l854
  7259   002296                     u3690:
  7260   002296  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7261   00229A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7262   00229E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7263   0022A2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7264   0022A6  1E05               	comf	??___xxtofl^0,f,c
  7265   0022A8  1E06               	comf	(??___xxtofl+1)^0,f,c
  7266   0022AA  1E07               	comf	(??___xxtofl+2)^0,f,c
  7267   0022AC  1E08               	comf	(??___xxtofl+3)^0,f,c
  7268   0022AE  2A05               	incf	??___xxtofl^0,f,c
  7269   0022B0  0E00               	movlw	0
  7270   0022B2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7271   0022B4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7272   0022B6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7273   0022B8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7274   0022BC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7275   0022C0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7276   0022C4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7277   0022C8  EF6E  F011         	goto	l3348
  7278   0022CC                     l854:
  7279   0022CC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7280   0022D0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7281   0022D4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7282   0022D8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7283   0022DC                     l3348:
  7284   0022DC  5001               	movf	___xxtofl@val^0,w,c
  7285   0022DE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7286   0022E0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7287   0022E2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7288   0022E4  A4D8               	btfss	status,2,c
  7289   0022E6  EF77  F011         	goto	u3701
  7290   0022EA  EF79  F011         	goto	u3700
  7291   0022EE                     u3701:
  7292   0022EE  EF83  F011         	goto	l3354
  7293   0022F2                     u3700:
  7294   0022F2  0E00               	movlw	0
  7295   0022F4  6E01               	movwf	?___xxtofl^0,c
  7296   0022F6  0E00               	movlw	0
  7297   0022F8  6E02               	movwf	(?___xxtofl+1)^0,c
  7298   0022FA  0E00               	movlw	0
  7299   0022FC  6E03               	movwf	(?___xxtofl+2)^0,c
  7300   0022FE  0E00               	movlw	0
  7301   002300  6E04               	movwf	(?___xxtofl+3)^0,c
  7302   002302  EF14  F012         	goto	l857
  7303   002306                     l3354:
  7304   002306  0E96               	movlw	150
  7305   002308  6E0A               	movwf	___xxtofl@exp^0,c
  7306   00230A  EF8D  F011         	goto	l3358
  7307   00230E                     l3356:
  7308   00230E  2A0A               	incf	___xxtofl@exp^0,f,c
  7309   002310  90D8               	bcf	status,0,c
  7310   002312  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7311   002314  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7312   002316  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7313   002318  320B               	rrcf	___xxtofl@arg^0,f,c
  7314   00231A                     l3358:
  7315   00231A  0E00               	movlw	0
  7316   00231C  140B               	andwf	___xxtofl@arg^0,w,c
  7317   00231E  6E05               	movwf	??___xxtofl^0,c
  7318   002320  0E00               	movlw	0
  7319   002322  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7320   002324  6E06               	movwf	(??___xxtofl+1)^0,c
  7321   002326  0E00               	movlw	0
  7322   002328  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7323   00232A  6E07               	movwf	(??___xxtofl+2)^0,c
  7324   00232C  0EFE               	movlw	254
  7325   00232E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7326   002330  6E08               	movwf	(??___xxtofl+3)^0,c
  7327   002332  5005               	movf	??___xxtofl^0,w,c
  7328   002334  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7329   002336  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7330   002338  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7331   00233A  A4D8               	btfss	status,2,c
  7332   00233C  EFA2  F011         	goto	u3711
  7333   002340  EFA4  F011         	goto	u3710
  7334   002344                     u3711:
  7335   002344  EF87  F011         	goto	l3356
  7336   002348                     u3710:
  7337   002348  EFB2  F011         	goto	l861
  7338   00234C                     l3360:
  7339   00234C  2A0A               	incf	___xxtofl@exp^0,f,c
  7340   00234E  0E01               	movlw	1
  7341   002350  260B               	addwf	___xxtofl@arg^0,f,c
  7342   002352  0E00               	movlw	0
  7343   002354  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7344   002356  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7345   002358  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7346   00235A  90D8               	bcf	status,0,c
  7347   00235C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7348   00235E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7349   002360  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7350   002362  320B               	rrcf	___xxtofl@arg^0,f,c
  7351   002364                     l861:
  7352   002364  0E00               	movlw	0
  7353   002366  140B               	andwf	___xxtofl@arg^0,w,c
  7354   002368  6E05               	movwf	??___xxtofl^0,c
  7355   00236A  0E00               	movlw	0
  7356   00236C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7357   00236E  6E06               	movwf	(??___xxtofl+1)^0,c
  7358   002370  0E00               	movlw	0
  7359   002372  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7360   002374  6E07               	movwf	(??___xxtofl+2)^0,c
  7361   002376  0EFF               	movlw	255
  7362   002378  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7363   00237A  6E08               	movwf	(??___xxtofl+3)^0,c
  7364   00237C  5005               	movf	??___xxtofl^0,w,c
  7365   00237E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7366   002380  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7367   002382  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7368   002384  A4D8               	btfss	status,2,c
  7369   002386  EFC7  F011         	goto	u3721
  7370   00238A  EFC9  F011         	goto	u3720
  7371   00238E                     u3721:
  7372   00238E  EFA6  F011         	goto	l3360
  7373   002392                     u3720:
  7374   002392  EFD1  F011         	goto	l3368
  7375   002396                     l3366:
  7376   002396  060A               	decf	___xxtofl@exp^0,f,c
  7377   002398  90D8               	bcf	status,0,c
  7378   00239A  360B               	rlcf	___xxtofl@arg^0,f,c
  7379   00239C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7380   00239E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7381   0023A0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7382   0023A2                     l3368:
  7383   0023A2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7384   0023A4  EFD6  F011         	goto	u3731
  7385   0023A8  EFD8  F011         	goto	u3730
  7386   0023AC                     u3731:
  7387   0023AC  EFE0  F011         	goto	l868
  7388   0023B0                     u3730:
  7389   0023B0  0E02               	movlw	2
  7390   0023B2  600A               	cpfslt	___xxtofl@exp^0,c
  7391   0023B4  EFDE  F011         	goto	u3741
  7392   0023B8  EFE0  F011         	goto	u3740
  7393   0023BC                     u3741:
  7394   0023BC  EFCB  F011         	goto	l3366
  7395   0023C0                     u3740:
  7396   0023C0                     l868:
  7397   0023C0  B00A               	btfsc	___xxtofl@exp^0,0,c
  7398   0023C2  EFE5  F011         	goto	u3751
  7399   0023C6  EFE7  F011         	goto	u3750
  7400   0023CA                     u3751:
  7401   0023CA  EFE8  F011         	goto	l3374
  7402   0023CE                     u3750:
  7403   0023CE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7404   0023D0                     l3374:
  7405   0023D0  90D8               	bcf	status,0,c
  7406   0023D2  320A               	rrcf	___xxtofl@exp^0,f,c
  7407   0023D4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7408   0023D8  6A06               	clrf	(??___xxtofl+1)^0,c
  7409   0023DA  6A07               	clrf	(??___xxtofl+2)^0,c
  7410   0023DC  6A08               	clrf	(??___xxtofl+3)^0,c
  7411   0023DE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7412   0023E2  6A07               	clrf	(??___xxtofl+2)^0,c
  7413   0023E4  6A06               	clrf	(??___xxtofl+1)^0,c
  7414   0023E6  6A05               	clrf	??___xxtofl^0,c
  7415   0023E8  5005               	movf	??___xxtofl^0,w,c
  7416   0023EA  120B               	iorwf	___xxtofl@arg^0,f,c
  7417   0023EC  5006               	movf	(??___xxtofl+1)^0,w,c
  7418   0023EE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7419   0023F0  5007               	movf	(??___xxtofl+2)^0,w,c
  7420   0023F2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7421   0023F4  5008               	movf	(??___xxtofl+3)^0,w,c
  7422   0023F6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7423   0023F8  5009               	movf	___xxtofl@sign^0,w,c
  7424   0023FA  B4D8               	btfsc	status,2,c
  7425   0023FC  EF02  F012         	goto	u3761
  7426   002400  EF04  F012         	goto	u3760
  7427   002404                     u3761:
  7428   002404  EF0C  F012         	goto	l3384
  7429   002408                     u3760:
  7430   002408  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7431   00240A  EF0B  F012         	goto	u3770
  7432   00240E  EF09  F012         	goto	u3771
  7433   002412                     u3771:
  7434   002412  EF0C  F012         	goto	l3384
  7435   002416                     u3770:
  7436   002416  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7437   002418                     l3384:
  7438   002418  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7439   00241C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7440   002420  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7441   002424  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7442   002428                     l857:
  7443   002428  0012               	return		;funcret
  7444   00242A                     __end_of___xxtofl:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function ___fldiv *****************
  7448 ;; Defined at:
  7449 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  b               4   14[COMRAM] unsigned char 
  7452 ;;  a               4   18[COMRAM] unsigned char 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  grs             4   33[COMRAM] unsigned long 
  7455 ;;  rem             4   26[COMRAM] unsigned long 
  7456 ;;  new_exp         2   31[COMRAM] short 
  7457 ;;  aexp            1   38[COMRAM] unsigned char 
  7458 ;;  bexp            1   37[COMRAM] unsigned char 
  7459 ;;  sign            1   30[COMRAM] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  4   14[COMRAM] unsigned char 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7469 ;;      Params:         8       0       0       0       0       0       0
  7470 ;;      Locals:        13       0       0       0       0       0       0
  7471 ;;      Temps:          4       0       0       0       0       0       0
  7472 ;;      Totals:        25       0       0       0       0       0       0
  7473 ;;Total ram usage:       25 bytes
  7474 ;; Hardware stack levels used: 1
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_DHT11_Read_Data
  7479 ;;		_efgtoa
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text34
  7484   001902                     __ptext34:
  7485                           	callstack 0
  7486   001902                     ___fldiv:
  7487                           	callstack 26
  7488   001902  5012               	movf	(___fldiv@b+3)^0,w,c
  7489   001904  0B80               	andlw	128
  7490   001906  6E1F               	movwf	___fldiv@sign^0,c
  7491   001908  5012               	movf	(___fldiv@b+3)^0,w,c
  7492   00190A  2412               	addwf	(___fldiv@b+3)^0,w,c
  7493   00190C  6E26               	movwf	___fldiv@bexp^0,c
  7494   00190E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7495   001910  EF8C  F00C         	goto	u2401
  7496   001914  EF8E  F00C         	goto	u2400
  7497   001918                     u2401:
  7498   001918  EF8F  F00C         	goto	l2538
  7499   00191C                     u2400:
  7500   00191C  8026               	bsf	___fldiv@bexp^0,0,c
  7501   00191E                     l2538:
  7502   00191E  5026               	movf	___fldiv@bexp^0,w,c
  7503   001920  B4D8               	btfsc	status,2,c
  7504   001922  EF95  F00C         	goto	u2411
  7505   001926  EF97  F00C         	goto	u2410
  7506   00192A                     u2411:
  7507   00192A  EFAB  F00C         	goto	l2548
  7508   00192E                     u2410:
  7509   00192E  2826               	incf	___fldiv@bexp^0,w,c
  7510   001930  A4D8               	btfss	status,2,c
  7511   001932  EF9D  F00C         	goto	u2421
  7512   001936  EF9F  F00C         	goto	u2420
  7513   00193A                     u2421:
  7514   00193A  EFA7  F00C         	goto	l2544
  7515   00193E                     u2420:
  7516   00193E  0E00               	movlw	0
  7517   001940  6E0F               	movwf	___fldiv@b^0,c
  7518   001942  0E00               	movlw	0
  7519   001944  6E10               	movwf	(___fldiv@b+1)^0,c
  7520   001946  0E00               	movlw	0
  7521   001948  6E11               	movwf	(___fldiv@b+2)^0,c
  7522   00194A  0E00               	movlw	0
  7523   00194C  6E12               	movwf	(___fldiv@b+3)^0,c
  7524   00194E                     l2544:
  7525   00194E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7526   001950  6A12               	clrf	(___fldiv@b+3)^0,c
  7527   001952  EFB3  F00C         	goto	l2550
  7528   001956                     l2548:
  7529   001956  0E00               	movlw	0
  7530   001958  6E0F               	movwf	___fldiv@b^0,c
  7531   00195A  0E00               	movlw	0
  7532   00195C  6E10               	movwf	(___fldiv@b+1)^0,c
  7533   00195E  0E00               	movlw	0
  7534   001960  6E11               	movwf	(___fldiv@b+2)^0,c
  7535   001962  0E00               	movlw	0
  7536   001964  6E12               	movwf	(___fldiv@b+3)^0,c
  7537   001966                     l2550:
  7538   001966  5016               	movf	(___fldiv@a+3)^0,w,c
  7539   001968  0B80               	andlw	128
  7540   00196A  1A1F               	xorwf	___fldiv@sign^0,f,c
  7541   00196C  5016               	movf	(___fldiv@a+3)^0,w,c
  7542   00196E  2416               	addwf	(___fldiv@a+3)^0,w,c
  7543   001970  6E27               	movwf	___fldiv@aexp^0,c
  7544   001972  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7545   001974  EFBE  F00C         	goto	u2431
  7546   001978  EFC0  F00C         	goto	u2430
  7547   00197C                     u2431:
  7548   00197C  EFC1  F00C         	goto	l2558
  7549   001980                     u2430:
  7550   001980  8027               	bsf	___fldiv@aexp^0,0,c
  7551   001982                     l2558:
  7552   001982  5027               	movf	___fldiv@aexp^0,w,c
  7553   001984  B4D8               	btfsc	status,2,c
  7554   001986  EFC7  F00C         	goto	u2441
  7555   00198A  EFC9  F00C         	goto	u2440
  7556   00198E                     u2441:
  7557   00198E  EFDD  F00C         	goto	l2568
  7558   001992                     u2440:
  7559   001992  2827               	incf	___fldiv@aexp^0,w,c
  7560   001994  A4D8               	btfss	status,2,c
  7561   001996  EFCF  F00C         	goto	u2451
  7562   00199A  EFD1  F00C         	goto	u2450
  7563   00199E                     u2451:
  7564   00199E  EFD9  F00C         	goto	l2564
  7565   0019A2                     u2450:
  7566   0019A2  0E00               	movlw	0
  7567   0019A4  6E13               	movwf	___fldiv@a^0,c
  7568   0019A6  0E00               	movlw	0
  7569   0019A8  6E14               	movwf	(___fldiv@a+1)^0,c
  7570   0019AA  0E00               	movlw	0
  7571   0019AC  6E15               	movwf	(___fldiv@a+2)^0,c
  7572   0019AE  0E00               	movlw	0
  7573   0019B0  6E16               	movwf	(___fldiv@a+3)^0,c
  7574   0019B2                     l2564:
  7575   0019B2  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7576   0019B4  6A16               	clrf	(___fldiv@a+3)^0,c
  7577   0019B6  EFE5  F00C         	goto	l2570
  7578   0019BA                     l2568:
  7579   0019BA  0E00               	movlw	0
  7580   0019BC  6E13               	movwf	___fldiv@a^0,c
  7581   0019BE  0E00               	movlw	0
  7582   0019C0  6E14               	movwf	(___fldiv@a+1)^0,c
  7583   0019C2  0E00               	movlw	0
  7584   0019C4  6E15               	movwf	(___fldiv@a+2)^0,c
  7585   0019C6  0E00               	movlw	0
  7586   0019C8  6E16               	movwf	(___fldiv@a+3)^0,c
  7587   0019CA                     l2570:
  7588   0019CA  5013               	movf	___fldiv@a^0,w,c
  7589   0019CC  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7590   0019CE  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7591   0019D0  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7592   0019D2  A4D8               	btfss	status,2,c
  7593   0019D4  EFEE  F00C         	goto	u2461
  7594   0019D8  EFF0  F00C         	goto	u2460
  7595   0019DC                     u2461:
  7596   0019DC  EF08  F00D         	goto	l2582
  7597   0019E0                     u2460:
  7598   0019E0  0E00               	movlw	0
  7599   0019E2  6E0F               	movwf	___fldiv@b^0,c
  7600   0019E4  0E00               	movlw	0
  7601   0019E6  6E10               	movwf	(___fldiv@b+1)^0,c
  7602   0019E8  0E00               	movlw	0
  7603   0019EA  6E11               	movwf	(___fldiv@b+2)^0,c
  7604   0019EC  0E00               	movlw	0
  7605   0019EE  6E12               	movwf	(___fldiv@b+3)^0,c
  7606   0019F0  0E80               	movlw	128
  7607   0019F2  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7608   0019F4  0E7F               	movlw	127
  7609   0019F6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7610   0019F8                     l2576:
  7611   0019F8  501F               	movf	___fldiv@sign^0,w,c
  7612   0019FA  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7613   0019FC  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7614   001A00  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7615   001A04  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7616   001A08  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7617   001A0C  EF48  F00E         	goto	l781
  7618   001A10                     l2582:
  7619   001A10  5026               	movf	___fldiv@bexp^0,w,c
  7620   001A12  A4D8               	btfss	status,2,c
  7621   001A14  EF0E  F00D         	goto	u2471
  7622   001A18  EF10  F00D         	goto	u2470
  7623   001A1C                     u2471:
  7624   001A1C  EF1A  F00D         	goto	l2590
  7625   001A20                     u2470:
  7626   001A20  0E00               	movlw	0
  7627   001A22  6E0F               	movwf	?___fldiv^0,c
  7628   001A24  0E00               	movlw	0
  7629   001A26  6E10               	movwf	(?___fldiv+1)^0,c
  7630   001A28  0E00               	movlw	0
  7631   001A2A  6E11               	movwf	(?___fldiv+2)^0,c
  7632   001A2C  0E00               	movlw	0
  7633   001A2E  6E12               	movwf	(?___fldiv+3)^0,c
  7634   001A30  EF48  F00E         	goto	l781
  7635   001A34                     l2590:
  7636   001A34  5027               	movf	___fldiv@aexp^0,w,c
  7637   001A36  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7638   001A3A  6A18               	clrf	(??___fldiv+1)^0,c
  7639   001A3C  5E17               	subwf	??___fldiv^0,f,c
  7640   001A3E  0E00               	movlw	0
  7641   001A40  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7642   001A42  0E7F               	movlw	127
  7643   001A44  2417               	addwf	??___fldiv^0,w,c
  7644   001A46  6E20               	movwf	___fldiv@new_exp^0,c
  7645   001A48  0E00               	movlw	0
  7646   001A4A  2018               	addwfc	(??___fldiv+1)^0,w,c
  7647   001A4C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7648   001A4E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7649   001A52  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7650   001A56  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7651   001A5A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7652   001A5E  0E00               	movlw	0
  7653   001A60  6E0F               	movwf	___fldiv@b^0,c
  7654   001A62  0E00               	movlw	0
  7655   001A64  6E10               	movwf	(___fldiv@b+1)^0,c
  7656   001A66  0E00               	movlw	0
  7657   001A68  6E11               	movwf	(___fldiv@b+2)^0,c
  7658   001A6A  0E00               	movlw	0
  7659   001A6C  6E12               	movwf	(___fldiv@b+3)^0,c
  7660   001A6E  0E00               	movlw	0
  7661   001A70  6E22               	movwf	___fldiv@grs^0,c
  7662   001A72  0E00               	movlw	0
  7663   001A74  6E23               	movwf	(___fldiv@grs+1)^0,c
  7664   001A76  0E00               	movlw	0
  7665   001A78  6E24               	movwf	(___fldiv@grs+2)^0,c
  7666   001A7A  0E00               	movlw	0
  7667   001A7C  6E25               	movwf	(___fldiv@grs+3)^0,c
  7668   001A7E  6A27               	clrf	___fldiv@aexp^0,c
  7669   001A80  EF7A  F00D         	goto	l783
  7670   001A84                     l2600:
  7671   001A84  5027               	movf	___fldiv@aexp^0,w,c
  7672   001A86  B4D8               	btfsc	status,2,c
  7673   001A88  EF48  F00D         	goto	u2481
  7674   001A8C  EF4A  F00D         	goto	u2480
  7675   001A90                     u2481:
  7676   001A90  EF61  F00D         	goto	l2608
  7677   001A94                     u2480:
  7678   001A94  90D8               	bcf	status,0,c
  7679   001A96  361B               	rlcf	___fldiv@rem^0,f,c
  7680   001A98  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7681   001A9A  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7682   001A9C  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7683   001A9E  90D8               	bcf	status,0,c
  7684   001AA0  360F               	rlcf	___fldiv@b^0,f,c
  7685   001AA2  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7686   001AA4  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7687   001AA6  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7688   001AA8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7689   001AAA  EF59  F00D         	goto	u2491
  7690   001AAE  EF5B  F00D         	goto	u2490
  7691   001AB2                     u2491:
  7692   001AB2  EF5C  F00D         	goto	l786
  7693   001AB6                     u2490:
  7694   001AB6  800F               	bsf	___fldiv@b^0,0,c
  7695   001AB8                     l786:
  7696   001AB8  90D8               	bcf	status,0,c
  7697   001ABA  3622               	rlcf	___fldiv@grs^0,f,c
  7698   001ABC  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7699   001ABE  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7700   001AC0  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7701   001AC2                     l2608:
  7702   001AC2  5013               	movf	___fldiv@a^0,w,c
  7703   001AC4  5C1B               	subwf	___fldiv@rem^0,w,c
  7704   001AC6  5014               	movf	(___fldiv@a+1)^0,w,c
  7705   001AC8  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7706   001ACA  5015               	movf	(___fldiv@a+2)^0,w,c
  7707   001ACC  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7708   001ACE  5016               	movf	(___fldiv@a+3)^0,w,c
  7709   001AD0  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7710   001AD2  A0D8               	btfss	status,0,c
  7711   001AD4  EF6E  F00D         	goto	u2501
  7712   001AD8  EF70  F00D         	goto	u2500
  7713   001ADC                     u2501:
  7714   001ADC  EF79  F00D         	goto	l2614
  7715   001AE0                     u2500:
  7716   001AE0  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7717   001AE2  5013               	movf	___fldiv@a^0,w,c
  7718   001AE4  5E1B               	subwf	___fldiv@rem^0,f,c
  7719   001AE6  5014               	movf	(___fldiv@a+1)^0,w,c
  7720   001AE8  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7721   001AEA  5015               	movf	(___fldiv@a+2)^0,w,c
  7722   001AEC  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7723   001AEE  5016               	movf	(___fldiv@a+3)^0,w,c
  7724   001AF0  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7725   001AF2                     l2614:
  7726   001AF2  2A27               	incf	___fldiv@aexp^0,f,c
  7727   001AF4                     l783:
  7728   001AF4  0E19               	movlw	25
  7729   001AF6  6427               	cpfsgt	___fldiv@aexp^0,c
  7730   001AF8  EF80  F00D         	goto	u2511
  7731   001AFC  EF82  F00D         	goto	u2510
  7732   001B00                     u2511:
  7733   001B00  EF42  F00D         	goto	l2600
  7734   001B04                     u2510:
  7735   001B04  501B               	movf	___fldiv@rem^0,w,c
  7736   001B06  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7737   001B08  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7738   001B0A  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7739   001B0C  B4D8               	btfsc	status,2,c
  7740   001B0E  EF8B  F00D         	goto	u2521
  7741   001B12  EF8D  F00D         	goto	u2520
  7742   001B16                     u2521:
  7743   001B16  EFA5  F00D         	goto	l2626
  7744   001B1A                     u2520:
  7745   001B1A  8022               	bsf	___fldiv@grs^0,0,c
  7746   001B1C  EFA5  F00D         	goto	l2626
  7747   001B20                     l2620:
  7748   001B20  90D8               	bcf	status,0,c
  7749   001B22  360F               	rlcf	___fldiv@b^0,f,c
  7750   001B24  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7751   001B26  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7752   001B28  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7753   001B2A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7754   001B2C  EF9A  F00D         	goto	u2531
  7755   001B30  EF9C  F00D         	goto	u2530
  7756   001B34                     u2531:
  7757   001B34  EF9D  F00D         	goto	l792
  7758   001B38                     u2530:
  7759   001B38  800F               	bsf	___fldiv@b^0,0,c
  7760   001B3A                     l792:
  7761   001B3A  90D8               	bcf	status,0,c
  7762   001B3C  3622               	rlcf	___fldiv@grs^0,f,c
  7763   001B3E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7764   001B40  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7765   001B42  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7766   001B44  0620               	decf	___fldiv@new_exp^0,f,c
  7767   001B46  A0D8               	btfss	status,0,c
  7768   001B48  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7769   001B4A                     l2626:
  7770   001B4A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7771   001B4C  EFAA  F00D         	goto	u2541
  7772   001B50  EFAC  F00D         	goto	u2540
  7773   001B54                     u2541:
  7774   001B54  EF90  F00D         	goto	l2620
  7775   001B58                     u2540:
  7776   001B58  6A27               	clrf	___fldiv@aexp^0,c
  7777   001B5A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7778   001B5C  EFB2  F00D         	goto	u2551
  7779   001B60  EFB4  F00D         	goto	u2550
  7780   001B64                     u2551:
  7781   001B64  EFD8  F00D         	goto	l794
  7782   001B68                     u2550:
  7783   001B68  0EFF               	movlw	255
  7784   001B6A  1422               	andwf	___fldiv@grs^0,w,c
  7785   001B6C  6E17               	movwf	??___fldiv^0,c
  7786   001B6E  0EFF               	movlw	255
  7787   001B70  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7788   001B72  6E18               	movwf	(??___fldiv+1)^0,c
  7789   001B74  0EFF               	movlw	255
  7790   001B76  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7791   001B78  6E19               	movwf	(??___fldiv+2)^0,c
  7792   001B7A  0E7F               	movlw	127
  7793   001B7C  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7794   001B7E  6E1A               	movwf	(??___fldiv+3)^0,c
  7795   001B80  5017               	movf	??___fldiv^0,w,c
  7796   001B82  1018               	iorwf	(??___fldiv+1)^0,w,c
  7797   001B84  1019               	iorwf	(??___fldiv+2)^0,w,c
  7798   001B86  101A               	iorwf	(??___fldiv+3)^0,w,c
  7799   001B88  B4D8               	btfsc	status,2,c
  7800   001B8A  EFC9  F00D         	goto	u2561
  7801   001B8E  EFCB  F00D         	goto	u2560
  7802   001B92                     u2561:
  7803   001B92  EFCF  F00D         	goto	l795
  7804   001B96                     u2560:
  7805   001B96                     l2630:
  7806   001B96  0E01               	movlw	1
  7807   001B98  6E27               	movwf	___fldiv@aexp^0,c
  7808   001B9A  EFD8  F00D         	goto	l794
  7809   001B9E                     l795:
  7810   001B9E  A00F               	btfss	___fldiv@b^0,0,c
  7811   001BA0  EFD4  F00D         	goto	u2571
  7812   001BA4  EFD6  F00D         	goto	u2570
  7813   001BA8                     u2571:
  7814   001BA8  EFD8  F00D         	goto	l794
  7815   001BAC                     u2570:
  7816   001BAC  EFCB  F00D         	goto	l2630
  7817   001BB0                     l794:
  7818   001BB0  5027               	movf	___fldiv@aexp^0,w,c
  7819   001BB2  B4D8               	btfsc	status,2,c
  7820   001BB4  EFDE  F00D         	goto	u2581
  7821   001BB8  EFE0  F00D         	goto	u2580
  7822   001BBC                     u2581:
  7823   001BBC  EF04  F00E         	goto	l2642
  7824   001BC0                     u2580:
  7825   001BC0  0E01               	movlw	1
  7826   001BC2  260F               	addwf	___fldiv@b^0,f,c
  7827   001BC4  0E00               	movlw	0
  7828   001BC6  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7829   001BC8  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7830   001BCA  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7831   001BCC  A012               	btfss	(___fldiv@b+3)^0,0,c
  7832   001BCE  EFEB  F00D         	goto	u2591
  7833   001BD2  EFED  F00D         	goto	u2590
  7834   001BD6                     u2591:
  7835   001BD6  EF04  F00E         	goto	l2642
  7836   001BDA                     u2590:
  7837   001BDA  C00F  F017         	movff	___fldiv@b,??___fldiv
  7838   001BDE  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7839   001BE2  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7840   001BE6  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7841   001BEA  341A               	rlcf	(??___fldiv+3)^0,w,c
  7842   001BEC  321A               	rrcf	(??___fldiv+3)^0,f,c
  7843   001BEE  3219               	rrcf	(??___fldiv+2)^0,f,c
  7844   001BF0  3218               	rrcf	(??___fldiv+1)^0,f,c
  7845   001BF2  3217               	rrcf	??___fldiv^0,f,c
  7846   001BF4  C017  F00F         	movff	??___fldiv,___fldiv@b
  7847   001BF8  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7848   001BFC  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7849   001C00  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7850   001C04  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7851   001C06  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7852   001C08                     l2642:
  7853   001C08  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7854   001C0A  EF0F  F00E         	goto	u2601
  7855   001C0E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7856   001C10  E108               	bnz	u2600
  7857   001C12  2820               	incf	___fldiv@new_exp^0,w,c
  7858   001C14  A0D8               	btfss	status,0,c
  7859   001C16  EF0F  F00E         	goto	u2601
  7860   001C1A  EF11  F00E         	goto	u2600
  7861   001C1E                     u2601:
  7862   001C1E  EF1C  F00E         	goto	l2646
  7863   001C22                     u2600:
  7864   001C22  0E00               	movlw	0
  7865   001C24  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7866   001C26  6820               	setf	___fldiv@new_exp^0,c
  7867   001C28  0E00               	movlw	0
  7868   001C2A  6E0F               	movwf	___fldiv@b^0,c
  7869   001C2C  0E00               	movlw	0
  7870   001C2E  6E10               	movwf	(___fldiv@b+1)^0,c
  7871   001C30  0E00               	movlw	0
  7872   001C32  6E11               	movwf	(___fldiv@b+2)^0,c
  7873   001C34  0E00               	movlw	0
  7874   001C36  6E12               	movwf	(___fldiv@b+3)^0,c
  7875   001C38                     l2646:
  7876   001C38  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7877   001C3A  EF29  F00E         	goto	u2610
  7878   001C3E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7879   001C40  E106               	bnz	u2611
  7880   001C42  0420               	decf	___fldiv@new_exp^0,w,c
  7881   001C44  B0D8               	btfsc	status,0,c
  7882   001C46  EF27  F00E         	goto	u2611
  7883   001C4A  EF29  F00E         	goto	u2610
  7884   001C4E                     u2611:
  7885   001C4E  EF36  F00E         	goto	l2652
  7886   001C52                     u2610:
  7887   001C52  0E00               	movlw	0
  7888   001C54  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7889   001C56  0E00               	movlw	0
  7890   001C58  6E20               	movwf	___fldiv@new_exp^0,c
  7891   001C5A  0E00               	movlw	0
  7892   001C5C  6E0F               	movwf	___fldiv@b^0,c
  7893   001C5E  0E00               	movlw	0
  7894   001C60  6E10               	movwf	(___fldiv@b+1)^0,c
  7895   001C62  0E00               	movlw	0
  7896   001C64  6E11               	movwf	(___fldiv@b+2)^0,c
  7897   001C66  0E00               	movlw	0
  7898   001C68  6E12               	movwf	(___fldiv@b+3)^0,c
  7899   001C6A  6A1F               	clrf	___fldiv@sign^0,c
  7900   001C6C                     l2652:
  7901   001C6C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7902   001C70  A026               	btfss	___fldiv@bexp^0,0,c
  7903   001C72  EF3D  F00E         	goto	u2621
  7904   001C76  EF3F  F00E         	goto	u2620
  7905   001C7A                     u2621:
  7906   001C7A  EF42  F00E         	goto	l2658
  7907   001C7E                     u2620:
  7908   001C7E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7909   001C80  EF43  F00E         	goto	l2660
  7910   001C84                     l2658:
  7911   001C84  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7912   001C86                     l2660:
  7913   001C86  90D8               	bcf	status,0,c
  7914   001C88  3026               	rrcf	___fldiv@bexp^0,w,c
  7915   001C8A  6E12               	movwf	(___fldiv@b+3)^0,c
  7916   001C8C  EFFC  F00C         	goto	l2576
  7917   001C90                     l781:
  7918   001C90  0012               	return		;funcret
  7919   001C92                     __end_of___fldiv:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function ___fladd *****************
  7923 ;; Defined at:
  7924 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  b               4   39[COMRAM] unsigned char 
  7927 ;;  a               4   43[COMRAM] unsigned char 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  grs             1   54[COMRAM] unsigned char 
  7930 ;;  bexp            1   53[COMRAM] unsigned char 
  7931 ;;  aexp            1   52[COMRAM] unsigned char 
  7932 ;;  signs           1   51[COMRAM] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  4   39[COMRAM] unsigned char 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7942 ;;      Params:         8       0       0       0       0       0       0
  7943 ;;      Locals:         4       0       0       0       0       0       0
  7944 ;;      Temps:          4       0       0       0       0       0       0
  7945 ;;      Totals:        16       0       0       0       0       0       0
  7946 ;;Total ram usage:       16 bytes
  7947 ;; Hardware stack levels used: 1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_DHT11_Read_Data
  7952 ;;		___flsub
  7953 ;;		_efgtoa
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text35
  7958   001026                     __ptext35:
  7959                           	callstack 0
  7960   001026                     ___fladd:
  7961                           	callstack 25
  7962   001026  502B               	movf	(___fladd@b+3)^0,w,c
  7963   001028  0B80               	andlw	128
  7964   00102A  6E34               	movwf	___fladd@signs^0,c
  7965   00102C  502B               	movf	(___fladd@b+3)^0,w,c
  7966   00102E  242B               	addwf	(___fladd@b+3)^0,w,c
  7967   001030  6E36               	movwf	___fladd@bexp^0,c
  7968   001032  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7969   001034  EF1E  F008         	goto	u2001
  7970   001038  EF20  F008         	goto	u2000
  7971   00103C                     u2001:
  7972   00103C  EF21  F008         	goto	l2336
  7973   001040                     u2000:
  7974   001040  8036               	bsf	___fladd@bexp^0,0,c
  7975   001042                     l2336:
  7976   001042  5036               	movf	___fladd@bexp^0,w,c
  7977   001044  B4D8               	btfsc	status,2,c
  7978   001046  EF27  F008         	goto	u2011
  7979   00104A  EF29  F008         	goto	u2010
  7980   00104E                     u2011:
  7981   00104E  EF3D  F008         	goto	l2346
  7982   001052                     u2010:
  7983   001052  2836               	incf	___fladd@bexp^0,w,c
  7984   001054  A4D8               	btfss	status,2,c
  7985   001056  EF2F  F008         	goto	u2021
  7986   00105A  EF31  F008         	goto	u2020
  7987   00105E                     u2021:
  7988   00105E  EF39  F008         	goto	l2342
  7989   001062                     u2020:
  7990   001062  0E00               	movlw	0
  7991   001064  6E28               	movwf	___fladd@b^0,c
  7992   001066  0E00               	movlw	0
  7993   001068  6E29               	movwf	(___fladd@b+1)^0,c
  7994   00106A  0E00               	movlw	0
  7995   00106C  6E2A               	movwf	(___fladd@b+2)^0,c
  7996   00106E  0E00               	movlw	0
  7997   001070  6E2B               	movwf	(___fladd@b+3)^0,c
  7998   001072                     l2342:
  7999   001072  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8000   001074  6A2B               	clrf	(___fladd@b+3)^0,c
  8001   001076  EF45  F008         	goto	l2348
  8002   00107A                     l2346:
  8003   00107A  0E00               	movlw	0
  8004   00107C  6E28               	movwf	___fladd@b^0,c
  8005   00107E  0E00               	movlw	0
  8006   001080  6E29               	movwf	(___fladd@b+1)^0,c
  8007   001082  0E00               	movlw	0
  8008   001084  6E2A               	movwf	(___fladd@b+2)^0,c
  8009   001086  0E00               	movlw	0
  8010   001088  6E2B               	movwf	(___fladd@b+3)^0,c
  8011   00108A                     l2348:
  8012   00108A  502F               	movf	(___fladd@a+3)^0,w,c
  8013   00108C  0B80               	andlw	128
  8014   00108E  6E35               	movwf	___fladd@aexp^0,c
  8015   001090  5034               	movf	___fladd@signs^0,w,c
  8016   001092  1835               	xorwf	___fladd@aexp^0,w,c
  8017   001094  B4D8               	btfsc	status,2,c
  8018   001096  EF4F  F008         	goto	u2031
  8019   00109A  EF51  F008         	goto	u2030
  8020   00109E                     u2031:
  8021   00109E  EF52  F008         	goto	l2354
  8022   0010A2                     u2030:
  8023   0010A2  8C34               	bsf	___fladd@signs^0,6,c
  8024   0010A4                     l2354:
  8025   0010A4  502F               	movf	(___fladd@a+3)^0,w,c
  8026   0010A6  242F               	addwf	(___fladd@a+3)^0,w,c
  8027   0010A8  6E35               	movwf	___fladd@aexp^0,c
  8028   0010AA  AE2E               	btfss	(___fladd@a+2)^0,7,c
  8029   0010AC  EF5A  F008         	goto	u2041
  8030   0010B0  EF5C  F008         	goto	u2040
  8031   0010B4                     u2041:
  8032   0010B4  EF5D  F008         	goto	l2360
  8033   0010B8                     u2040:
  8034   0010B8  8035               	bsf	___fladd@aexp^0,0,c
  8035   0010BA                     l2360:
  8036   0010BA  5035               	movf	___fladd@aexp^0,w,c
  8037   0010BC  B4D8               	btfsc	status,2,c
  8038   0010BE  EF63  F008         	goto	u2051
  8039   0010C2  EF65  F008         	goto	u2050
  8040   0010C6                     u2051:
  8041   0010C6  EF79  F008         	goto	l2370
  8042   0010CA                     u2050:
  8043   0010CA  2835               	incf	___fladd@aexp^0,w,c
  8044   0010CC  A4D8               	btfss	status,2,c
  8045   0010CE  EF6B  F008         	goto	u2061
  8046   0010D2  EF6D  F008         	goto	u2060
  8047   0010D6                     u2061:
  8048   0010D6  EF75  F008         	goto	l2366
  8049   0010DA                     u2060:
  8050   0010DA  0E00               	movlw	0
  8051   0010DC  6E2C               	movwf	___fladd@a^0,c
  8052   0010DE  0E00               	movlw	0
  8053   0010E0  6E2D               	movwf	(___fladd@a+1)^0,c
  8054   0010E2  0E00               	movlw	0
  8055   0010E4  6E2E               	movwf	(___fladd@a+2)^0,c
  8056   0010E6  0E00               	movlw	0
  8057   0010E8  6E2F               	movwf	(___fladd@a+3)^0,c
  8058   0010EA                     l2366:
  8059   0010EA  8E2E               	bsf	(___fladd@a+2)^0,7,c
  8060   0010EC  6A2F               	clrf	(___fladd@a+3)^0,c
  8061   0010EE  EF81  F008         	goto	l2372
  8062   0010F2                     l2370:
  8063   0010F2  0E00               	movlw	0
  8064   0010F4  6E2C               	movwf	___fladd@a^0,c
  8065   0010F6  0E00               	movlw	0
  8066   0010F8  6E2D               	movwf	(___fladd@a+1)^0,c
  8067   0010FA  0E00               	movlw	0
  8068   0010FC  6E2E               	movwf	(___fladd@a+2)^0,c
  8069   0010FE  0E00               	movlw	0
  8070   001100  6E2F               	movwf	(___fladd@a+3)^0,c
  8071   001102                     l2372:
  8072   001102  5036               	movf	___fladd@bexp^0,w,c
  8073   001104  5C35               	subwf	___fladd@aexp^0,w,c
  8074   001106  B0D8               	btfsc	status,0,c
  8075   001108  EF88  F008         	goto	u2071
  8076   00110C  EF8A  F008         	goto	u2070
  8077   001110                     u2071:
  8078   001110  EFB1  F008         	goto	l2408
  8079   001114                     u2070:
  8080   001114  AC34               	btfss	___fladd@signs^0,6,c
  8081   001116  EF8F  F008         	goto	u2081
  8082   00111A  EF91  F008         	goto	u2080
  8083   00111E                     u2081:
  8084   00111E  EF93  F008         	goto	l2378
  8085   001122                     u2080:
  8086   001122  0E80               	movlw	128
  8087   001124  1A34               	xorwf	___fladd@signs^0,f,c
  8088   001126                     l2378:
  8089   001126  C036  F037         	movff	___fladd@bexp,___fladd@grs
  8090   00112A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8091   00112E  C037  F035         	movff	___fladd@grs,___fladd@aexp
  8092   001132  C028  F037         	movff	___fladd@b,___fladd@grs
  8093   001136  C02C  F028         	movff	___fladd@a,___fladd@b
  8094   00113A  C037  F02C         	movff	___fladd@grs,___fladd@a
  8095   00113E  C029  F037         	movff	___fladd@b+1,___fladd@grs
  8096   001142  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  8097   001146  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  8098   00114A  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  8099   00114E  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  8100   001152  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  8101   001156  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  8102   00115A  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  8103   00115E  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  8104   001162                     l2408:
  8105   001162  6A37               	clrf	___fladd@grs^0,c
  8106   001164  5036               	movf	___fladd@bexp^0,w,c
  8107   001166  C035  F030         	movff	___fladd@aexp,??___fladd
  8108   00116A  6A31               	clrf	(??___fladd+1)^0,c
  8109   00116C  5E30               	subwf	??___fladd^0,f,c
  8110   00116E  0E00               	movlw	0
  8111   001170  5A31               	subwfb	(??___fladd+1)^0,f,c
  8112   001172  BE31               	btfsc	(??___fladd+1)^0,7,c
  8113   001174  EFC5  F008         	goto	u2091
  8114   001178  5031               	movf	(??___fladd+1)^0,w,c
  8115   00117A  E109               	bnz	u2090
  8116   00117C  0E1A               	movlw	26
  8117   00117E  5C30               	subwf	??___fladd^0,w,c
  8118   001180  A0D8               	btfss	status,0,c
  8119   001182  EFC5  F008         	goto	u2091
  8120   001186  EFC7  F008         	goto	u2090
  8121   00118A                     u2091:
  8122   00118A  EFFE  F008         	goto	l728
  8123   00118E                     u2090:
  8124   00118E  5028               	movf	___fladd@b^0,w,c
  8125   001190  1029               	iorwf	(___fladd@b+1)^0,w,c
  8126   001192  102A               	iorwf	(___fladd@b+2)^0,w,c
  8127   001194  102B               	iorwf	(___fladd@b+3)^0,w,c
  8128   001196  A4D8               	btfss	status,2,c
  8129   001198  EFD0  F008         	goto	u2101
  8130   00119C  EFD3  F008         	goto	u2100
  8131   0011A0                     u2101:
  8132   0011A0  0E01               	movlw	1
  8133   0011A2  EFD4  F008         	goto	u2110
  8134   0011A6                     u2100:
  8135   0011A6  0E00               	movlw	0
  8136   0011A8                     u2110:
  8137   0011A8  6E37               	movwf	___fladd@grs^0,c
  8138   0011AA  0E00               	movlw	0
  8139   0011AC  6E28               	movwf	___fladd@b^0,c
  8140   0011AE  0E00               	movlw	0
  8141   0011B0  6E29               	movwf	(___fladd@b+1)^0,c
  8142   0011B2  0E00               	movlw	0
  8143   0011B4  6E2A               	movwf	(___fladd@b+2)^0,c
  8144   0011B6  0E00               	movlw	0
  8145   0011B8  6E2B               	movwf	(___fladd@b+3)^0,c
  8146   0011BA  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8147   0011BE  EF07  F009         	goto	l727
  8148   0011C2                     l729:
  8149   0011C2  A037               	btfss	___fladd@grs^0,0,c
  8150   0011C4  EFE6  F008         	goto	u2121
  8151   0011C8  EFE8  F008         	goto	u2120
  8152   0011CC                     u2121:
  8153   0011CC  EFEE  F008         	goto	l2418
  8154   0011D0                     u2120:
  8155   0011D0  90D8               	bcf	status,0,c
  8156   0011D2  3037               	rrcf	___fladd@grs^0,w,c
  8157   0011D4  0901               	iorlw	1
  8158   0011D6  6E37               	movwf	___fladd@grs^0,c
  8159   0011D8  EFF0  F008         	goto	l2420
  8160   0011DC                     l2418:
  8161   0011DC  90D8               	bcf	status,0,c
  8162   0011DE  3237               	rrcf	___fladd@grs^0,f,c
  8163   0011E0                     l2420:
  8164   0011E0  A028               	btfss	___fladd@b^0,0,c
  8165   0011E2  EFF5  F008         	goto	u2131
  8166   0011E6  EFF7  F008         	goto	u2130
  8167   0011EA                     u2131:
  8168   0011EA  EFF8  F008         	goto	l2424
  8169   0011EE                     u2130:
  8170   0011EE  8E37               	bsf	___fladd@grs^0,7,c
  8171   0011F0                     l2424:
  8172   0011F0  342B               	rlcf	(___fladd@b+3)^0,w,c
  8173   0011F2  322B               	rrcf	(___fladd@b+3)^0,f,c
  8174   0011F4  322A               	rrcf	(___fladd@b+2)^0,f,c
  8175   0011F6  3229               	rrcf	(___fladd@b+1)^0,f,c
  8176   0011F8  3228               	rrcf	___fladd@b^0,f,c
  8177   0011FA  2A36               	incf	___fladd@bexp^0,f,c
  8178   0011FC                     l728:
  8179   0011FC  5035               	movf	___fladd@aexp^0,w,c
  8180   0011FE  5C36               	subwf	___fladd@bexp^0,w,c
  8181   001200  A0D8               	btfss	status,0,c
  8182   001202  EF05  F009         	goto	u2141
  8183   001206  EF07  F009         	goto	u2140
  8184   00120A                     u2141:
  8185   00120A  EFE1  F008         	goto	l729
  8186   00120E                     u2140:
  8187   00120E                     l727:
  8188   00120E  BC34               	btfsc	___fladd@signs^0,6,c
  8189   001210  EF0C  F009         	goto	u2151
  8190   001214  EF0E  F009         	goto	u2150
  8191   001218                     u2151:
  8192   001218  EF4E  F009         	goto	l2452
  8193   00121C                     u2150:
  8194   00121C  5036               	movf	___fladd@bexp^0,w,c
  8195   00121E  A4D8               	btfss	status,2,c
  8196   001220  EF14  F009         	goto	u2161
  8197   001224  EF16  F009         	goto	u2160
  8198   001228                     u2161:
  8199   001228  EF20  F009         	goto	l2434
  8200   00122C                     u2160:
  8201   00122C  0E00               	movlw	0
  8202   00122E  6E28               	movwf	?___fladd^0,c
  8203   001230  0E00               	movlw	0
  8204   001232  6E29               	movwf	(?___fladd+1)^0,c
  8205   001234  0E00               	movlw	0
  8206   001236  6E2A               	movwf	(?___fladd+2)^0,c
  8207   001238  0E00               	movlw	0
  8208   00123A  6E2B               	movwf	(?___fladd+3)^0,c
  8209   00123C  EF6D  F00A         	goto	l736
  8210   001240                     l2434:
  8211   001240  502C               	movf	___fladd@a^0,w,c
  8212   001242  2628               	addwf	___fladd@b^0,f,c
  8213   001244  502D               	movf	(___fladd@a+1)^0,w,c
  8214   001246  2229               	addwfc	(___fladd@b+1)^0,f,c
  8215   001248  502E               	movf	(___fladd@a+2)^0,w,c
  8216   00124A  222A               	addwfc	(___fladd@b+2)^0,f,c
  8217   00124C  502F               	movf	(___fladd@a+3)^0,w,c
  8218   00124E  222B               	addwfc	(___fladd@b+3)^0,f,c
  8219   001250  A02B               	btfss	(___fladd@b+3)^0,0,c
  8220   001252  EF2D  F009         	goto	u2171
  8221   001256  EF2F  F009         	goto	u2170
  8222   00125A                     u2171:
  8223   00125A  EFDB  F009         	goto	l741
  8224   00125E                     u2170:
  8225   00125E  A037               	btfss	___fladd@grs^0,0,c
  8226   001260  EF34  F009         	goto	u2181
  8227   001264  EF36  F009         	goto	u2180
  8228   001268                     u2181:
  8229   001268  EF3C  F009         	goto	l2442
  8230   00126C                     u2180:
  8231   00126C  90D8               	bcf	status,0,c
  8232   00126E  3037               	rrcf	___fladd@grs^0,w,c
  8233   001270  0901               	iorlw	1
  8234   001272  6E37               	movwf	___fladd@grs^0,c
  8235   001274  EF3E  F009         	goto	l2444
  8236   001278                     l2442:
  8237   001278  90D8               	bcf	status,0,c
  8238   00127A  3237               	rrcf	___fladd@grs^0,f,c
  8239   00127C                     l2444:
  8240   00127C  A028               	btfss	___fladd@b^0,0,c
  8241   00127E  EF43  F009         	goto	u2191
  8242   001282  EF45  F009         	goto	u2190
  8243   001286                     u2191:
  8244   001286  EF46  F009         	goto	l2448
  8245   00128A                     u2190:
  8246   00128A  8E37               	bsf	___fladd@grs^0,7,c
  8247   00128C                     l2448:
  8248   00128C  342B               	rlcf	(___fladd@b+3)^0,w,c
  8249   00128E  322B               	rrcf	(___fladd@b+3)^0,f,c
  8250   001290  322A               	rrcf	(___fladd@b+2)^0,f,c
  8251   001292  3229               	rrcf	(___fladd@b+1)^0,f,c
  8252   001294  3228               	rrcf	___fladd@b^0,f,c
  8253   001296  2A36               	incf	___fladd@bexp^0,f,c
  8254   001298  EFDB  F009         	goto	l741
  8255   00129C                     l2452:
  8256   00129C  502C               	movf	___fladd@a^0,w,c
  8257   00129E  5C28               	subwf	___fladd@b^0,w,c
  8258   0012A0  502D               	movf	(___fladd@a+1)^0,w,c
  8259   0012A2  5829               	subwfb	(___fladd@b+1)^0,w,c
  8260   0012A4  502E               	movf	(___fladd@a+2)^0,w,c
  8261   0012A6  582A               	subwfb	(___fladd@b+2)^0,w,c
  8262   0012A8  502B               	movf	(___fladd@b+3)^0,w,c
  8263   0012AA  0A80               	xorlw	128
  8264   0012AC  6E30               	movwf	??___fladd^0,c
  8265   0012AE  502F               	movf	(___fladd@a+3)^0,w,c
  8266   0012B0  0A80               	xorlw	128
  8267   0012B2  5830               	subwfb	??___fladd^0,w,c
  8268   0012B4  B0D8               	btfsc	status,0,c
  8269   0012B6  EF5F  F009         	goto	u2201
  8270   0012BA  EF61  F009         	goto	u2200
  8271   0012BE                     u2201:
  8272   0012BE  EF8C  F009         	goto	l2462
  8273   0012C2                     u2200:
  8274   0012C2  5028               	movf	___fladd@b^0,w,c
  8275   0012C4  5C2C               	subwf	___fladd@a^0,w,c
  8276   0012C6  6E30               	movwf	??___fladd^0,c
  8277   0012C8  5029               	movf	(___fladd@b+1)^0,w,c
  8278   0012CA  582D               	subwfb	(___fladd@a+1)^0,w,c
  8279   0012CC  6E31               	movwf	(??___fladd+1)^0,c
  8280   0012CE  502A               	movf	(___fladd@b+2)^0,w,c
  8281   0012D0  582E               	subwfb	(___fladd@a+2)^0,w,c
  8282   0012D2  6E32               	movwf	(??___fladd+2)^0,c
  8283   0012D4  502B               	movf	(___fladd@b+3)^0,w,c
  8284   0012D6  582F               	subwfb	(___fladd@a+3)^0,w,c
  8285   0012D8  6E33               	movwf	(??___fladd+3)^0,c
  8286   0012DA  0EFF               	movlw	255
  8287   0012DC  2430               	addwf	??___fladd^0,w,c
  8288   0012DE  6E28               	movwf	___fladd@b^0,c
  8289   0012E0  0EFF               	movlw	255
  8290   0012E2  2031               	addwfc	(??___fladd+1)^0,w,c
  8291   0012E4  6E29               	movwf	(___fladd@b+1)^0,c
  8292   0012E6  0EFF               	movlw	255
  8293   0012E8  2032               	addwfc	(??___fladd+2)^0,w,c
  8294   0012EA  6E2A               	movwf	(___fladd@b+2)^0,c
  8295   0012EC  0EFF               	movlw	255
  8296   0012EE  2033               	addwfc	(??___fladd+3)^0,w,c
  8297   0012F0  6E2B               	movwf	(___fladd@b+3)^0,c
  8298   0012F2  0E80               	movlw	128
  8299   0012F4  1A34               	xorwf	___fladd@signs^0,f,c
  8300   0012F6  6C37               	negf	___fladd@grs^0,c
  8301   0012F8  5037               	movf	___fladd@grs^0,w,c
  8302   0012FA  A4D8               	btfss	status,2,c
  8303   0012FC  EF82  F009         	goto	u2211
  8304   001300  EF84  F009         	goto	u2210
  8305   001304                     u2211:
  8306   001304  EF94  F009         	goto	l744
  8307   001308                     u2210:
  8308   001308  0E01               	movlw	1
  8309   00130A  2628               	addwf	___fladd@b^0,f,c
  8310   00130C  0E00               	movlw	0
  8311   00130E  2229               	addwfc	(___fladd@b+1)^0,f,c
  8312   001310  222A               	addwfc	(___fladd@b+2)^0,f,c
  8313   001312  222B               	addwfc	(___fladd@b+3)^0,f,c
  8314   001314  EF94  F009         	goto	l744
  8315   001318                     l2462:
  8316   001318  502C               	movf	___fladd@a^0,w,c
  8317   00131A  5E28               	subwf	___fladd@b^0,f,c
  8318   00131C  502D               	movf	(___fladd@a+1)^0,w,c
  8319   00131E  5A29               	subwfb	(___fladd@b+1)^0,f,c
  8320   001320  502E               	movf	(___fladd@a+2)^0,w,c
  8321   001322  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  8322   001324  502F               	movf	(___fladd@a+3)^0,w,c
  8323   001326  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  8324   001328                     l744:
  8325   001328  5028               	movf	___fladd@b^0,w,c
  8326   00132A  1029               	iorwf	(___fladd@b+1)^0,w,c
  8327   00132C  102A               	iorwf	(___fladd@b+2)^0,w,c
  8328   00132E  102B               	iorwf	(___fladd@b+3)^0,w,c
  8329   001330  A4D8               	btfss	status,2,c
  8330   001332  EF9D  F009         	goto	u2221
  8331   001336  EF9F  F009         	goto	u2220
  8332   00133A                     u2221:
  8333   00133A  EFD4  F009         	goto	l2486
  8334   00133E                     u2220:
  8335   00133E  5037               	movf	___fladd@grs^0,w,c
  8336   001340  A4D8               	btfss	status,2,c
  8337   001342  EFA5  F009         	goto	u2231
  8338   001346  EFA7  F009         	goto	u2230
  8339   00134A                     u2231:
  8340   00134A  EFD4  F009         	goto	l2486
  8341   00134E                     u2230:
  8342   00134E  0E00               	movlw	0
  8343   001350  6E28               	movwf	?___fladd^0,c
  8344   001352  0E00               	movlw	0
  8345   001354  6E29               	movwf	(?___fladd+1)^0,c
  8346   001356  0E00               	movlw	0
  8347   001358  6E2A               	movwf	(?___fladd+2)^0,c
  8348   00135A  0E00               	movlw	0
  8349   00135C  6E2B               	movwf	(?___fladd+3)^0,c
  8350   00135E  EF6D  F00A         	goto	l736
  8351   001362                     l2470:
  8352   001362  90D8               	bcf	status,0,c
  8353   001364  3628               	rlcf	___fladd@b^0,f,c
  8354   001366  3629               	rlcf	(___fladd@b+1)^0,f,c
  8355   001368  362A               	rlcf	(___fladd@b+2)^0,f,c
  8356   00136A  362B               	rlcf	(___fladd@b+3)^0,f,c
  8357   00136C  AE37               	btfss	___fladd@grs^0,7,c
  8358   00136E  EFBB  F009         	goto	u2241
  8359   001372  EFBD  F009         	goto	u2240
  8360   001376                     u2241:
  8361   001376  EFBE  F009         	goto	l2476
  8362   00137A                     u2240:
  8363   00137A  8028               	bsf	___fladd@b^0,0,c
  8364   00137C                     l2476:
  8365   00137C  A037               	btfss	___fladd@grs^0,0,c
  8366   00137E  EFC3  F009         	goto	u2251
  8367   001382  EFC5  F009         	goto	u2250
  8368   001386                     u2251:
  8369   001386  EFC9  F009         	goto	l2480
  8370   00138A                     u2250:
  8371   00138A  80D8               	bsf	status,0,c
  8372   00138C  3637               	rlcf	___fladd@grs^0,f,c
  8373   00138E  EFCB  F009         	goto	l2482
  8374   001392                     l2480:
  8375   001392  90D8               	bcf	status,0,c
  8376   001394  3637               	rlcf	___fladd@grs^0,f,c
  8377   001396                     l2482:
  8378   001396  5036               	movf	___fladd@bexp^0,w,c
  8379   001398  B4D8               	btfsc	status,2,c
  8380   00139A  EFD1  F009         	goto	u2261
  8381   00139E  EFD3  F009         	goto	u2260
  8382   0013A2                     u2261:
  8383   0013A2  EFD4  F009         	goto	l2486
  8384   0013A6                     u2260:
  8385   0013A6  0636               	decf	___fladd@bexp^0,f,c
  8386   0013A8                     l2486:
  8387   0013A8  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8388   0013AA  EFD9  F009         	goto	u2271
  8389   0013AE  EFDB  F009         	goto	u2270
  8390   0013B2                     u2271:
  8391   0013B2  EFB1  F009         	goto	l2470
  8392   0013B6                     u2270:
  8393   0013B6                     l741:
  8394   0013B6  6A35               	clrf	___fladd@aexp^0,c
  8395   0013B8  AE37               	btfss	___fladd@grs^0,7,c
  8396   0013BA  EFE1  F009         	goto	u2281
  8397   0013BE  EFE3  F009         	goto	u2280
  8398   0013C2                     u2281:
  8399   0013C2  EFFB  F009         	goto	l753
  8400   0013C6                     u2280:
  8401   0013C6  C037  F030         	movff	___fladd@grs,??___fladd
  8402   0013CA  0E7F               	movlw	127
  8403   0013CC  1630               	andwf	??___fladd^0,f,c
  8404   0013CE  B4D8               	btfsc	status,2,c
  8405   0013D0  EFEC  F009         	goto	u2291
  8406   0013D4  EFEE  F009         	goto	u2290
  8407   0013D8                     u2291:
  8408   0013D8  EFF2  F009         	goto	l754
  8409   0013DC                     u2290:
  8410   0013DC                     l2490:
  8411   0013DC  0E01               	movlw	1
  8412   0013DE  6E35               	movwf	___fladd@aexp^0,c
  8413   0013E0  EFFB  F009         	goto	l753
  8414   0013E4                     l754:
  8415   0013E4  A028               	btfss	___fladd@b^0,0,c
  8416   0013E6  EFF7  F009         	goto	u2301
  8417   0013EA  EFF9  F009         	goto	u2300
  8418   0013EE                     u2301:
  8419   0013EE  EFFB  F009         	goto	l753
  8420   0013F2                     u2300:
  8421   0013F2  EFEE  F009         	goto	l2490
  8422   0013F6                     l753:
  8423   0013F6  5035               	movf	___fladd@aexp^0,w,c
  8424   0013F8  B4D8               	btfsc	status,2,c
  8425   0013FA  EF01  F00A         	goto	u2311
  8426   0013FE  EF03  F00A         	goto	u2310
  8427   001402                     u2311:
  8428   001402  EF2E  F00A         	goto	l2502
  8429   001406                     u2310:
  8430   001406  0E01               	movlw	1
  8431   001408  2628               	addwf	___fladd@b^0,f,c
  8432   00140A  0E00               	movlw	0
  8433   00140C  2229               	addwfc	(___fladd@b+1)^0,f,c
  8434   00140E  222A               	addwfc	(___fladd@b+2)^0,f,c
  8435   001410  222B               	addwfc	(___fladd@b+3)^0,f,c
  8436   001412  A02B               	btfss	(___fladd@b+3)^0,0,c
  8437   001414  EF0E  F00A         	goto	u2321
  8438   001418  EF10  F00A         	goto	u2320
  8439   00141C                     u2321:
  8440   00141C  EF2E  F00A         	goto	l2502
  8441   001420                     u2320:
  8442   001420  C028  F030         	movff	___fladd@b,??___fladd
  8443   001424  C029  F031         	movff	___fladd@b+1,??___fladd+1
  8444   001428  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  8445   00142C  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  8446   001430  3433               	rlcf	(??___fladd+3)^0,w,c
  8447   001432  3233               	rrcf	(??___fladd+3)^0,f,c
  8448   001434  3232               	rrcf	(??___fladd+2)^0,f,c
  8449   001436  3231               	rrcf	(??___fladd+1)^0,f,c
  8450   001438  3230               	rrcf	??___fladd^0,f,c
  8451   00143A  C030  F028         	movff	??___fladd,___fladd@b
  8452   00143E  C031  F029         	movff	??___fladd+1,___fladd@b+1
  8453   001442  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  8454   001446  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  8455   00144A  2836               	incf	___fladd@bexp^0,w,c
  8456   00144C  B4D8               	btfsc	status,2,c
  8457   00144E  EF2B  F00A         	goto	u2331
  8458   001452  EF2D  F00A         	goto	u2330
  8459   001456                     u2331:
  8460   001456  EF2E  F00A         	goto	l2502
  8461   00145A                     u2330:
  8462   00145A  2A36               	incf	___fladd@bexp^0,f,c
  8463   00145C                     l2502:
  8464   00145C  2836               	incf	___fladd@bexp^0,w,c
  8465   00145E  B4D8               	btfsc	status,2,c
  8466   001460  EF34  F00A         	goto	u2341
  8467   001464  EF36  F00A         	goto	u2340
  8468   001468                     u2341:
  8469   001468  EF3E  F00A         	goto	l2506
  8470   00146C                     u2340:
  8471   00146C  5036               	movf	___fladd@bexp^0,w,c
  8472   00146E  A4D8               	btfss	status,2,c
  8473   001470  EF3C  F00A         	goto	u2351
  8474   001474  EF3E  F00A         	goto	u2350
  8475   001478                     u2351:
  8476   001478  EF4F  F00A         	goto	l760
  8477   00147C                     u2350:
  8478   00147C                     l2506:
  8479   00147C  0E00               	movlw	0
  8480   00147E  6E28               	movwf	___fladd@b^0,c
  8481   001480  0E00               	movlw	0
  8482   001482  6E29               	movwf	(___fladd@b+1)^0,c
  8483   001484  0E00               	movlw	0
  8484   001486  6E2A               	movwf	(___fladd@b+2)^0,c
  8485   001488  0E00               	movlw	0
  8486   00148A  6E2B               	movwf	(___fladd@b+3)^0,c
  8487   00148C  5036               	movf	___fladd@bexp^0,w,c
  8488   00148E  A4D8               	btfss	status,2,c
  8489   001490  EF4C  F00A         	goto	u2361
  8490   001494  EF4E  F00A         	goto	u2360
  8491   001498                     u2361:
  8492   001498  EF4F  F00A         	goto	l760
  8493   00149C                     u2360:
  8494   00149C  6A34               	clrf	___fladd@signs^0,c
  8495   00149E                     l760:
  8496   00149E  A036               	btfss	___fladd@bexp^0,0,c
  8497   0014A0  EF54  F00A         	goto	u2371
  8498   0014A4  EF56  F00A         	goto	u2370
  8499   0014A8                     u2371:
  8500   0014A8  EF59  F00A         	goto	l2512
  8501   0014AC                     u2370:
  8502   0014AC  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8503   0014AE  EF5A  F00A         	goto	l2514
  8504   0014B2                     l2512:
  8505   0014B2  9E2A               	bcf	(___fladd@b+2)^0,7,c
  8506   0014B4                     l2514:
  8507   0014B4  90D8               	bcf	status,0,c
  8508   0014B6  3036               	rrcf	___fladd@bexp^0,w,c
  8509   0014B8  6E2B               	movwf	(___fladd@b+3)^0,c
  8510   0014BA  AE34               	btfss	___fladd@signs^0,7,c
  8511   0014BC  EF62  F00A         	goto	u2381
  8512   0014C0  EF64  F00A         	goto	u2380
  8513   0014C4                     u2381:
  8514   0014C4  EF65  F00A         	goto	l2520
  8515   0014C8                     u2380:
  8516   0014C8  8E2B               	bsf	(___fladd@b+3)^0,7,c
  8517   0014CA                     l2520:
  8518   0014CA  C028  F028         	movff	___fladd@b,?___fladd
  8519   0014CE  C029  F029         	movff	___fladd@b+1,?___fladd+1
  8520   0014D2  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  8521   0014D6  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  8522   0014DA                     l736:
  8523   0014DA  0012               	return		;funcret
  8524   0014DC                     __end_of___fladd:
  8525                           	callstack 0
  8526                           
  8527 ;; *************** function _DHT11_Start *****************
  8528 ;; Defined at:
  8529 ;;		line 4 in file "dht11.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;		None
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8543 ;;      Params:         0       0       0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0
  8545 ;;      Temps:          2       0       0       0       0       0       0
  8546 ;;      Totals:         2       0       0       0       0       0       0
  8547 ;;Total ram usage:        2 bytes
  8548 ;; Hardware stack levels used: 1
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		_DHT11_Read_Data
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text36
  8557   002F6E                     __ptext36:
  8558                           	callstack 0
  8559   002F6E                     _DHT11_Start:
  8560                           	callstack 29
  8561   002F6E                     
  8562                           ;dht11.c: 5:     TRISAbits.TRISA1 = 0;
  8563   002F6E  9292               	bcf	146,1,c	;volatile
  8564                           
  8565                           ;dht11.c: 6:     LATAbits.LATA1 = 0;
  8566   002F70  9289               	bcf	137,1,c	;volatile
  8567   002F72                     
  8568                           ;dht11.c: 7:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
  8569   002F72  0E02               	movlw	2
  8570   002F74  6E02               	movwf	(??_DHT11_Start+1)^0,c
  8571   002F76  0EA0               	movlw	160
  8572   002F78  6E01               	movwf	??_DHT11_Start^0,c
  8573   002F7A  0E92               	movlw	146
  8574   002F7C                     u3937:
  8575   002F7C  2EE8               	decfsz	wreg,f,c
  8576   002F7E  D7FE               	bra	u3937
  8577   002F80  2E01               	decfsz	??_DHT11_Start^0,f,c
  8578   002F82  D7FC               	bra	u3937
  8579   002F84  2E02               	decfsz	(??_DHT11_Start+1)^0,f,c
  8580   002F86  D7FA               	bra	u3937
  8581   002F88  D000               	nop2	
  8582   002F8A                     
  8583                           ;dht11.c: 8:     LATAbits.LATA1 = 1;
  8584   002F8A  8289               	bsf	137,1,c	;volatile
  8585                           
  8586                           ;dht11.c: 9:     _delay((unsigned long)((30)*(64000000UL/4000000.0)));
  8587   002F8C  0EA0               	movlw	160
  8588   002F8E                     u3947:
  8589   002F8E  2EE8               	decfsz	wreg,f,c
  8590   002F90  D7FE               	bra	u3947
  8591   002F92                     
  8592                           ;dht11.c: 10:     TRISAbits.TRISA1 = 1;
  8593   002F92  8292               	bsf	146,1,c	;volatile
  8594   002F94  0012               	return		;funcret
  8595   002F96                     __end_of_DHT11_Start:
  8596                           	callstack 0
  8597                           
  8598 ;; *************** function _DHT11_Response *****************
  8599 ;; Defined at:
  8600 ;;		line 13 in file "dht11.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;		None
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      void 
  8607 ;; Registers used:
  8608 ;;		None
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8614 ;;      Params:         0       0       0       0       0       0       0
  8615 ;;      Locals:         0       0       0       0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0
  8617 ;;      Totals:         0       0       0       0       0       0       0
  8618 ;;Total ram usage:        0 bytes
  8619 ;; Hardware stack levels used: 1
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		_DHT11_Read_Data
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text37
  8628   002F42                     __ptext37:
  8629                           	callstack 0
  8630   002F42                     _DHT11_Response:
  8631                           	callstack 29
  8632   002F42                     l67:
  8633   002F42  B280               	btfsc	128,1,c	;volatile
  8634   002F44  EFA6  F017         	goto	u3611
  8635   002F48  EFA8  F017         	goto	u3610
  8636   002F4C                     u3611:
  8637   002F4C  EFA1  F017         	goto	l67
  8638   002F50                     u3610:
  8639   002F50                     l70:
  8640   002F50  A280               	btfss	128,1,c	;volatile
  8641   002F52  EFAD  F017         	goto	u3621
  8642   002F56  EFAF  F017         	goto	u3620
  8643   002F5A                     u3621:
  8644   002F5A  EFA8  F017         	goto	l70
  8645   002F5E                     u3620:
  8646   002F5E                     l73:
  8647   002F5E  B280               	btfsc	128,1,c	;volatile
  8648   002F60  EFB4  F017         	goto	u3631
  8649   002F64  EFB6  F017         	goto	u3630
  8650   002F68                     u3631:
  8651   002F68  EFAF  F017         	goto	l73
  8652   002F6C                     u3630:
  8653   002F6C  0012               	return		;funcret
  8654   002F6E                     __end_of_DHT11_Response:
  8655                           	callstack 0
  8656                           
  8657 ;; *************** function _DHT11_Read_Byte *****************
  8658 ;; Defined at:
  8659 ;;		line 19 in file "dht11.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  i               2    4[COMRAM] int 
  8664 ;;  data            2    2[COMRAM] int 
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  2    0[COMRAM] int 
  8667 ;; Registers used:
  8668 ;;		wreg, status,2, status,0
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8674 ;;      Params:         2       0       0       0       0       0       0
  8675 ;;      Locals:         4       0       0       0       0       0       0
  8676 ;;      Temps:          0       0       0       0       0       0       0
  8677 ;;      Totals:         6       0       0       0       0       0       0
  8678 ;;Total ram usage:        6 bytes
  8679 ;; Hardware stack levels used: 1
  8680 ;; This function calls:
  8681 ;;		Nothing
  8682 ;; This function is called by:
  8683 ;;		_DHT11_Read_Data
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text38
  8688   002AD2                     __ptext38:
  8689                           	callstack 0
  8690   002AD2                     _DHT11_Read_Byte:
  8691                           	callstack 29
  8692   002AD2                     
  8693                           ;dht11.c: 20:     int i, data = 0;
  8694   002AD2  0E00               	movlw	0
  8695   002AD4  6E04               	movwf	(DHT11_Read_Byte@data+1)^0,c
  8696   002AD6  0E00               	movlw	0
  8697   002AD8  6E03               	movwf	DHT11_Read_Byte@data^0,c
  8698                           
  8699                           ;dht11.c: 21:     for (i = 0; i < 8; i++) {
  8700   002ADA  0E00               	movlw	0
  8701   002ADC  6E06               	movwf	(DHT11_Read_Byte@i+1)^0,c
  8702   002ADE  0E00               	movlw	0
  8703   002AE0  6E05               	movwf	DHT11_Read_Byte@i^0,c
  8704   002AE2                     l81:
  8705   002AE2  A280               	btfss	128,1,c	;volatile
  8706   002AE4  EF76  F015         	goto	u3641
  8707   002AE8  EF78  F015         	goto	u3640
  8708   002AEC                     u3641:
  8709   002AEC  EF71  F015         	goto	l81
  8710   002AF0                     u3640:
  8711   002AF0                     
  8712                           ;dht11.c: 23:         _delay((unsigned long)((30)*(64000000UL/4000000.0)));
  8713   002AF0  0EA0               	movlw	160
  8714   002AF2                     u3957:
  8715   002AF2  2EE8               	decfsz	wreg,f,c
  8716   002AF4  D7FE               	bra	u3957
  8717   002AF6                     
  8718                           ;dht11.c: 24:         data <<= 1;
  8719   002AF6  90D8               	bcf	status,0,c
  8720   002AF8  3603               	rlcf	DHT11_Read_Byte@data^0,f,c
  8721   002AFA  3604               	rlcf	(DHT11_Read_Byte@data+1)^0,f,c
  8722   002AFC                     
  8723                           ;dht11.c: 25:         if (PORTAbits.RA1 == 1) data |= 1;
  8724   002AFC  A280               	btfss	128,1,c	;volatile
  8725   002AFE  EF83  F015         	goto	u3651
  8726   002B02  EF85  F015         	goto	u3650
  8727   002B06                     u3651:
  8728   002B06  EF86  F015         	goto	l85
  8729   002B0A                     u3650:
  8730   002B0A  8003               	bsf	DHT11_Read_Byte@data^0,0,c
  8731   002B0C                     l85:
  8732   002B0C  B280               	btfsc	128,1,c	;volatile
  8733   002B0E  EF8B  F015         	goto	u3661
  8734   002B12  EF8D  F015         	goto	u3660
  8735   002B16                     u3661:
  8736   002B16  EF86  F015         	goto	l85
  8737   002B1A                     u3660:
  8738   002B1A                     
  8739                           ;dht11.c: 27:     }
  8740   002B1A  4A05               	infsnz	DHT11_Read_Byte@i^0,f,c
  8741   002B1C  2A06               	incf	(DHT11_Read_Byte@i+1)^0,f,c
  8742   002B1E  BE06               	btfsc	(DHT11_Read_Byte@i+1)^0,7,c
  8743   002B20  EF9B  F015         	goto	u3671
  8744   002B24  5006               	movf	(DHT11_Read_Byte@i+1)^0,w,c
  8745   002B26  E109               	bnz	u3670
  8746   002B28  0E08               	movlw	8
  8747   002B2A  5C05               	subwf	DHT11_Read_Byte@i^0,w,c
  8748   002B2C  A0D8               	btfss	status,0,c
  8749   002B2E  EF9B  F015         	goto	u3671
  8750   002B32  EF9D  F015         	goto	u3670
  8751   002B36                     u3671:
  8752   002B36  EF71  F015         	goto	l81
  8753   002B3A                     u3670:
  8754   002B3A                     
  8755                           ;dht11.c: 28:     return data;
  8756   002B3A  C003  F001         	movff	DHT11_Read_Byte@data,?_DHT11_Read_Byte
  8757   002B3E  C004  F002         	movff	DHT11_Read_Byte@data+1,?_DHT11_Read_Byte+1
  8758   002B42  0012               	return		;funcret
  8759   002B44                     __end_of_DHT11_Read_Byte:
  8760                           	callstack 0
  8761                           
  8762                           	psect	rparam
  8763   000001                     ___rparam_used  equ	1
  8764   000000                     ___param_bank   equ	0
  8765   000000                     __Lparam        equ	__Lrparam
  8766   000000                     __Hparam        equ	__Hrparam
  8767                           
  8768                           	psect	idloc
  8769                           
  8770                           ;Config register IDLOC0 @ 0x200000
  8771                           ;	unspecified, using default values
  8772   200000                     	org	2097152
  8773   200000  FF                 	db	255
  8774                           
  8775                           ;Config register IDLOC1 @ 0x200001
  8776                           ;	unspecified, using default values
  8777   200001                     	org	2097153
  8778   200001  FF                 	db	255
  8779                           
  8780                           ;Config register IDLOC2 @ 0x200002
  8781                           ;	unspecified, using default values
  8782   200002                     	org	2097154
  8783   200002  FF                 	db	255
  8784                           
  8785                           ;Config register IDLOC3 @ 0x200003
  8786                           ;	unspecified, using default values
  8787   200003                     	org	2097155
  8788   200003  FF                 	db	255
  8789                           
  8790                           ;Config register IDLOC4 @ 0x200004
  8791                           ;	unspecified, using default values
  8792   200004                     	org	2097156
  8793   200004  FF                 	db	255
  8794                           
  8795                           ;Config register IDLOC5 @ 0x200005
  8796                           ;	unspecified, using default values
  8797   200005                     	org	2097157
  8798   200005  FF                 	db	255
  8799                           
  8800                           ;Config register IDLOC6 @ 0x200006
  8801                           ;	unspecified, using default values
  8802   200006                     	org	2097158
  8803   200006  FF                 	db	255
  8804                           
  8805                           ;Config register IDLOC7 @ 0x200007
  8806                           ;	unspecified, using default values
  8807   200007                     	org	2097159
  8808   200007  FF                 	db	255
  8809                           
  8810                           	psect	config
  8811                           
  8812                           ; Padding undefined space
  8813   300000                     	org	3145728
  8814   300000  FF                 	db	255
  8815                           
  8816                           ;Config register CONFIG1H @ 0x300001
  8817                           ;	Oscillator Selection bits
  8818                           ;	FOSC = INTIO67, Internal oscillator block
  8819                           ;	4X PLL Enable
  8820                           ;	PLLCFG = OFF, Oscillator used directly
  8821                           ;	Primary clock enable bit
  8822                           ;	PRICLKEN = OFF, Primary clock can be disabled by software
  8823                           ;	Fail-Safe Clock Monitor Enable bit
  8824                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8825                           ;	Internal/External Oscillator Switchover bit
  8826                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8827   300001                     	org	3145729
  8828   300001  08                 	db	8
  8829                           
  8830                           ;Config register CONFIG2L @ 0x300002
  8831                           ;	Power-up Timer Enable bit
  8832                           ;	PWRTEN = OFF, Power up timer disabled
  8833                           ;	Brown-out Reset Enable bits
  8834                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8835                           ;	Brown Out Reset Voltage bits
  8836                           ;	BORV = 190, VBOR set to 1.90 V nominal
  8837   300002                     	org	3145730
  8838   300002  19                 	db	25
  8839                           
  8840                           ;Config register CONFIG2H @ 0x300003
  8841                           ;	Watchdog Timer Enable bits
  8842                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8843                           ;	Watchdog Timer Postscale Select bits
  8844                           ;	WDTPS = 32768, 1:32768
  8845   300003                     	org	3145731
  8846   300003  3C                 	db	60
  8847                           
  8848                           ; Padding undefined space
  8849   300004                     	org	3145732
  8850   300004  FF                 	db	255
  8851                           
  8852                           ;Config register CONFIG3H @ 0x300005
  8853                           ;	CCP2 MUX bit
  8854                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  8855                           ;	PORTB A/D Enable bit
  8856                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  8857                           ;	P3A/CCP3 Mux bit
  8858                           ;	CCP3MX = 0x1, unprogrammed default
  8859                           ;	HFINTOSC Fast Start-up
  8860                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  8861                           ;	Timer3 Clock input mux bit
  8862                           ;	T3CMX = PORTC0, T3CKI is on RC0
  8863                           ;	ECCP2 B output mux bit
  8864                           ;	P2BMX = PORTD2, P2B is on RD2
  8865                           ;	MCLR Pin Enable bit
  8866                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  8867   300005                     	org	3145733
  8868   300005  B5                 	db	181
  8869                           
  8870                           ;Config register CONFIG4L @ 0x300006
  8871                           ;	Stack Full/Underflow Reset Enable bit
  8872                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8873                           ;	Single-Supply ICSP Enable bit
  8874                           ;	LVP = OFF, Single-Supply ICSP disabled
  8875                           ;	Extended Instruction Set Enable bit
  8876                           ;	XINST = 0x0, unprogrammed default
  8877                           ;	Background Debug
  8878                           ;	DEBUG = OFF, Disabled
  8879   300006                     	org	3145734
  8880   300006  80                 	db	128
  8881                           
  8882                           ; Padding undefined space
  8883   300007                     	org	3145735
  8884   300007  FF                 	db	255
  8885                           
  8886                           ;Config register CONFIG5L @ 0x300008
  8887                           ;	unspecified, using default values
  8888                           ;	Code Protection Block 0
  8889                           ;	CP0 = 0x1, unprogrammed default
  8890                           ;	Code Protection Block 1
  8891                           ;	CP1 = 0x1, unprogrammed default
  8892                           ;	Code Protection Block 2
  8893                           ;	CP2 = 0x1, unprogrammed default
  8894                           ;	Code Protection Block 3
  8895                           ;	CP3 = 0x1, unprogrammed default
  8896   300008                     	org	3145736
  8897   300008  0F                 	db	15
  8898                           
  8899                           ;Config register CONFIG5H @ 0x300009
  8900                           ;	unspecified, using default values
  8901                           ;	Boot Block Code Protection bit
  8902                           ;	CPB = 0x1, unprogrammed default
  8903                           ;	Data EEPROM Code Protection bit
  8904                           ;	CPD = 0x1, unprogrammed default
  8905   300009                     	org	3145737
  8906   300009  C0                 	db	192
  8907                           
  8908                           ;Config register CONFIG6L @ 0x30000A
  8909                           ;	unspecified, using default values
  8910                           ;	Write Protection Block 0
  8911                           ;	WRT0 = 0x1, unprogrammed default
  8912                           ;	Write Protection Block 1
  8913                           ;	WRT1 = 0x1, unprogrammed default
  8914                           ;	Write Protection Block 2
  8915                           ;	WRT2 = 0x1, unprogrammed default
  8916                           ;	Write Protection Block 3
  8917                           ;	WRT3 = 0x1, unprogrammed default
  8918   30000A                     	org	3145738
  8919   30000A  0F                 	db	15
  8920                           
  8921                           ;Config register CONFIG6H @ 0x30000B
  8922                           ;	unspecified, using default values
  8923                           ;	Configuration Register Write Protection bit
  8924                           ;	WRTC = 0x1, unprogrammed default
  8925                           ;	Boot Block Write Protection bit
  8926                           ;	WRTB = 0x1, unprogrammed default
  8927                           ;	Data EEPROM Write Protection bit
  8928                           ;	WRTD = 0x1, unprogrammed default
  8929   30000B                     	org	3145739
  8930   30000B  E0                 	db	224
  8931                           
  8932                           ;Config register CONFIG7L @ 0x30000C
  8933                           ;	unspecified, using default values
  8934                           ;	Table Read Protection Block 0
  8935                           ;	EBTR0 = 0x1, unprogrammed default
  8936                           ;	Table Read Protection Block 1
  8937                           ;	EBTR1 = 0x1, unprogrammed default
  8938                           ;	Table Read Protection Block 2
  8939                           ;	EBTR2 = 0x1, unprogrammed default
  8940                           ;	Table Read Protection Block 3
  8941                           ;	EBTR3 = 0x1, unprogrammed default
  8942   30000C                     	org	3145740
  8943   30000C  0F                 	db	15
  8944                           
  8945                           ;Config register CONFIG7H @ 0x30000D
  8946                           ;	unspecified, using default values
  8947                           ;	Boot Block Table Read Protection bit
  8948                           ;	EBTRB = 0x1, unprogrammed default
  8949   30000D                     	org	3145741
  8950   30000D  40                 	db	64
  8951                           tosu	equ	0xFFF
  8952                           tosh	equ	0xFFE
  8953                           tosl	equ	0xFFD
  8954                           stkptr	equ	0xFFC
  8955                           pclatu	equ	0xFFB
  8956                           pclath	equ	0xFFA
  8957                           pcl	equ	0xFF9
  8958                           tblptru	equ	0xFF8
  8959                           tblptrh	equ	0xFF7
  8960                           tblptrl	equ	0xFF6
  8961                           tablat	equ	0xFF5
  8962                           prodh	equ	0xFF4
  8963                           prodl	equ	0xFF3
  8964                           indf0	equ	0xFEF
  8965                           postinc0	equ	0xFEE
  8966                           postdec0	equ	0xFED
  8967                           preinc0	equ	0xFEC
  8968                           plusw0	equ	0xFEB
  8969                           fsr0h	equ	0xFEA
  8970                           fsr0l	equ	0xFE9
  8971                           wreg	equ	0xFE8
  8972                           indf1	equ	0xFE7
  8973                           postinc1	equ	0xFE6
  8974                           postdec1	equ	0xFE5
  8975                           preinc1	equ	0xFE4
  8976                           plusw1	equ	0xFE3
  8977                           fsr1h	equ	0xFE2
  8978                           fsr1l	equ	0xFE1
  8979                           bsr	equ	0xFE0
  8980                           indf2	equ	0xFDF
  8981                           postinc2	equ	0xFDE
  8982                           postdec2	equ	0xFDD
  8983                           preinc2	equ	0xFDC
  8984                           plusw2	equ	0xFDB
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    104     116
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    DHT11_Read_Data@hum	PTR float  size(1) Largest target is 4
		 -> main@hum(BANK0[4]), 

    DHT11_Read_Data@tem	PTR float  size(1) Largest target is 4
		 -> main@temp(BANK0[4]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buf1(BANK0[20]), main@buf2(BANK0[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buf1(BANK0[20]), main@buf2(BANK0[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Write_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> main@buf1(BANK0[20]), main@buf2(BANK0[20]), STR_1(CODE[13]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1065$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buf1(BANK0[20]), main@buf2(BANK0[20]), 

    S1065$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), STR_3(CODE[13]), STR_4(CODE[13]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@buf1(BANK0[20]), main@buf2(BANK0[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_5(CODE[4]), STR_8(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), STR_3(CODE[13]), STR_4(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), STR_3(CODE[13]), STR_4(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), STR_3(CODE[13]), STR_4(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_I2C_Write
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_I2C_Write
    _DHT11_Read_Data->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0   17493
                                             91 COMRAM     2     2      0
                                             56 BANK0     48    48      0
                    _DHT11_Read_Data
                    _I2C_Init_Master
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _OSC_Init
                             ___flge
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   12267
                                             85 COMRAM     6     0      6
                                             44 BANK0     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   12058
                                             81 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   11921
                                             71 COMRAM    10     7      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   10923
                                             63 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3      77
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     711
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     333
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     234
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2041
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1478
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     194
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _OSC_Init                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     2     0      2     225
                                              4 COMRAM     2     0      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     177
                                              1 COMRAM     3     3      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     259
                                              4 COMRAM     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     177
                                              4 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            1     1      0     177
                                              4 COMRAM     1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     177
                                              1 COMRAM     3     3      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init_Master                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Read_Data                                     18    16      2    3904
                                             55 COMRAM    18    16      2
                    _DHT11_Read_Byte
                     _DHT11_Response
                        _DHT11_Start
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     340
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1135
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1992
                                             39 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Response                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read_Byte                                      6     4      2      71
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_Read_Data
     _DHT11_Read_Byte
     _DHT11_Response
     _DHT11_Start
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___xxtofl
   _I2C_Init_Master
   _Lcd_Clear
     _Lcd_Cmd
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _OSC_Init
   ___flge
     ___flmul (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBANK0           160      0       0      0.0%
BANK0              160    104     116     72.5%
BITBIGSFRh         118      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     93      94     98.9%
BITBIGSFRll         68      0       0      0.0%
BITBIGSFRlh          8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     289      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 26 21:03:03 2025

              ___fldiv@aexp 0027                ___fldiv@bexp 0026                ___fldiv@sign 001F  
                        l70 2F50                          l46 2530                          l39 2FD8  
                        l80 2B3A                          l64 2F94                          l48 256A  
                        l81 2AE2                          l73 2F5E                          l67 2F42  
                        l76 2F6C                          l85 2B0C                          l88 2B42  
                        l97 2274                         l121 3044                         l122 3046  
                       l116 301E                         l125 3022                         l119 3036  
                       l127 3030                         l151 2FEE                         l128 3032  
                       l152 2FF2                         l171 2D52                         l149 2FE0  
                       l174 2E58                         l184 2C5E                         l193 2C06  
                       l178 2C0E                         l187 2E18                         l196 3008  
                       l464 2794                         l473 2F40                         l458 2A2C  
                       l820 1796                         l741 13B6                         l469 27DA  
                       l821 17B4                         l813 15A0                         l830 18C2  
                       l822 180C                         l727 120E                         l823 17FA  
                       l760 149E                         l744 1328                         l736 14DA  
                       l728 11FC                         l496 26D6                         l904 2B5A  
                       l753 13F6                         l729 11C2                         l817 1900  
                       l754 13E4                         l922 09C6                         l908 2BA8  
                       l924 080C                         l781 1C90                         l861 2364  
                       l854 22CC                         l783 1AF4                         l919 1024  
                       l792 1B3A                         l952 0E0C                         l793 1B58  
                       l857 2428                         l769 2D98                         l794 1BB0  
                       l786 1AB8                         l795 1B9E                         l868 23C0  
                       l964 2AC8                         l877 2F08                         l968 2AD0  
                       l978 1F48                         l988 20AE                         l996 2E96  
                       _pad 2B44                         wreg 0FE8                ___flmul@aexp 0012  
              ___flmul@bexp 0013                ___flmul@sign 000D                ___flmul@temp 0018  
              ___flmul@prod 0014                ___fltol@exp1 000A                        l1013 1EA2  
                      l1006 28D8                        l1016 1DE6                        l1033 2D04  
                      l1027 2CB4                        l1045 2982                        l1053 2DD8  
                      l1062 2ED0                        l1056 3048                        l3000 06D6  
                      l3010 0720                        l3002 06FC                        l3100 0B90  
                      l3020 0780                        l3012 0734                        l3004 070E  
                      l3110 0C4E                        l3102 0BC4                        l3022 0792  
                      l3014 073E                        l3006 0712                        l2400 1152  
                      l2320 28FA                        l3120 0D22                        l3112 0C5E  
                      l3104 0BF6                        l3024 0796                        l3008 0718  
                      l3200 2A36                        l2410 118E                        l2402 1156  
                      l2330 1026                        l2322 2904                        l3130 0D56  
                      l3122 0D36                        l3114 0C92                        l3106 0C0C  
                      l3050 08C6                        l3042 081C                        l3026 079C  
                      l3018 075A                        l3202 2A58                        l3210 2AA2  
                      l3300 2AF6                        l2500 145A                        l2420 11E0  
                      l2412 11AA                        l2404 115A                        l2340 1062  
                      l2332 1032                        l3212 3034                        l2324 2920  
                      l2316 28DA                        l3140 0E1E                        l3132 0D5E  
                      l3116 0CE8                        l3124 0D3A                        l3108 0C3E  
                      l3052 0904                        l3044 0822                        l3028 07A4  
                      l3036 07BC                        l3204 2A60                        l3220 1EC6  
                      l3302 2AFC                        l2510 14AC                        l2502 145C  
                      l2430 122C                        l2422 11EE                        l2414 11BA  
                      l2406 115E                        l2350 1090                        l2342 1072  
                      l2334 1040                        l3214 3020                        l3310 2E1C  
                      l2326 2952                        l2318 28EA                        l3150 0E4E  
                      l3142 0E2C                        l3134 0D6A                        l3126 0D4A  
                      l3118 0CEE                        l3070 09F2                        l3054 0918  
                      l3062 0994                        l3046 0856                        l3038 07D6  
                      l3206 2A7C                        l3230 1F0A                        l3222 1ECE  
                      l3304 2B0A                        l2520 14CA                        l2512 14B2  
                      l2504 146C                        l2440 126C                        l2424 11F0  
                      l2416 11D0                        l2408 1162                        l2360 10BA  
                      l2352 10A2                        l2344 1074                        l2336 1042  
                      l2600 1A84                        l3216 2FDC                        l3320 2E44  
                      l3312 2E2A                        l3400 2FBC                        l3160 0E80  
                      l3152 0E5E                        l3144 0E3C                        l3136 0DE2  
                      l3128 0D52                        l3080 0A36                        l3072 09FA  
                      l3064 09CE                        l3056 094C                        l3048 0894  
                      l3208 2A9A                        l3232 1F1E                        l3224 1EDC  
                      l3306 2B1A                        l2514 14B4                        l2506 147C  
                      l2450 1296                        l2442 1278                        l2434 1240  
                      l2426 11FA                        l2418 11DC                        l2362 10CA  
                      l2370 10F2                        l2354 10A4                        l2338 1052  
                      l2346 107A                        l2610 1AE0                        l2602 1A94  
                      l3410 3018                        l3322 2E4C                        l3314 2E2E  
                      l3330 2DEE                        l3402 2FC8                        l2530 2DB8  
                      l3170 0F28                        l3162 0E92                        l3154 0E62  
                      l3146 0E40                        l3138 0E02                        l3090 0A7C  
                      l3082 0A48                        l3074 09FE                        l3066 09DE  
                      l3058 0954                        l3242 1F4E                        l3234 1F28  
                      l3226 1EE0                        l3218 1EA4                        l3308 2B1E  
                      l2516 14BA                        l2508 149C                        l2460 1308  
                      l2444 127C                        l2436 1250                        l2428 121C  
                      l2452 129C                        l2380 112A                        l2372 1102  
                      l2364 10DA                        l2356 10AA                        l2348 108A  
                      l2620 1B20                        l2612 1AE2                        l2604 1AA8  
                      l2540 192E                        l2532 1902                        l3412 301A  
                      l3404 300C                        l3324 2E54                        l3316 2E34  
                      l3420 2D2A                        l3340 2E14                        l3332 2DF4  
                      l2700 1590                        l2524 2D9A                        l3180 0F76  
                      l3172 0F30                        l3164 0E96                        l3156 0E68  
                      l3148 0E46                        l3092 0AE0                        l3076 0A10  
                      l3084 0A50                        l3068 09EA                        l3252 1FDC  
                      l3244 1F6C                        l3236 1F3A                        l3228 1F02  
                      l3500 2454                        l2518 14C8                        l2470 1362  
                      l2454 12C2                        l2462 1318                        l2446 128A  
                      l2438 125E                        l2390 113E                        l2382 112E  
                      l2374 1114                        l2366 10EA                        l2358 10B8  
                      l2630 1B96                        l2622 1B2A                        l2614 1AF2  
                      l2606 1AB6                        l2550 1966                        l2542 193E  
                      l2534 190E                        l3350 22F2                        l3342 2278  
                      l3406 3010                        l3318 2E3C                        l3422 2D30  
                      l3414 2D06                        l3430 2C14                        l3334 2DFC  
                      l3326 2DDC                        l2710 15E0                        l2702 15B0  
                      l2526 2DA6                        l3190 0FEA                        l3182 0F84  
                      l3166 0E9C                        l3158 0E6E                        l3174 0F34  
                      l3094 0B38                        l3086 0A58                        l3078 0A1E  
                      l3262 202A                        l3254 1FF2                        l3246 1F8C  
                      l3238 1F40                        l3510 245E                        l3502 2456  
                      l2480 1392                        l2472 136C                        l2464 133E  
                      l2456 12F6                        l2448 128C                        l2392 1142  
                      l2384 1132                        l2376 1122                        l2368 10EC  
                      l2640 1C04                        l2624 1B38                        l2616 1B04  
                      l2608 1AC2                        l2560 1992                        l2552 196C  
                      l2544 194E                        l2536 191C                        l3360 234C  
                      l3344 2288                        l3408 3014                        l3424 2D36  
                      l3416 2D1E                        l3440 2C56                        l3432 2C1C  
                      l3336 2E04                        l3328 2DEA                        l2720 1630  
                      l2712 15EA                        l2704 15C0                        l2528 2DB4  
                      l3192 1000                        l3184 0FB4                        l3176 0F52  
                      l3168 0EF4                        l3096 0B6C                        l3088 0A68  
                      l3272 2080                        l3256 2000                        l3248 1FB4  
                      l3264 2042                        l3520 2476                        l3512 2460  
                      l3504 2458                        l3290 2F42                        l3282 2F6E  
                      l2490 13DC                        l2482 1396                        l2474 137A  
                      l2466 134E                        l2458 12F8                        l2394 1146  
                      l2386 1136                        l2378 1126                        l2650 1C6A  
                      l2634 1BC0                        l2642 1C08                        l2618 1B1A  
                      l2626 1B4A                        l2570 19CA                        l2562 19A2  
                      l2554 1972                        l2546 1950                        l2538 191E  
                      l3370 23B0                        l3362 234E                        l3354 2306  
                      l3346 2296                        l3450 2FF4                        l3426 2D3C  
                      l3418 2D24                        l3434 2C24                        l3338 2E0C  
                      l3442 2BAA                        l2810 2A00                        l2802 2984  
                      l2730 1672                        l2722 163C                        l2714 1600  
                      l3194 1008                        l3186 0FC2                        l3178 0F6E  
                      l3098 0B72                        l3266 2064                        l3530 24F8  
                      l3522 2486                        l3514 2462                        l3506 245A  
                      l3292 2AD2                        l3284 2F72                        l2484 13A6  
                      l2476 137C                        l2396 114A                        l2388 113A  
                      l2660 1C86                        l2652 1C6C                        l2644 1C22  
                      l2636 1BCC                        l2628 1B68                        l2572 19E0  
                      l2564 19B2                        l2556 1980                        l2548 1956  
                      l3380 2408                        l3372 23CE                        l3364 235A  
                      l3356 230E                        l3348 22DC                        l3452 2FFA  
                      l3436 2C2C                        l3428 2C0A                        l3444 2BAE  
                      l2812 2A24                        l2804 29B2                        l2820 2706  
                      l2740 16D4                        l2732 1682                        l2724 164A  
                      l2716 160C                        l2708 15D4                        l2900 2B7A  
                      l3188 0FDA                        l3268 206C                        l3276 208C  
                      l3540 257C                        l3532 252A                        l3524 249E  
                      l3516 2468                        l3508 245C                        l3286 2F8A  
                      l2494 1406                        l2478 138A                        l2486 13A8  
                      l2398 114E                        l2654 1C70                        l2646 1C38  
                      l2638 1BDA                        l2590 1A34                        l2574 19F0  
                      l2582 1A10                        l2566 19B4                        l2558 1982  
                      l3382 2416                        l3374 23D0                        l3366 2396  
                      l3358 231A                        l3470 20F8                        l3454 20B0  
                      l3438 2C52                        l3446 2BD2                        l2814 2A2A  
                      l2806 29C2                        l2830 2774                        l2822 2716  
                      l2750 177C                        l2742 16F0                        l2734 169C  
                      l2726 1656                        l2718 1624                        l2670 14E8  
                      l2910 2862                        l2902 2B98                        l3198 2A2E  
                      l3390 2E62                        l3550 2594                        l3542 2580  
                      l3534 2532                        l3526 24A2                        l3518 246C  
                      l3288 2F92                        l2496 1412                        l2488 13C6  
                      l2656 1C7E                        l2648 1C52                        l2592 1A4E  
                      l2584 1A20                        l2576 19F8                        l2568 19BA  
                      l3384 2418                        l3376 23D4                        l3368 23A2  
                      l3472 2220                        l3464 20C0                        l3456 20B4  
                      l3448 2BD6                        l2808 29F0                        l2832 2782  
                      l2824 2744                        l2760 17F2                        l2752 1786  
                      l2744 171A                        l2736 16AC                        l2728 1666  
                      l2680 1528                        l2672 14F6                        l2840 2F0A  
                      l2912 286E                        l2904 27DC                        l3392 2E72  
                      l3552 259E                        l3536 2564                        l3528 24C0  
                      l3298 2AF0                        l2498 1420                        l2658 1C84  
                      l2594 1A5E                        l2586 1A20                        l2578 19FC  
                      l3378 23F8                        l3474 2240                        l3466 20D8  
                      l3458 20B8                        l2834 27D2                        l2826 2754  
                      l2818 26D8                        l2770 1860                        l2754 1794  
                      l2746 1750                        l2738 16C8                        l2690 1558  
                      l2682 152E                        l2674 14F8                        l2842 2F20  
                      l2850 25E8                        l2922 28D0                        l2906 27FC  
                      l2930 2C60                        l3394 2E8E                        l3490 2EFC  
                      l3482 2ED2                        l3554 25A8                        l3546 2586  
                      l3538 2570                        l2596 1A6E                        l3476 2264  
                      l3468 20DC                        l2836 27D8                        l2828 2762  
                      l2780 18BC                        l2764 181C                        l2772 1864  
                      l2756 17A6                        l2748 175E                        l2692 155A  
                      l2684 153E                        l2676 1508                        l2668 14DC  
                      l2844 2F30                        l2860 2638                        l2908 283A  
                      l2916 287A                        l2940 1CB2                        l2932 2C6E  
                      l3388 2E5A                        l3484 2EDC                        l3556 25B2  
                      l3548 258A                        l2598 1A7E                        l3478 226C  
                      l3398 2FBA                        l2782 18C6                        l2790 18EC  
                      l2774 187E                        l2766 1828                        l2758 17C4  
                      l2694 156A                        l2686 1544                        l2678 1518  
                      l2870 2662                        l2862 263C                        l2854 25FC  
                      l2918 288C                        l2950 1D9A                        l2942 1D08  
                      l2934 2C82                        l2926 2E98                        l3486 2EE4  
                      l3494 242A                        ?_pad 000F                        l2792 18F0  
                      l2784 18D6                        l2776 1892                        l2768 1836  
                      l2696 157A                        l2688 154A                        l2880 268A  
                      l2872 266C                        l2864 264A                        l2856 2626  
                      l2848 25D2                        l2960 1E82                        l2952 1DD6  
                      l2944 1D1C                        l2928 2EA0                        l3488 2EEC  
                      l3496 244C                        l2786 18E4                        l2778 18AC  
                      l2698 158A                        l2882 2696                        l2874 2676  
                      l2858 2628                        l2962 1E92                        l2946 1D2A  
                      l2954 1E0A                        l2938 1C92                        l2970 2CD6  
                      l3498 2450                        l2788 18E6                        l2796 2D54  
                      l2884 26A6                        l2956 1E46                        l2972 2CDA  
                      l2892 2B44                        l2980 0656                        l2798 2D64  
                      l2886 26B6                        l2958 1E5A                        l2974 2CE6  
                      l2966 2CB6                        l2894 2B52                        l2990 069E  
                      l2982 0664                        l2888 26C6                        l2968 2CCA  
                      l2976 2CEA                        l2896 2B66                        l2992 06AE  
                      l2984 0668                        l2898 2B76                        l2994 06BE  
                      l2986 068C                        l2978 0642                        l2996 06CA  
                      l2988 0696                        l2998 06D2                        STR_1 0611  
                      STR_2 0601                        STR_3 061E                        STR_4 062B  
                      STR_5 0638                        STR_8 063C                        u2000 1040  
                      u2001 103C                        u2010 1052                        u2011 104E  
                      u2100 11A6                        u2020 1062                        u2101 11A0  
                      u2021 105E                        u2110 11A8                        u2030 10A2  
                      u2031 109E                        u2200 12C2                        u2120 11D0  
                      u2040 10B8                        u3000 281C                        u2201 12BE  
                      u2121 11CC                        u2041 10B4                        u2210 1308  
                      u2130 11EE                        u2050 10CA                        u3010 283A  
                      u2211 1304                        u2131 11EA                        u2051 10C6  
                      u3011 2836                        u2300 13F2                        u2220 133E  
                      u2140 120E                        u2060 10DA                        u3020 2862  
                      u3100 1D08                        u2301 13EE                        u2221 133A  
                      u2141 120A                        u2061 10D6                        u3021 285E  
                      u3005 2812                        u3101 1D04                        u2310 1406  
                      u2230 134E                        u2150 121C                        u2070 1114  
                      u3030 288C                        u3110 1D2A                        u2311 1402  
                      u2231 134A                        u2151 1218                        u2071 1110  
                      u3031 2888                        u3111 1D26                        u2320 1420  
                      u2240 137A                        u2160 122C                        u2080 1122  
                      u2400 191C                        u3200 0664                        u2321 141C  
                      u2241 1376                        u2161 1228                        u2081 111E  
                      u2401 1918                        u3201 0660                        u2330 145A  
                      u2250 138A                        u2170 125E                        u2090 118E  
                      u2410 192E                        u3050 28C6                        u3130 1D96  
                      u3210 06AE                        u2331 1456                        u2251 1386  
                      u2171 125A                        u2091 118A                        u2411 192A  
                      u3051 28C0                        u3131 1D92                        u3211 06AA  
                      u2340 146C                        u2260 13A6                        u2180 126C  
                      u2500 1AE0                        u2420 193E                        u3060 28C8  
                      u3140 1DBA                        u3300 0904                        u3220 06BE  
                      u2341 1468                        u2261 13A2                        u2181 1268  
                      u2501 1ADC                        u2421 193A                        u3045 289E  
                      u3125 1D3E                        u3301 0900                        u3221 06BA  
                      u2350 147C                        u2270 13B6                        u2190 128A  
                      u2510 1B04                        u2430 1980                        u3150 1DD6  
                      u3126 1D48                        u3070 2ED0                        u3310 0990  
                      u3230 06FC                        u2351 1478                        u2271 13B2  
                      u2191 1286                        u2511 1B00                        u2431 197C  
                      u3151 1DD2                        u3127 1D58                        u3071 2ECC  
                      u3311 098C                        u3231 06F8                        u2360 149C  
                      u2280 13C6                        u2600 1C22                        u2520 1B1A  
                      u2440 1992                        u3160 1E2A                        u3080 2C6E  
                      u3400 0C4E                        u3320 09C6                        u3240 070E  
                      u2361 1498                        u2281 13C2                        u2601 1C1E  
                      u2521 1B16                        u2441 198E                        u3145 1DB0  
                      u3081 2C6A                        u3401 0C4A                        u3321 09C2  
                      u3241 070A                        u2370 14AC                        u2290 13DC  
                      u2610 1C52                        u2530 1B38                        u2450 19A2  
                      u3170 1E46                        u3090 1CDA                        u3410 0CE8  
                      u3330 09DE                        u3250 0780                        u2371 14A8  
                      u2291 13D8                        u2611 1C4E                        u2531 1B34  
                      u2451 199E                        u3171 1E42                        u3411 0CE4  
                      u3331 09DA                        u3251 077C                        u2380 14C8  
                      u2620 1C7E                        u2540 1B58                        u2460 19E0  
                      u2700 15C0                        u3180 1E82                        u3500 0FD6  
                      u3420 0D36                        u3340 0A10                        u3260 0792  
                      u2381 14C4                        u2621 1C7A                        u2541 1B54  
                      u2461 19DC                        u2701 15BC                        u3181 1E7E  
                      u3165 1E20                        u3421 0D32                        u3341 0A0C  
                      u3261 078E                        u2550 1B68                        u2470 1A20  
                      u2710 173A                        u2630 14F6                        u3190 2D04  
                      u2390 2DD8                        u3510 0FEA                        u3430 0DE2  
                      u3350 0A1E                        u3270 0808                        u2551 1B64  
                      u2471 1A1C                        u2631 14F2                        u3095 1CD0  
                      u3191 2D00                        u2391 2DD4                        u3511 0FE6  
                      u3431 0DDE                        u3351 0A1A                        u3271 0804  
                      u2560 1B96                        u2480 1A94                        u2800 18AC  
                      u2720 1794                        u2640 1508                        u3440 0E1E  
                      u3360 0A48                        u3280 0894                        u3520 2A58  
                      u3600 2064                        u2561 1B92                        u2481 1A90  
                      u2801 18A8                        u2721 1790                        u2641 1504  
                      u3441 0E1A                        u3361 0A44                        u3281 0890  
                      u3521 2A54                        u3601 2060                        u3610 2F50  
                      u2570 1BAC                        u2490 1AB6                        u2810 18E4  
                      u2730 17B4                        u2650 1518                        u3450 0E2C  
                      u3370 0B90                        u3290 08C6                        u3530 2AC8  
                      u3611 2F4C                        u2571 1BA8                        u2491 1AB2  
                      u2811 18E0                        u2731 17B0                        u2715 1730  
                      u2651 1514                        u3451 0E28                        u3371 0B8C  
                      u3291 08C2                        u3531 2AC4                        u3620 2F5E  
                      u2580 1BC0                        u3700 22F2                        u3540 3044  
                      u2820 29B2                        u2740 17C4                        u2660 1558  
                      u2900 2F20                        u3460 0E80                        u3380 0BF6  
                      u3621 2F5A                        u2581 1BBC                        u3701 22EE  
                      u3541 3040                        u2821 29AE                        u2741 17C0  
                      u2661 1554                        u2901 2F1C                        u3461 0E7C  
                      u3381 0BF2                        u3630 2F6C                        u2590 1BDA  
                      u3710 2348                        u3550 3030                        u2830 29F0  
                      u2750 17F2                        u2670 156A                        u2910 25E8  
                      u3470 0F52                        u3390 0C3E                        u3631 2F68  
                      u2591 1BD6                        u3711 2344                        u3551 302C  
                      u2831 29EC                        u2751 17EE                        u2671 1566  
                      u2911 25E4                        u3471 0F4E                        u3391 0C3A  
                      u3640 2AF0                        u3720 2392                        u3560 2FEE  
                      u3800 2BF6                        u2840 2A24                        u2760 1808  
                      u2680 157A                        u2920 261C                        u1960 28EA  
                      u3480 0F6E                        u3641 2AEC                        u3721 238E  
                      u3561 2FEA                        u2841 2A20                        u2761 1804  
                      u2681 1576                        u1961 28E6                        u3481 0F6A  
                      u3650 2B0A                        u3730 23B0                        u3810 2C06  
                      u2850 2706                        u2770 181C                        u2690 15B0  
                      u2930 264A                        u1970 28FA                        u3490 0FD4  
                      u3570 1EC6                        u3651 2B06                        u3731 23AC  
                      u3811 2C02                        u2851 2702                        u2771 1818  
                      u2691 15AC                        u2931 2646                        u1971 28F6  
                      u3491 0FCE                        u3571 1EC2                        u3660 2B1A  
                      u3740 23C0                        u3820 20F8                        u2860 2744  
                      u2780 1836                        u2940 265E                        u1980 2920  
                      u3580 1F02                        u3661 2B16                        u3741 23BC  
                      u3821 20F4                        u2861 2740                        u2781 1832  
                      u2941 265A                        u2925 2612                        u1981 291C  
                      u3581 1EFE                        u3670 2B3A                        u3750 23CE  
                      u3830 2264                        u2870 2762                        u2790 187E  
                      u2950 2686                        u1990 2952                        u3590 1F88  
                      u3671 2B36                        u3751 23CA                        u3831 2260  
                      u3807 2BEC                        u2871 275E                        u2791 187A  
                      u2951 2682                        u1991 294E                        u3591 1F84  
                      u3760 2408                        u3680 2288                        u2880 2782  
                      u2960 26A6                        u3840 24C0                        u3761 2404  
                      u3681 2284                        u2881 277E                        u2961 26A2  
                      u3841 24BC                        u3770 2416                        u3690 2296  
                      u2890 27D2                        u2970 26B6                        u3850 252A  
                      u3771 2412                        u3691 2292                        u3907 2D10  
                      u2891 27CE                        u2971 26B2                        u3851 2526  
                      u2980 2B52                        u3780 2E8E                        u3860 2564  
                      u3917 2D48                        u2981 2B4E                        u3781 2E8A  
                      u3861 2560                        u3790 2BCE                        u2990 2B98  
                      u3927 3000                        u2991 2B94                        u3937 2F7C  
                      u3947 2F8E                        u3957 2AF2                        u3797 2BC4  
                      u3877 2490                        u3887 25BC                        u3897 2FCE  
       Lcd_Write_String@str 0005           ?_Lcd_Write_String 0005                        _dbuf 0100  
                      _labs 2C60                        _main 242A                        _prec 00D2  
                      pad@i 0015                        pad@p 0012                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9            __end_of_I2C_Stop 3034  
             ___fpclassifyf 27DC                        prodh 0FF4                        prodl 0FF3  
                      start 7FFC          ??_Lcd_Write_String 0007            ?_I2C_Init_Master 0001  
           ___fldiv@new_exp 0020             __end_of_Lcd_Cmd 2E5A                ___param_bank 0000  
                     ??_pad 0014            ??_DHT11_Response 0001               ___fltol@sign1 0009  
                     ?_labs 0001             __end_of___fladd 14DC                       ?_main 0001  
           __end_of___fldiv 1C92             __end_of___flneg 2F42             __end_of___flmul 1902  
           __end_of___flsub 2D9A             __end_of___fltol 26D8                       _LATD2 7C62  
                     _LATD3 7C63                vfpfcnvrt@fmt 0049            __end_of_OSC_Init 2FDA  
                     _flags 005E         read_prec_or_width@c 0005         read_prec_or_width@n 0006  
                     _fputc 28DA                       _fputs 2D9A                       labs@a 0001  
                     pad@fp 000F                       _width 00D0                       _putch 3048  
         __end_of_I2C_Start 3048           __end_of_I2C_Write 2FF4                       tablat 0FF5  
                     status 0FD8             __end_of_sprintf 2F0A              ?___fpclassifyf 0001  
         ??_DHT11_Read_Data 003A           ??_DHT11_Read_Byte 0003            __end_of_Lcd_Init 2D54  
           __initialization 2F96                __end_of_labs 2CB6                __end_of_main 25D2  
                    ??_labs 0005                      ??_main 005C               __activetblptr 0002  
       DHT11_Read_Data@info 003E  __end_of_read_prec_or_width 2AD2                      ?_fputc 0001  
                    ?_fputs 0009                      _ANSELA 0F38                      ?_putch 0001  
                    _ANSELB 0F39                      _ANSELC 0F3A                      _ANSELD 0F3B  
                 ??_Lcd_Cmd 0002                      _TRISD2 7CAA                      _TRISD3 7CAB  
          __end_of___xxtofl 242A         DHT11_Read_Byte@data 0003                vfprintf@cfmt 0055  
                    ___flge 26D8                      ___fleq 2984                   ??___fladd 0030  
                 ??___fldiv 0017                   ??___flneg 0005                   ??___flmul 0009  
                 ??___flsub 0040                   ??___fltol 0005                      _efgtoa 0642  
                    _floorf 1C92                      _memcpy 2CB6        read_prec_or_width@ap 0002  
                    clear_0 2F9C                      clear_1 2FA8                      isa$std 0001  
                    pad@buf 0010                      _strcpy 2E98                      fputc@c 0001  
                    fputs@c 000C                      fputs@i 000D                      fputs@s 0009  
          Lcd_Write_Char@hi 0003            Lcd_Write_Char@lo 0004                   ?_I2C_Stop 0001  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 0600                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      putch@c 0001            __end_of_vfprintf 2E98  
                 ??_sprintf 005C                  ___flge@ff1 001A                  ___flge@ff2 001E  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 2FB0                  ___flneg@f1 0001  
         __end_of_Lcd_Clear 300A               ___rparam_used 0001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001                   ?_OSC_Init 0001               __end_of_fputc 2984  
             __end_of_fputs 2DDA               __end_of_putch 304A              _Lcd_Set_Cursor 2C08  
                ??_I2C_Stop 0001                   ?_Lcd_Init 0001                     ??_fputc 0004  
                   ??_fputs 000C                     ??_putch 0001                  __pbssBANK0 00C8  
                __pbssBANK1 0100                     ?___flge 001A                     ?___fleq 0001  
                ??_OSC_Init 0001                     ?_efgtoa 0040                     ?_floorf 0028  
                   ?_memcpy 0001      __end_of_Lcd_Set_Cursor 2C60                     ?_strcpy 0001  
                 ?___xxtofl 0001                  ??_Lcd_Init 0005                     _SSP1ADD 0FC8  
                   _SSP1BUF 0FC9             _DHT11_Read_Data 20B0             _DHT11_Read_Byte 2AD2  
            _Lcd_Write_Char 2DDA                     _Lcd_Cmd 2E1A               ??_DHT11_Start 0001  
                 _I2C_Start 3034                   _I2C_Write 2FDA                     __Hparam 0000  
                   __Lparam 0000                     ___fladd 1026                     ___fldiv 1902  
                   ___flneg 2F0A                     ___flmul 14DC                     ___flsub 2D54  
                   ___fltol 25D2                   ?_vfprintf 0052                __psmallconst 0600  
                   __pcinit 2F96                     __ramtop 0600             ?_Lcd_Set_Cursor 0005  
                   __ptext0 242A                     __ptext1 2ED2                     __ptext2 2E5A  
                   __ptext3 1EA4                     __ptext4 2A2E                     __ptext5 0642  
                   __ptext6 2E98                     __ptext7 2B44                     __ptext8 2D9A  
                   __ptext9 28DA       read_prec_or_width@fmt 0001                  ??___xxtofl 0005  
                   efgtoa@c 0045                     efgtoa@d 006B                     efgtoa@e 006F  
                   efgtoa@f 0041                     efgtoa@g 0084                     efgtoa@h 0079  
                   efgtoa@i 0077                     efgtoa@l 007D                     efgtoa@m 006D  
                   efgtoa@n 0082                     efgtoa@p 0062                     efgtoa@t 0064  
                   efgtoa@u 0088                     efgtoa@w 0071                     _sprintf 2ED2  
                   main@hum 00C4      __end_of_Lcd_Write_Char 2E1A        end_of_initialization 2FB0  
                   floorf@e 0036                     floorf@m 0032                     floorf@u 0038  
                   floorf@x 0028                     memcpy@d 0007                     memcpy@n 0005  
                   memcpy@s 0009                     fputc@fp 0003               __Lmediumconst 0000  
                   fputs@fp 000B          _read_prec_or_width 2A2E                  ?_I2C_Start 0001  
                ?_I2C_Write 0001                   Lcd_Cmd@hi 0003                   Lcd_Cmd@lo 0004  
         __end_of_vfpfcnvrt 20B0                  efgtoa@mode 0069                  efgtoa@sign 0081  
       __end_of_DHT11_Start 2F96                     postdec2 0FDD         ?_read_prec_or_width 0001  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 004C                  ??_vfprintf 0055                     strcpy@d 0005  
                 _PORTAbits 0F80     __end_of_DHT11_Read_Data 2276     __end_of_DHT11_Read_Byte 2B44  
               ___fladd@grs 0037               ___xxtofl@sign 0009                   _TRISAbits 0F92  
                 _TRISCbits 0F94        ??_read_prec_or_width 0003                 ___fldiv@grs 0022  
               ___fldiv@rem 001B             ?_Lcd_Write_Char 0001                 ___flmul@grs 000E  
                 _Lcd_Clear 2FF4              __end_of___flge 27DC              __end_of___fleq 2A2E  
               vfpfcnvrt@ap 004A                 vfpfcnvrt@cp 0051                 vfpfcnvrt@fp 0048  
          _Lcd_Write_String 2BAA              __end_of_efgtoa 1026              __end_of_floorf 1EA4  
            __end_of_memcpy 2D06                  floorf@F521 00C8              __end_of_strcpy 2ED2  
       start_initialization 2F96           ??_I2C_Init_Master 0001                 __end_of_pad 2BAA  
        I2C_Init_Master@brg 0001          DHT11_Read_Data@hum 0039          DHT11_Read_Data@tem 0038  
        DHT11_Read_Data@sum 003C       __end_of___fpclassifyf 28DA                 _DHT11_Start 2F6E  
               ??_I2C_Start 0001                 ??_I2C_Write 0001                 vfprintf@fmt 0053  
                ?_Lcd_Clear 0001                    ??___flge 0022                    ??___fleq 0009  
                  ??_efgtoa 0046                    ??_floorf 002C                    ??_memcpy 0007  
           Lcd_Write_Char@c 0002                    ??_strcpy 0004                   ___fladd@a 002C  
                 ___fladd@b 0028            ?_DHT11_Read_Data 0038            ?_DHT11_Read_Byte 0001  
                 ___fldiv@a 0013                   ___fldiv@b 000F                   ___flmul@a 0005  
                 ___flmul@b 0001                 __pbssCOMRAM 005E                   ___flsub@a 003C  
                 ___flsub@b 0038               __pcstackBANK0 0060            DHT11_Read_Data@i 0048  
          DHT11_Read_Byte@i 0005                    ?_Lcd_Cmd 0001                 _efgtoa$1190 0066  
          ??_Lcd_Set_Cursor 0006                    ?___fladd 0028                    ?___fldiv 000F  
                  ?___flneg 0001                    ?___flmul 0001                    ?___flsub 0038  
                  ?___fltol 0001                 __smallconst 0600                    _I2C_Stop 3020  
            _DHT11_Response 2F42                    ?_sprintf 0056                    _LATAbits 0F89  
                  _PIR1bits 0F9E                 ??_Lcd_Clear 0005                    _SSP1CON1 0FC6  
                  _SSP1CON2 0FC5                    _OSC_Init 2FBA                    _SSP1STAT 0FC7  
                 _vfpfcnvrt 1EA4            ??_Lcd_Write_Char 0002      __end_of_DHT11_Response 2F6E  
                  _Lcd_Init 2D06                  vfpfcnvrt@c 0050    __end_of_Lcd_Write_String 2C08  
                  __Hrparam 0000                   memcpy@tmp 000B                  vfprintf@ap 0054  
                  __Lrparam 0000                  vfprintf@fp 0052             _I2C_Init_Master 300A  
             I2C_Write@data 0001                  ?_vfpfcnvrt 0048          ___fpclassifyf@F465 00CC  
                sprintf@fmt 0057                    ___xxtofl 2276             ?_DHT11_Response 0001  
                  __ptext10 3048                    __ptext11 2CB6                    __ptext20 2984  
                  __ptext12 2C60                    __ptext21 2FBA                    __ptext13 1C92  
                  __ptext30 3034                    __ptext22 2BAA                    __ptext14 27DC  
                  __ptext31 300A                    __ptext23 2DDA                    __ptext15 25D2  
                  __ptext32 20B0                    __ptext24 2C08                    __ptext16 2D54  
                  __ptext33 2276                    __ptext25 2D06                    __ptext17 2F0A  
                  __ptext34 1902                    __ptext26 2FF4                    __ptext18 14DC  
                  __ptext35 1026                    __ptext27 2E1A                    __ptext19 26D8  
                  __ptext36 2F6E                    __ptext28 2FDA                    __ptext37 2F42  
                  __ptext29 3020                    __ptext38 2AD2                _SSP1CON2bits 0FC5  
                strcpy@dest 0001                ?_DHT11_Start 0001                    efgtoa@fp 0040  
                  efgtoa@ne 0060                    efgtoa@pp 0068                    efgtoa@ou 0073  
                  isa$xinst 0000                    _vfprintf 2E5A                    main@buf1 00AC  
                  main@buf2 0098                    main@temp 00C0                 _OSCTUNEbits 0F9B  
                  memcpy@d1 0001                    memcpy@s1 0003                   sprintf@ap 008C  
                 strcpy@src 0003     __end_of_I2C_Init_Master 3020                  Lcd_Cmd@cmd 0002  
                _OSCCONbits 0FD3                 efgtoa@nmode 006A          Lcd_Set_Cursor@addr 0007  
               ??_vfpfcnvrt 004B                    sprintf@f 008D                    sprintf@s 0056  
         Lcd_Set_Cursor@col 0006           Lcd_Set_Cursor@row 0005               ___fladd@signs 0034  
              ___fladd@aexp 0035                ___fladd@bexp 0036  
